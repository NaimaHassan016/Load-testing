/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 9.0, "minX": 0.0, "maxY": 6992.0, "series": [{"data": [[0.0, 9.0], [0.1, 9.0], [0.2, 9.0], [0.3, 10.0], [0.4, 10.0], [0.5, 10.0], [0.6, 10.0], [0.7, 10.0], [0.8, 10.0], [0.9, 10.0], [1.0, 10.0], [1.1, 10.0], [1.2, 10.0], [1.3, 10.0], [1.4, 10.0], [1.5, 10.0], [1.6, 10.0], [1.7, 10.0], [1.8, 10.0], [1.9, 10.0], [2.0, 10.0], [2.1, 10.0], [2.2, 10.0], [2.3, 10.0], [2.4, 10.0], [2.5, 10.0], [2.6, 10.0], [2.7, 10.0], [2.8, 10.0], [2.9, 10.0], [3.0, 11.0], [3.1, 11.0], [3.2, 11.0], [3.3, 11.0], [3.4, 11.0], [3.5, 11.0], [3.6, 11.0], [3.7, 11.0], [3.8, 11.0], [3.9, 11.0], [4.0, 11.0], [4.1, 11.0], [4.2, 11.0], [4.3, 11.0], [4.4, 11.0], [4.5, 11.0], [4.6, 11.0], [4.7, 11.0], [4.8, 11.0], [4.9, 11.0], [5.0, 11.0], [5.1, 11.0], [5.2, 11.0], [5.3, 11.0], [5.4, 11.0], [5.5, 11.0], [5.6, 11.0], [5.7, 11.0], [5.8, 11.0], [5.9, 11.0], [6.0, 11.0], [6.1, 11.0], [6.2, 11.0], [6.3, 11.0], [6.4, 11.0], [6.5, 11.0], [6.6, 11.0], [6.7, 11.0], [6.8, 11.0], [6.9, 11.0], [7.0, 11.0], [7.1, 11.0], [7.2, 11.0], [7.3, 11.0], [7.4, 11.0], [7.5, 11.0], [7.6, 11.0], [7.7, 11.0], [7.8, 11.0], [7.9, 12.0], [8.0, 12.0], [8.1, 12.0], [8.2, 12.0], [8.3, 12.0], [8.4, 12.0], [8.5, 12.0], [8.6, 12.0], [8.7, 12.0], [8.8, 12.0], [8.9, 12.0], [9.0, 12.0], [9.1, 12.0], [9.2, 12.0], [9.3, 12.0], [9.4, 12.0], [9.5, 12.0], [9.6, 12.0], [9.7, 12.0], [9.8, 12.0], [9.9, 12.0], [10.0, 12.0], [10.1, 12.0], [10.2, 12.0], [10.3, 12.0], [10.4, 12.0], [10.5, 12.0], [10.6, 12.0], [10.7, 12.0], [10.8, 12.0], [10.9, 12.0], [11.0, 12.0], [11.1, 12.0], [11.2, 12.0], [11.3, 12.0], [11.4, 12.0], [11.5, 12.0], [11.6, 12.0], [11.7, 12.0], [11.8, 12.0], [11.9, 12.0], [12.0, 12.0], [12.1, 12.0], [12.2, 12.0], [12.3, 12.0], [12.4, 12.0], [12.5, 12.0], [12.6, 12.0], [12.7, 12.0], [12.8, 12.0], [12.9, 12.0], [13.0, 12.0], [13.1, 12.0], [13.2, 12.0], [13.3, 12.0], [13.4, 12.0], [13.5, 12.0], [13.6, 12.0], [13.7, 12.0], [13.8, 12.0], [13.9, 12.0], [14.0, 12.0], [14.1, 12.0], [14.2, 12.0], [14.3, 12.0], [14.4, 13.0], [14.5, 13.0], [14.6, 13.0], [14.7, 13.0], [14.8, 13.0], [14.9, 13.0], [15.0, 13.0], [15.1, 13.0], [15.2, 13.0], [15.3, 13.0], [15.4, 13.0], [15.5, 13.0], [15.6, 13.0], [15.7, 13.0], [15.8, 13.0], [15.9, 13.0], [16.0, 13.0], [16.1, 13.0], [16.2, 13.0], [16.3, 13.0], [16.4, 13.0], [16.5, 13.0], [16.6, 13.0], [16.7, 13.0], [16.8, 13.0], [16.9, 13.0], [17.0, 13.0], [17.1, 13.0], [17.2, 13.0], [17.3, 13.0], [17.4, 13.0], [17.5, 13.0], [17.6, 13.0], [17.7, 13.0], [17.8, 13.0], [17.9, 13.0], [18.0, 13.0], [18.1, 13.0], [18.2, 13.0], [18.3, 13.0], [18.4, 13.0], [18.5, 13.0], [18.6, 13.0], [18.7, 13.0], [18.8, 13.0], [18.9, 13.0], [19.0, 13.0], [19.1, 13.0], [19.2, 13.0], [19.3, 13.0], [19.4, 13.0], [19.5, 13.0], [19.6, 13.0], [19.7, 13.0], [19.8, 13.0], [19.9, 13.0], [20.0, 13.0], [20.1, 13.0], [20.2, 13.0], [20.3, 13.0], [20.4, 13.0], [20.5, 13.0], [20.6, 13.0], [20.7, 13.0], [20.8, 13.0], [20.9, 13.0], [21.0, 13.0], [21.1, 13.0], [21.2, 13.0], [21.3, 13.0], [21.4, 13.0], [21.5, 13.0], [21.6, 13.0], [21.7, 13.0], [21.8, 13.0], [21.9, 13.0], [22.0, 13.0], [22.1, 13.0], [22.2, 13.0], [22.3, 13.0], [22.4, 13.0], [22.5, 13.0], [22.6, 13.0], [22.7, 13.0], [22.8, 14.0], [22.9, 14.0], [23.0, 14.0], [23.1, 14.0], [23.2, 14.0], [23.3, 14.0], [23.4, 14.0], [23.5, 14.0], [23.6, 14.0], [23.7, 14.0], [23.8, 14.0], [23.9, 14.0], [24.0, 14.0], [24.1, 14.0], [24.2, 14.0], [24.3, 14.0], [24.4, 14.0], [24.5, 14.0], [24.6, 14.0], [24.7, 14.0], [24.8, 14.0], [24.9, 14.0], [25.0, 14.0], [25.1, 14.0], [25.2, 14.0], [25.3, 14.0], [25.4, 14.0], [25.5, 14.0], [25.6, 14.0], [25.7, 14.0], [25.8, 14.0], [25.9, 14.0], [26.0, 14.0], [26.1, 14.0], [26.2, 14.0], [26.3, 14.0], [26.4, 14.0], [26.5, 14.0], [26.6, 14.0], [26.7, 14.0], [26.8, 14.0], [26.9, 14.0], [27.0, 14.0], [27.1, 14.0], [27.2, 14.0], [27.3, 14.0], [27.4, 14.0], [27.5, 14.0], [27.6, 14.0], [27.7, 14.0], [27.8, 14.0], [27.9, 14.0], [28.0, 14.0], [28.1, 14.0], [28.2, 14.0], [28.3, 14.0], [28.4, 14.0], [28.5, 14.0], [28.6, 14.0], [28.7, 14.0], [28.8, 14.0], [28.9, 14.0], [29.0, 14.0], [29.1, 14.0], [29.2, 14.0], [29.3, 14.0], [29.4, 14.0], [29.5, 14.0], [29.6, 14.0], [29.7, 14.0], [29.8, 14.0], [29.9, 14.0], [30.0, 14.0], [30.1, 14.0], [30.2, 14.0], [30.3, 14.0], [30.4, 14.0], [30.5, 14.0], [30.6, 14.0], [30.7, 14.0], [30.8, 14.0], [30.9, 14.0], [31.0, 14.0], [31.1, 14.0], [31.2, 14.0], [31.3, 15.0], [31.4, 15.0], [31.5, 15.0], [31.6, 15.0], [31.7, 15.0], [31.8, 15.0], [31.9, 15.0], [32.0, 15.0], [32.1, 15.0], [32.2, 15.0], [32.3, 15.0], [32.4, 15.0], [32.5, 15.0], [32.6, 15.0], [32.7, 15.0], [32.8, 15.0], [32.9, 15.0], [33.0, 15.0], [33.1, 15.0], [33.2, 15.0], [33.3, 15.0], [33.4, 15.0], [33.5, 15.0], [33.6, 15.0], [33.7, 15.0], [33.8, 15.0], [33.9, 15.0], [34.0, 15.0], [34.1, 15.0], [34.2, 15.0], [34.3, 15.0], [34.4, 15.0], [34.5, 15.0], [34.6, 15.0], [34.7, 15.0], [34.8, 15.0], [34.9, 15.0], [35.0, 15.0], [35.1, 15.0], [35.2, 15.0], [35.3, 15.0], [35.4, 15.0], [35.5, 15.0], [35.6, 15.0], [35.7, 15.0], [35.8, 15.0], [35.9, 15.0], [36.0, 15.0], [36.1, 15.0], [36.2, 15.0], [36.3, 15.0], [36.4, 15.0], [36.5, 15.0], [36.6, 15.0], [36.7, 15.0], [36.8, 15.0], [36.9, 15.0], [37.0, 15.0], [37.1, 15.0], [37.2, 15.0], [37.3, 15.0], [37.4, 15.0], [37.5, 15.0], [37.6, 15.0], [37.7, 15.0], [37.8, 15.0], [37.9, 15.0], [38.0, 15.0], [38.1, 15.0], [38.2, 15.0], [38.3, 15.0], [38.4, 15.0], [38.5, 15.0], [38.6, 15.0], [38.7, 15.0], [38.8, 15.0], [38.9, 15.0], [39.0, 15.0], [39.1, 15.0], [39.2, 15.0], [39.3, 15.0], [39.4, 15.0], [39.5, 15.0], [39.6, 15.0], [39.7, 15.0], [39.8, 15.0], [39.9, 15.0], [40.0, 16.0], [40.1, 16.0], [40.2, 16.0], [40.3, 16.0], [40.4, 16.0], [40.5, 16.0], [40.6, 16.0], [40.7, 16.0], [40.8, 16.0], [40.9, 16.0], [41.0, 16.0], [41.1, 16.0], [41.2, 16.0], [41.3, 16.0], [41.4, 16.0], [41.5, 16.0], [41.6, 16.0], [41.7, 16.0], [41.8, 16.0], [41.9, 16.0], [42.0, 16.0], [42.1, 16.0], [42.2, 16.0], [42.3, 16.0], [42.4, 16.0], [42.5, 16.0], [42.6, 16.0], [42.7, 16.0], [42.8, 16.0], [42.9, 16.0], [43.0, 16.0], [43.1, 16.0], [43.2, 16.0], [43.3, 16.0], [43.4, 16.0], [43.5, 16.0], [43.6, 16.0], [43.7, 16.0], [43.8, 16.0], [43.9, 16.0], [44.0, 16.0], [44.1, 16.0], [44.2, 16.0], [44.3, 16.0], [44.4, 16.0], [44.5, 16.0], [44.6, 16.0], [44.7, 16.0], [44.8, 16.0], [44.9, 16.0], [45.0, 16.0], [45.1, 16.0], [45.2, 16.0], [45.3, 16.0], [45.4, 16.0], [45.5, 16.0], [45.6, 16.0], [45.7, 16.0], [45.8, 16.0], [45.9, 16.0], [46.0, 16.0], [46.1, 16.0], [46.2, 17.0], [46.3, 17.0], [46.4, 17.0], [46.5, 17.0], [46.6, 17.0], [46.7, 17.0], [46.8, 17.0], [46.9, 17.0], [47.0, 17.0], [47.1, 17.0], [47.2, 17.0], [47.3, 17.0], [47.4, 17.0], [47.5, 17.0], [47.6, 17.0], [47.7, 17.0], [47.8, 17.0], [47.9, 17.0], [48.0, 17.0], [48.1, 17.0], [48.2, 17.0], [48.3, 17.0], [48.4, 17.0], [48.5, 17.0], [48.6, 17.0], [48.7, 17.0], [48.8, 17.0], [48.9, 17.0], [49.0, 17.0], [49.1, 17.0], [49.2, 17.0], [49.3, 17.0], [49.4, 17.0], [49.5, 17.0], [49.6, 17.0], [49.7, 17.0], [49.8, 17.0], [49.9, 17.0], [50.0, 17.0], [50.1, 17.0], [50.2, 17.0], [50.3, 17.0], [50.4, 17.0], [50.5, 17.0], [50.6, 17.0], [50.7, 17.0], [50.8, 17.0], [50.9, 17.0], [51.0, 17.0], [51.1, 17.0], [51.2, 17.0], [51.3, 17.0], [51.4, 17.0], [51.5, 17.0], [51.6, 17.0], [51.7, 17.0], [51.8, 17.0], [51.9, 17.0], [52.0, 17.0], [52.1, 18.0], [52.2, 18.0], [52.3, 18.0], [52.4, 18.0], [52.5, 18.0], [52.6, 18.0], [52.7, 18.0], [52.8, 18.0], [52.9, 18.0], [53.0, 18.0], [53.1, 18.0], [53.2, 18.0], [53.3, 18.0], [53.4, 18.0], [53.5, 18.0], [53.6, 18.0], [53.7, 18.0], [53.8, 18.0], [53.9, 18.0], [54.0, 18.0], [54.1, 18.0], [54.2, 18.0], [54.3, 18.0], [54.4, 18.0], [54.5, 18.0], [54.6, 18.0], [54.7, 18.0], [54.8, 18.0], [54.9, 18.0], [55.0, 18.0], [55.1, 18.0], [55.2, 18.0], [55.3, 18.0], [55.4, 18.0], [55.5, 18.0], [55.6, 18.0], [55.7, 18.0], [55.8, 18.0], [55.9, 18.0], [56.0, 18.0], [56.1, 18.0], [56.2, 18.0], [56.3, 18.0], [56.4, 18.0], [56.5, 18.0], [56.6, 18.0], [56.7, 18.0], [56.8, 18.0], [56.9, 19.0], [57.0, 19.0], [57.1, 19.0], [57.2, 19.0], [57.3, 19.0], [57.4, 19.0], [57.5, 19.0], [57.6, 19.0], [57.7, 19.0], [57.8, 19.0], [57.9, 19.0], [58.0, 19.0], [58.1, 19.0], [58.2, 19.0], [58.3, 19.0], [58.4, 19.0], [58.5, 19.0], [58.6, 19.0], [58.7, 19.0], [58.8, 19.0], [58.9, 19.0], [59.0, 19.0], [59.1, 19.0], [59.2, 19.0], [59.3, 19.0], [59.4, 19.0], [59.5, 19.0], [59.6, 19.0], [59.7, 19.0], [59.8, 19.0], [59.9, 19.0], [60.0, 19.0], [60.1, 19.0], [60.2, 19.0], [60.3, 19.0], [60.4, 19.0], [60.5, 19.0], [60.6, 19.0], [60.7, 19.0], [60.8, 19.0], [60.9, 19.0], [61.0, 19.0], [61.1, 19.0], [61.2, 19.0], [61.3, 19.0], [61.4, 19.0], [61.5, 20.0], [61.6, 20.0], [61.7, 20.0], [61.8, 20.0], [61.9, 20.0], [62.0, 20.0], [62.1, 20.0], [62.2, 20.0], [62.3, 20.0], [62.4, 20.0], [62.5, 20.0], [62.6, 20.0], [62.7, 20.0], [62.8, 20.0], [62.9, 20.0], [63.0, 20.0], [63.1, 20.0], [63.2, 20.0], [63.3, 20.0], [63.4, 20.0], [63.5, 20.0], [63.6, 20.0], [63.7, 20.0], [63.8, 20.0], [63.9, 20.0], [64.0, 20.0], [64.1, 20.0], [64.2, 20.0], [64.3, 20.0], [64.4, 20.0], [64.5, 20.0], [64.6, 20.0], [64.7, 20.0], [64.8, 20.0], [64.9, 20.0], [65.0, 20.0], [65.1, 20.0], [65.2, 20.0], [65.3, 21.0], [65.4, 21.0], [65.5, 21.0], [65.6, 21.0], [65.7, 21.0], [65.8, 21.0], [65.9, 21.0], [66.0, 21.0], [66.1, 21.0], [66.2, 21.0], [66.3, 21.0], [66.4, 21.0], [66.5, 21.0], [66.6, 21.0], [66.7, 21.0], [66.8, 21.0], [66.9, 21.0], [67.0, 21.0], [67.1, 21.0], [67.2, 21.0], [67.3, 21.0], [67.4, 21.0], [67.5, 21.0], [67.6, 21.0], [67.7, 21.0], [67.8, 21.0], [67.9, 22.0], [68.0, 22.0], [68.1, 22.0], [68.2, 22.0], [68.3, 22.0], [68.4, 22.0], [68.5, 22.0], [68.6, 22.0], [68.7, 22.0], [68.8, 22.0], [68.9, 22.0], [69.0, 22.0], [69.1, 22.0], [69.2, 22.0], [69.3, 22.0], [69.4, 22.0], [69.5, 22.0], [69.6, 22.0], [69.7, 22.0], [69.8, 22.0], [69.9, 22.0], [70.0, 22.0], [70.1, 22.0], [70.2, 22.0], [70.3, 22.0], [70.4, 22.0], [70.5, 22.0], [70.6, 22.0], [70.7, 23.0], [70.8, 23.0], [70.9, 23.0], [71.0, 23.0], [71.1, 23.0], [71.2, 23.0], [71.3, 23.0], [71.4, 23.0], [71.5, 23.0], [71.6, 23.0], [71.7, 23.0], [71.8, 23.0], [71.9, 23.0], [72.0, 23.0], [72.1, 23.0], [72.2, 23.0], [72.3, 23.0], [72.4, 23.0], [72.5, 23.0], [72.6, 23.0], [72.7, 23.0], [72.8, 23.0], [72.9, 23.0], [73.0, 23.0], [73.1, 23.0], [73.2, 23.0], [73.3, 23.0], [73.4, 23.0], [73.5, 23.0], [73.6, 24.0], [73.7, 24.0], [73.8, 24.0], [73.9, 24.0], [74.0, 24.0], [74.1, 24.0], [74.2, 24.0], [74.3, 24.0], [74.4, 24.0], [74.5, 24.0], [74.6, 24.0], [74.7, 24.0], [74.8, 24.0], [74.9, 24.0], [75.0, 24.0], [75.1, 24.0], [75.2, 24.0], [75.3, 24.0], [75.4, 24.0], [75.5, 24.0], [75.6, 24.0], [75.7, 24.0], [75.8, 24.0], [75.9, 24.0], [76.0, 24.0], [76.1, 24.0], [76.2, 24.0], [76.3, 24.0], [76.4, 24.0], [76.5, 24.0], [76.6, 24.0], [76.7, 24.0], [76.8, 24.0], [76.9, 24.0], [77.0, 24.0], [77.1, 25.0], [77.2, 25.0], [77.3, 25.0], [77.4, 25.0], [77.5, 25.0], [77.6, 25.0], [77.7, 25.0], [77.8, 25.0], [77.9, 25.0], [78.0, 25.0], [78.1, 25.0], [78.2, 25.0], [78.3, 25.0], [78.4, 25.0], [78.5, 25.0], [78.6, 25.0], [78.7, 25.0], [78.8, 25.0], [78.9, 25.0], [79.0, 25.0], [79.1, 25.0], [79.2, 25.0], [79.3, 25.0], [79.4, 25.0], [79.5, 25.0], [79.6, 25.0], [79.7, 25.0], [79.8, 26.0], [79.9, 26.0], [80.0, 26.0], [80.1, 26.0], [80.2, 26.0], [80.3, 26.0], [80.4, 26.0], [80.5, 26.0], [80.6, 26.0], [80.7, 26.0], [80.8, 26.0], [80.9, 26.0], [81.0, 26.0], [81.1, 27.0], [81.2, 27.0], [81.3, 27.0], [81.4, 27.0], [81.5, 27.0], [81.6, 27.0], [81.7, 27.0], [81.8, 27.0], [81.9, 27.0], [82.0, 27.0], [82.1, 27.0], [82.2, 27.0], [82.3, 27.0], [82.4, 27.0], [82.5, 27.0], [82.6, 27.0], [82.7, 28.0], [82.8, 28.0], [82.9, 28.0], [83.0, 28.0], [83.1, 28.0], [83.2, 28.0], [83.3, 28.0], [83.4, 28.0], [83.5, 28.0], [83.6, 28.0], [83.7, 28.0], [83.8, 28.0], [83.9, 28.0], [84.0, 28.0], [84.1, 28.0], [84.2, 28.0], [84.3, 28.0], [84.4, 28.0], [84.5, 29.0], [84.6, 29.0], [84.7, 29.0], [84.8, 29.0], [84.9, 29.0], [85.0, 29.0], [85.1, 29.0], [85.2, 29.0], [85.3, 29.0], [85.4, 29.0], [85.5, 30.0], [85.6, 30.0], [85.7, 30.0], [85.8, 30.0], [85.9, 30.0], [86.0, 30.0], [86.1, 31.0], [86.2, 31.0], [86.3, 31.0], [86.4, 31.0], [86.5, 31.0], [86.6, 31.0], [86.7, 31.0], [86.8, 31.0], [86.9, 31.0], [87.0, 31.0], [87.1, 31.0], [87.2, 31.0], [87.3, 31.0], [87.4, 32.0], [87.5, 32.0], [87.6, 32.0], [87.7, 32.0], [87.8, 32.0], [87.9, 32.0], [88.0, 33.0], [88.1, 33.0], [88.2, 33.0], [88.3, 33.0], [88.4, 33.0], [88.5, 33.0], [88.6, 33.0], [88.7, 33.0], [88.8, 33.0], [88.9, 33.0], [89.0, 34.0], [89.1, 34.0], [89.2, 34.0], [89.3, 34.0], [89.4, 34.0], [89.5, 34.0], [89.6, 34.0], [89.7, 34.0], [89.8, 34.0], [89.9, 34.0], [90.0, 34.0], [90.1, 34.0], [90.2, 34.0], [90.3, 35.0], [90.4, 35.0], [90.5, 35.0], [90.6, 36.0], [90.7, 36.0], [90.8, 36.0], [90.9, 36.0], [91.0, 36.0], [91.1, 36.0], [91.2, 36.0], [91.3, 37.0], [91.4, 37.0], [91.5, 37.0], [91.6, 37.0], [91.7, 38.0], [91.8, 38.0], [91.9, 38.0], [92.0, 38.0], [92.1, 38.0], [92.2, 39.0], [92.3, 39.0], [92.4, 40.0], [92.5, 40.0], [92.6, 40.0], [92.7, 40.0], [92.8, 41.0], [92.9, 42.0], [93.0, 42.0], [93.1, 42.0], [93.2, 42.0], [93.3, 43.0], [93.4, 43.0], [93.5, 43.0], [93.6, 44.0], [93.7, 44.0], [93.8, 44.0], [93.9, 45.0], [94.0, 45.0], [94.1, 45.0], [94.2, 45.0], [94.3, 46.0], [94.4, 46.0], [94.5, 46.0], [94.6, 46.0], [94.7, 47.0], [94.8, 47.0], [94.9, 47.0], [95.0, 47.0], [95.1, 48.0], [95.2, 48.0], [95.3, 49.0], [95.4, 50.0], [95.5, 50.0], [95.6, 50.0], [95.7, 50.0], [95.8, 50.0], [95.9, 50.0], [96.0, 51.0], [96.1, 51.0], [96.2, 52.0], [96.3, 54.0], [96.4, 55.0], [96.5, 55.0], [96.6, 55.0], [96.7, 56.0], [96.8, 56.0], [96.9, 56.0], [97.0, 56.0], [97.1, 57.0], [97.2, 57.0], [97.3, 58.0], [97.4, 59.0], [97.5, 59.0], [97.6, 60.0], [97.7, 61.0], [97.8, 62.0], [97.9, 62.0], [98.0, 63.0], [98.1, 65.0], [98.2, 66.0], [98.3, 66.0], [98.4, 67.0], [98.5, 69.0], [98.6, 69.0], [98.7, 70.0], [98.8, 70.0], [98.9, 71.0], [99.0, 72.0], [99.1, 73.0], [99.2, 76.0], [99.3, 79.0], [99.4, 82.0], [99.5, 83.0], [99.6, 85.0], [99.7, 99.0], [99.8, 99.0], [99.9, 100.0]], "isOverall": false, "label": "User", "isController": false}, {"data": [[0.0, 682.0], [0.1, 684.0], [0.2, 684.0], [0.3, 684.0], [0.4, 686.0], [0.5, 688.0], [0.6, 689.0], [0.7, 691.0], [0.8, 693.0], [0.9, 696.0], [1.0, 698.0], [1.1, 698.0], [1.2, 698.0], [1.3, 698.0], [1.4, 699.0], [1.5, 702.0], [1.6, 703.0], [1.7, 703.0], [1.8, 704.0], [1.9, 705.0], [2.0, 706.0], [2.1, 708.0], [2.2, 709.0], [2.3, 713.0], [2.4, 715.0], [2.5, 718.0], [2.6, 719.0], [2.7, 730.0], [2.8, 733.0], [2.9, 733.0], [3.0, 733.0], [3.1, 734.0], [3.2, 735.0], [3.3, 735.0], [3.4, 735.0], [3.5, 735.0], [3.6, 735.0], [3.7, 736.0], [3.8, 736.0], [3.9, 737.0], [4.0, 739.0], [4.1, 739.0], [4.2, 740.0], [4.3, 741.0], [4.4, 741.0], [4.5, 742.0], [4.6, 742.0], [4.7, 742.0], [4.8, 743.0], [4.9, 743.0], [5.0, 743.0], [5.1, 743.0], [5.2, 744.0], [5.3, 744.0], [5.4, 745.0], [5.5, 745.0], [5.6, 745.0], [5.7, 745.0], [5.8, 745.0], [5.9, 746.0], [6.0, 746.0], [6.1, 747.0], [6.2, 747.0], [6.3, 747.0], [6.4, 747.0], [6.5, 747.0], [6.6, 748.0], [6.7, 748.0], [6.8, 748.0], [6.9, 748.0], [7.0, 749.0], [7.1, 750.0], [7.2, 750.0], [7.3, 751.0], [7.4, 751.0], [7.5, 752.0], [7.6, 752.0], [7.7, 752.0], [7.8, 753.0], [7.9, 753.0], [8.0, 754.0], [8.1, 754.0], [8.2, 755.0], [8.3, 757.0], [8.4, 757.0], [8.5, 757.0], [8.6, 757.0], [8.7, 757.0], [8.8, 758.0], [8.9, 758.0], [9.0, 758.0], [9.1, 758.0], [9.2, 759.0], [9.3, 761.0], [9.4, 761.0], [9.5, 762.0], [9.6, 762.0], [9.7, 762.0], [9.8, 762.0], [9.9, 763.0], [10.0, 763.0], [10.1, 764.0], [10.2, 764.0], [10.3, 765.0], [10.4, 765.0], [10.5, 766.0], [10.6, 766.0], [10.7, 766.0], [10.8, 766.0], [10.9, 767.0], [11.0, 767.0], [11.1, 767.0], [11.2, 767.0], [11.3, 767.0], [11.4, 769.0], [11.5, 770.0], [11.6, 770.0], [11.7, 771.0], [11.8, 772.0], [11.9, 772.0], [12.0, 773.0], [12.1, 774.0], [12.2, 774.0], [12.3, 774.0], [12.4, 777.0], [12.5, 778.0], [12.6, 778.0], [12.7, 785.0], [12.8, 787.0], [12.9, 788.0], [13.0, 788.0], [13.1, 789.0], [13.2, 789.0], [13.3, 791.0], [13.4, 795.0], [13.5, 796.0], [13.6, 797.0], [13.7, 800.0], [13.8, 800.0], [13.9, 802.0], [14.0, 802.0], [14.1, 803.0], [14.2, 803.0], [14.3, 806.0], [14.4, 807.0], [14.5, 808.0], [14.6, 808.0], [14.7, 809.0], [14.8, 813.0], [14.9, 815.0], [15.0, 818.0], [15.1, 819.0], [15.2, 820.0], [15.3, 820.0], [15.4, 821.0], [15.5, 823.0], [15.6, 823.0], [15.7, 823.0], [15.8, 824.0], [15.9, 825.0], [16.0, 825.0], [16.1, 825.0], [16.2, 825.0], [16.3, 825.0], [16.4, 825.0], [16.5, 826.0], [16.6, 826.0], [16.7, 826.0], [16.8, 826.0], [16.9, 827.0], [17.0, 828.0], [17.1, 828.0], [17.2, 828.0], [17.3, 828.0], [17.4, 829.0], [17.5, 829.0], [17.6, 829.0], [17.7, 829.0], [17.8, 830.0], [17.9, 830.0], [18.0, 831.0], [18.1, 831.0], [18.2, 831.0], [18.3, 831.0], [18.4, 832.0], [18.5, 832.0], [18.6, 833.0], [18.7, 833.0], [18.8, 834.0], [18.9, 834.0], [19.0, 834.0], [19.1, 834.0], [19.2, 835.0], [19.3, 835.0], [19.4, 836.0], [19.5, 836.0], [19.6, 836.0], [19.7, 837.0], [19.8, 837.0], [19.9, 838.0], [20.0, 838.0], [20.1, 839.0], [20.2, 839.0], [20.3, 839.0], [20.4, 839.0], [20.5, 839.0], [20.6, 840.0], [20.7, 840.0], [20.8, 840.0], [20.9, 841.0], [21.0, 841.0], [21.1, 842.0], [21.2, 842.0], [21.3, 843.0], [21.4, 843.0], [21.5, 843.0], [21.6, 844.0], [21.7, 845.0], [21.8, 845.0], [21.9, 846.0], [22.0, 847.0], [22.1, 849.0], [22.2, 850.0], [22.3, 851.0], [22.4, 851.0], [22.5, 851.0], [22.6, 852.0], [22.7, 852.0], [22.8, 852.0], [22.9, 853.0], [23.0, 854.0], [23.1, 854.0], [23.2, 855.0], [23.3, 855.0], [23.4, 855.0], [23.5, 856.0], [23.6, 856.0], [23.7, 857.0], [23.8, 858.0], [23.9, 858.0], [24.0, 858.0], [24.1, 858.0], [24.2, 859.0], [24.3, 859.0], [24.4, 859.0], [24.5, 860.0], [24.6, 860.0], [24.7, 861.0], [24.8, 861.0], [24.9, 863.0], [25.0, 863.0], [25.1, 864.0], [25.2, 864.0], [25.3, 864.0], [25.4, 864.0], [25.5, 866.0], [25.6, 867.0], [25.7, 868.0], [25.8, 868.0], [25.9, 870.0], [26.0, 870.0], [26.1, 875.0], [26.2, 875.0], [26.3, 876.0], [26.4, 877.0], [26.5, 877.0], [26.6, 879.0], [26.7, 880.0], [26.8, 880.0], [26.9, 880.0], [27.0, 882.0], [27.1, 884.0], [27.2, 884.0], [27.3, 884.0], [27.4, 885.0], [27.5, 886.0], [27.6, 894.0], [27.7, 894.0], [27.8, 898.0], [27.9, 899.0], [28.0, 900.0], [28.1, 902.0], [28.2, 902.0], [28.3, 905.0], [28.4, 909.0], [28.5, 909.0], [28.6, 915.0], [28.7, 918.0], [28.8, 918.0], [28.9, 923.0], [29.0, 925.0], [29.1, 925.0], [29.2, 930.0], [29.3, 930.0], [29.4, 932.0], [29.5, 933.0], [29.6, 933.0], [29.7, 934.0], [29.8, 934.0], [29.9, 935.0], [30.0, 935.0], [30.1, 935.0], [30.2, 936.0], [30.3, 937.0], [30.4, 939.0], [30.5, 939.0], [30.6, 941.0], [30.7, 944.0], [30.8, 944.0], [30.9, 945.0], [31.0, 953.0], [31.1, 954.0], [31.2, 954.0], [31.3, 1090.0], [31.4, 1097.0], [31.5, 1097.0], [31.6, 1099.0], [31.7, 1100.0], [31.8, 1100.0], [31.9, 1100.0], [32.0, 1101.0], [32.1, 1101.0], [32.2, 1102.0], [32.3, 1102.0], [32.4, 1102.0], [32.5, 1102.0], [32.6, 1102.0], [32.7, 1102.0], [32.8, 1102.0], [32.9, 1102.0], [33.0, 1102.0], [33.1, 1103.0], [33.2, 1103.0], [33.3, 1103.0], [33.4, 1103.0], [33.5, 1103.0], [33.6, 1103.0], [33.7, 1103.0], [33.8, 1103.0], [33.9, 1103.0], [34.0, 1103.0], [34.1, 1103.0], [34.2, 1104.0], [34.3, 1104.0], [34.4, 1104.0], [34.5, 1104.0], [34.6, 1105.0], [34.7, 1105.0], [34.8, 1105.0], [34.9, 1105.0], [35.0, 1105.0], [35.1, 1105.0], [35.2, 1105.0], [35.3, 1105.0], [35.4, 1105.0], [35.5, 1105.0], [35.6, 1105.0], [35.7, 1105.0], [35.8, 1105.0], [35.9, 1105.0], [36.0, 1105.0], [36.1, 1105.0], [36.2, 1106.0], [36.3, 1106.0], [36.4, 1106.0], [36.5, 1106.0], [36.6, 1106.0], [36.7, 1106.0], [36.8, 1106.0], [36.9, 1106.0], [37.0, 1106.0], [37.1, 1106.0], [37.2, 1106.0], [37.3, 1106.0], [37.4, 1106.0], [37.5, 1106.0], [37.6, 1106.0], [37.7, 1106.0], [37.8, 1107.0], [37.9, 1107.0], [38.0, 1107.0], [38.1, 1107.0], [38.2, 1107.0], [38.3, 1107.0], [38.4, 1107.0], [38.5, 1107.0], [38.6, 1107.0], [38.7, 1107.0], [38.8, 1107.0], [38.9, 1107.0], [39.0, 1107.0], [39.1, 1107.0], [39.2, 1107.0], [39.3, 1107.0], [39.4, 1107.0], [39.5, 1107.0], [39.6, 1107.0], [39.7, 1107.0], [39.8, 1107.0], [39.9, 1107.0], [40.0, 1107.0], [40.1, 1107.0], [40.2, 1107.0], [40.3, 1107.0], [40.4, 1108.0], [40.5, 1108.0], [40.6, 1108.0], [40.7, 1108.0], [40.8, 1108.0], [40.9, 1108.0], [41.0, 1108.0], [41.1, 1108.0], [41.2, 1108.0], [41.3, 1108.0], [41.4, 1108.0], [41.5, 1108.0], [41.6, 1108.0], [41.7, 1108.0], [41.8, 1108.0], [41.9, 1108.0], [42.0, 1108.0], [42.1, 1108.0], [42.2, 1108.0], [42.3, 1108.0], [42.4, 1108.0], [42.5, 1109.0], [42.6, 1109.0], [42.7, 1109.0], [42.8, 1109.0], [42.9, 1109.0], [43.0, 1109.0], [43.1, 1109.0], [43.2, 1109.0], [43.3, 1109.0], [43.4, 1109.0], [43.5, 1109.0], [43.6, 1109.0], [43.7, 1109.0], [43.8, 1109.0], [43.9, 1109.0], [44.0, 1109.0], [44.1, 1109.0], [44.2, 1109.0], [44.3, 1109.0], [44.4, 1109.0], [44.5, 1109.0], [44.6, 1109.0], [44.7, 1109.0], [44.8, 1109.0], [44.9, 1110.0], [45.0, 1110.0], [45.1, 1110.0], [45.2, 1110.0], [45.3, 1110.0], [45.4, 1110.0], [45.5, 1110.0], [45.6, 1110.0], [45.7, 1110.0], [45.8, 1110.0], [45.9, 1110.0], [46.0, 1110.0], [46.1, 1110.0], [46.2, 1110.0], [46.3, 1110.0], [46.4, 1110.0], [46.5, 1110.0], [46.6, 1110.0], [46.7, 1110.0], [46.8, 1110.0], [46.9, 1110.0], [47.0, 1110.0], [47.1, 1110.0], [47.2, 1110.0], [47.3, 1110.0], [47.4, 1110.0], [47.5, 1110.0], [47.6, 1110.0], [47.7, 1110.0], [47.8, 1110.0], [47.9, 1111.0], [48.0, 1111.0], [48.1, 1111.0], [48.2, 1111.0], [48.3, 1111.0], [48.4, 1111.0], [48.5, 1111.0], [48.6, 1111.0], [48.7, 1111.0], [48.8, 1111.0], [48.9, 1111.0], [49.0, 1111.0], [49.1, 1111.0], [49.2, 1111.0], [49.3, 1111.0], [49.4, 1111.0], [49.5, 1111.0], [49.6, 1111.0], [49.7, 1111.0], [49.8, 1111.0], [49.9, 1111.0], [50.0, 1111.0], [50.1, 1111.0], [50.2, 1112.0], [50.3, 1112.0], [50.4, 1112.0], [50.5, 1112.0], [50.6, 1112.0], [50.7, 1112.0], [50.8, 1112.0], [50.9, 1112.0], [51.0, 1112.0], [51.1, 1112.0], [51.2, 1112.0], [51.3, 1112.0], [51.4, 1112.0], [51.5, 1112.0], [51.6, 1112.0], [51.7, 1112.0], [51.8, 1112.0], [51.9, 1112.0], [52.0, 1112.0], [52.1, 1113.0], [52.2, 1113.0], [52.3, 1113.0], [52.4, 1113.0], [52.5, 1113.0], [52.6, 1113.0], [52.7, 1113.0], [52.8, 1113.0], [52.9, 1113.0], [53.0, 1113.0], [53.1, 1113.0], [53.2, 1113.0], [53.3, 1113.0], [53.4, 1113.0], [53.5, 1113.0], [53.6, 1113.0], [53.7, 1113.0], [53.8, 1113.0], [53.9, 1113.0], [54.0, 1114.0], [54.1, 1114.0], [54.2, 1114.0], [54.3, 1114.0], [54.4, 1114.0], [54.5, 1114.0], [54.6, 1114.0], [54.7, 1114.0], [54.8, 1114.0], [54.9, 1114.0], [55.0, 1114.0], [55.1, 1114.0], [55.2, 1114.0], [55.3, 1114.0], [55.4, 1115.0], [55.5, 1115.0], [55.6, 1115.0], [55.7, 1115.0], [55.8, 1115.0], [55.9, 1115.0], [56.0, 1115.0], [56.1, 1115.0], [56.2, 1115.0], [56.3, 1115.0], [56.4, 1115.0], [56.5, 1115.0], [56.6, 1115.0], [56.7, 1116.0], [56.8, 1116.0], [56.9, 1116.0], [57.0, 1116.0], [57.1, 1116.0], [57.2, 1116.0], [57.3, 1116.0], [57.4, 1116.0], [57.5, 1116.0], [57.6, 1116.0], [57.7, 1116.0], [57.8, 1116.0], [57.9, 1116.0], [58.0, 1116.0], [58.1, 1116.0], [58.2, 1116.0], [58.3, 1116.0], [58.4, 1116.0], [58.5, 1116.0], [58.6, 1116.0], [58.7, 1117.0], [58.8, 1117.0], [58.9, 1117.0], [59.0, 1117.0], [59.1, 1117.0], [59.2, 1117.0], [59.3, 1117.0], [59.4, 1117.0], [59.5, 1117.0], [59.6, 1117.0], [59.7, 1117.0], [59.8, 1117.0], [59.9, 1117.0], [60.0, 1117.0], [60.1, 1117.0], [60.2, 1117.0], [60.3, 1117.0], [60.4, 1117.0], [60.5, 1117.0], [60.6, 1117.0], [60.7, 1117.0], [60.8, 1117.0], [60.9, 1117.0], [61.0, 1117.0], [61.1, 1118.0], [61.2, 1118.0], [61.3, 1118.0], [61.4, 1118.0], [61.5, 1118.0], [61.6, 1118.0], [61.7, 1118.0], [61.8, 1118.0], [61.9, 1118.0], [62.0, 1118.0], [62.1, 1118.0], [62.2, 1118.0], [62.3, 1118.0], [62.4, 1118.0], [62.5, 1118.0], [62.6, 1119.0], [62.7, 1119.0], [62.8, 1119.0], [62.9, 1119.0], [63.0, 1119.0], [63.1, 1119.0], [63.2, 1119.0], [63.3, 1119.0], [63.4, 1119.0], [63.5, 1119.0], [63.6, 1119.0], [63.7, 1119.0], [63.8, 1119.0], [63.9, 1119.0], [64.0, 1119.0], [64.1, 1119.0], [64.2, 1119.0], [64.3, 1119.0], [64.4, 1119.0], [64.5, 1119.0], [64.6, 1119.0], [64.7, 1119.0], [64.8, 1119.0], [64.9, 1119.0], [65.0, 1119.0], [65.1, 1120.0], [65.2, 1120.0], [65.3, 1120.0], [65.4, 1120.0], [65.5, 1120.0], [65.6, 1120.0], [65.7, 1120.0], [65.8, 1120.0], [65.9, 1120.0], [66.0, 1120.0], [66.1, 1120.0], [66.2, 1120.0], [66.3, 1120.0], [66.4, 1120.0], [66.5, 1120.0], [66.6, 1120.0], [66.7, 1120.0], [66.8, 1120.0], [66.9, 1121.0], [67.0, 1121.0], [67.1, 1121.0], [67.2, 1121.0], [67.3, 1121.0], [67.4, 1121.0], [67.5, 1121.0], [67.6, 1121.0], [67.7, 1121.0], [67.8, 1121.0], [67.9, 1121.0], [68.0, 1121.0], [68.1, 1121.0], [68.2, 1121.0], [68.3, 1121.0], [68.4, 1121.0], [68.5, 1121.0], [68.6, 1121.0], [68.7, 1121.0], [68.8, 1121.0], [68.9, 1121.0], [69.0, 1121.0], [69.1, 1121.0], [69.2, 1121.0], [69.3, 1122.0], [69.4, 1122.0], [69.5, 1122.0], [69.6, 1122.0], [69.7, 1122.0], [69.8, 1122.0], [69.9, 1122.0], [70.0, 1122.0], [70.1, 1122.0], [70.2, 1122.0], [70.3, 1122.0], [70.4, 1123.0], [70.5, 1123.0], [70.6, 1123.0], [70.7, 1123.0], [70.8, 1123.0], [70.9, 1123.0], [71.0, 1123.0], [71.1, 1123.0], [71.2, 1123.0], [71.3, 1123.0], [71.4, 1124.0], [71.5, 1124.0], [71.6, 1124.0], [71.7, 1124.0], [71.8, 1124.0], [71.9, 1124.0], [72.0, 1124.0], [72.1, 1124.0], [72.2, 1124.0], [72.3, 1124.0], [72.4, 1124.0], [72.5, 1124.0], [72.6, 1124.0], [72.7, 1124.0], [72.8, 1124.0], [72.9, 1124.0], [73.0, 1124.0], [73.1, 1124.0], [73.2, 1124.0], [73.3, 1124.0], [73.4, 1124.0], [73.5, 1124.0], [73.6, 1124.0], [73.7, 1125.0], [73.8, 1125.0], [73.9, 1125.0], [74.0, 1125.0], [74.1, 1125.0], [74.2, 1125.0], [74.3, 1125.0], [74.4, 1125.0], [74.5, 1125.0], [74.6, 1125.0], [74.7, 1125.0], [74.8, 1125.0], [74.9, 1125.0], [75.0, 1125.0], [75.1, 1125.0], [75.2, 1125.0], [75.3, 1126.0], [75.4, 1126.0], [75.5, 1126.0], [75.6, 1126.0], [75.7, 1126.0], [75.8, 1126.0], [75.9, 1126.0], [76.0, 1126.0], [76.1, 1126.0], [76.2, 1126.0], [76.3, 1126.0], [76.4, 1126.0], [76.5, 1126.0], [76.6, 1126.0], [76.7, 1126.0], [76.8, 1126.0], [76.9, 1126.0], [77.0, 1126.0], [77.1, 1127.0], [77.2, 1127.0], [77.3, 1127.0], [77.4, 1127.0], [77.5, 1127.0], [77.6, 1127.0], [77.7, 1127.0], [77.8, 1127.0], [77.9, 1127.0], [78.0, 1127.0], [78.1, 1127.0], [78.2, 1127.0], [78.3, 1127.0], [78.4, 1128.0], [78.5, 1128.0], [78.6, 1128.0], [78.7, 1128.0], [78.8, 1128.0], [78.9, 1128.0], [79.0, 1129.0], [79.1, 1129.0], [79.2, 1129.0], [79.3, 1129.0], [79.4, 1129.0], [79.5, 1129.0], [79.6, 1129.0], [79.7, 1129.0], [79.8, 1129.0], [79.9, 1129.0], [80.0, 1129.0], [80.1, 1129.0], [80.2, 1129.0], [80.3, 1129.0], [80.4, 1129.0], [80.5, 1130.0], [80.6, 1130.0], [80.7, 1130.0], [80.8, 1130.0], [80.9, 1130.0], [81.0, 1130.0], [81.1, 1130.0], [81.2, 1130.0], [81.3, 1130.0], [81.4, 1130.0], [81.5, 1130.0], [81.6, 1131.0], [81.7, 1131.0], [81.8, 1131.0], [81.9, 1131.0], [82.0, 1131.0], [82.1, 1131.0], [82.2, 1131.0], [82.3, 1131.0], [82.4, 1131.0], [82.5, 1132.0], [82.6, 1132.0], [82.7, 1132.0], [82.8, 1132.0], [82.9, 1132.0], [83.0, 1132.0], [83.1, 1132.0], [83.2, 1133.0], [83.3, 1133.0], [83.4, 1133.0], [83.5, 1133.0], [83.6, 1133.0], [83.7, 1133.0], [83.8, 1133.0], [83.9, 1134.0], [84.0, 1134.0], [84.1, 1135.0], [84.2, 1135.0], [84.3, 1135.0], [84.4, 1135.0], [84.5, 1135.0], [84.6, 1135.0], [84.7, 1135.0], [84.8, 1135.0], [84.9, 1135.0], [85.0, 1136.0], [85.1, 1136.0], [85.2, 1136.0], [85.3, 1136.0], [85.4, 1136.0], [85.5, 1137.0], [85.6, 1138.0], [85.7, 1138.0], [85.8, 1138.0], [85.9, 1138.0], [86.0, 1139.0], [86.1, 1139.0], [86.2, 1139.0], [86.3, 1139.0], [86.4, 1140.0], [86.5, 1140.0], [86.6, 1140.0], [86.7, 1141.0], [86.8, 1141.0], [86.9, 1141.0], [87.0, 1141.0], [87.1, 1141.0], [87.2, 1141.0], [87.3, 1141.0], [87.4, 1141.0], [87.5, 1142.0], [87.6, 1142.0], [87.7, 1142.0], [87.8, 1142.0], [87.9, 1142.0], [88.0, 1143.0], [88.1, 1143.0], [88.2, 1143.0], [88.3, 1143.0], [88.4, 1144.0], [88.5, 1144.0], [88.6, 1144.0], [88.7, 1144.0], [88.8, 1145.0], [88.9, 1145.0], [89.0, 1146.0], [89.1, 1146.0], [89.2, 1146.0], [89.3, 1147.0], [89.4, 1148.0], [89.5, 1148.0], [89.6, 1149.0], [89.7, 1149.0], [89.8, 1149.0], [89.9, 1150.0], [90.0, 1153.0], [90.1, 1154.0], [90.2, 1155.0], [90.3, 1157.0], [90.4, 1159.0], [90.5, 1160.0], [90.6, 1160.0], [90.7, 1162.0], [90.8, 1162.0], [90.9, 1163.0], [91.0, 1167.0], [91.1, 1168.0], [91.2, 1170.0], [91.3, 1171.0], [91.4, 1180.0], [91.5, 1186.0], [91.6, 2099.0], [91.7, 2102.0], [91.8, 2103.0], [91.9, 2103.0], [92.0, 2104.0], [92.1, 2105.0], [92.2, 2106.0], [92.3, 2106.0], [92.4, 2108.0], [92.5, 2109.0], [92.6, 2109.0], [92.7, 2111.0], [92.8, 2111.0], [92.9, 2112.0], [93.0, 2112.0], [93.1, 2113.0], [93.2, 2113.0], [93.3, 2113.0], [93.4, 2113.0], [93.5, 2113.0], [93.6, 2113.0], [93.7, 2114.0], [93.8, 2114.0], [93.9, 2115.0], [94.0, 2116.0], [94.1, 2116.0], [94.2, 2117.0], [94.3, 2118.0], [94.4, 2118.0], [94.5, 2119.0], [94.6, 2119.0], [94.7, 2119.0], [94.8, 2120.0], [94.9, 2121.0], [95.0, 2122.0], [95.1, 2124.0], [95.2, 2125.0], [95.3, 2127.0], [95.4, 2133.0], [95.5, 2133.0], [95.6, 2134.0], [95.7, 2140.0], [95.8, 2156.0], [95.9, 2165.0], [96.0, 2688.0], [96.1, 2702.0], [96.2, 2727.0], [96.3, 2733.0], [96.4, 2736.0], [96.5, 2737.0], [96.6, 2739.0], [96.7, 2740.0], [96.8, 2748.0], [96.9, 2752.0], [97.0, 2753.0], [97.1, 2754.0], [97.2, 2755.0], [97.3, 2757.0], [97.4, 2759.0], [97.5, 2759.0], [97.6, 2761.0], [97.7, 2762.0], [97.8, 2765.0], [97.9, 2768.0], [98.0, 2769.0], [98.1, 2785.0], [98.2, 2786.0], [98.3, 2790.0], [98.4, 2791.0], [98.5, 2791.0], [98.6, 2797.0], [98.7, 2797.0], [98.8, 2799.0], [98.9, 2800.0], [99.0, 2801.0], [99.1, 3193.0], [99.2, 3775.0], [99.3, 3789.0], [99.4, 3807.0], [99.5, 3888.0], [99.6, 3898.0], [99.7, 5960.0], [99.8, 6108.0], [99.9, 6992.0]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[0.0, 699.0], [0.1, 700.0], [0.2, 704.0], [0.3, 704.0], [0.4, 705.0], [0.5, 707.0], [0.6, 707.0], [0.7, 708.0], [0.8, 714.0], [0.9, 717.0], [1.0, 718.0], [1.1, 719.0], [1.2, 719.0], [1.3, 720.0], [1.4, 721.0], [1.5, 722.0], [1.6, 724.0], [1.7, 724.0], [1.8, 725.0], [1.9, 727.0], [2.0, 731.0], [2.1, 733.0], [2.2, 734.0], [2.3, 738.0], [2.4, 739.0], [2.5, 739.0], [2.6, 740.0], [2.7, 741.0], [2.8, 743.0], [2.9, 743.0], [3.0, 744.0], [3.1, 748.0], [3.2, 748.0], [3.3, 749.0], [3.4, 750.0], [3.5, 751.0], [3.6, 753.0], [3.7, 754.0], [3.8, 754.0], [3.9, 757.0], [4.0, 757.0], [4.1, 757.0], [4.2, 758.0], [4.3, 760.0], [4.4, 760.0], [4.5, 761.0], [4.6, 764.0], [4.7, 764.0], [4.8, 765.0], [4.9, 765.0], [5.0, 765.0], [5.1, 765.0], [5.2, 765.0], [5.3, 765.0], [5.4, 766.0], [5.5, 766.0], [5.6, 767.0], [5.7, 767.0], [5.8, 768.0], [5.9, 768.0], [6.0, 768.0], [6.1, 769.0], [6.2, 769.0], [6.3, 770.0], [6.4, 770.0], [6.5, 770.0], [6.6, 771.0], [6.7, 771.0], [6.8, 771.0], [6.9, 771.0], [7.0, 772.0], [7.1, 772.0], [7.2, 773.0], [7.3, 774.0], [7.4, 775.0], [7.5, 775.0], [7.6, 775.0], [7.7, 777.0], [7.8, 777.0], [7.9, 779.0], [8.0, 779.0], [8.1, 779.0], [8.2, 780.0], [8.3, 781.0], [8.4, 781.0], [8.5, 781.0], [8.6, 781.0], [8.7, 782.0], [8.8, 783.0], [8.9, 784.0], [9.0, 784.0], [9.1, 785.0], [9.2, 785.0], [9.3, 785.0], [9.4, 785.0], [9.5, 785.0], [9.6, 786.0], [9.7, 786.0], [9.8, 786.0], [9.9, 786.0], [10.0, 787.0], [10.1, 787.0], [10.2, 787.0], [10.3, 789.0], [10.4, 789.0], [10.5, 790.0], [10.6, 791.0], [10.7, 792.0], [10.8, 792.0], [10.9, 793.0], [11.0, 794.0], [11.1, 794.0], [11.2, 797.0], [11.3, 797.0], [11.4, 804.0], [11.5, 805.0], [11.6, 809.0], [11.7, 811.0], [11.8, 811.0], [11.9, 812.0], [12.0, 812.0], [12.1, 821.0], [12.2, 824.0], [12.3, 826.0], [12.4, 828.0], [12.5, 835.0], [12.6, 838.0], [12.7, 843.0], [12.8, 844.0], [12.9, 848.0], [13.0, 849.0], [13.1, 850.0], [13.2, 851.0], [13.3, 853.0], [13.4, 853.0], [13.5, 853.0], [13.6, 854.0], [13.7, 855.0], [13.8, 855.0], [13.9, 857.0], [14.0, 858.0], [14.1, 858.0], [14.2, 858.0], [14.3, 858.0], [14.4, 859.0], [14.5, 859.0], [14.6, 860.0], [14.7, 860.0], [14.8, 861.0], [14.9, 861.0], [15.0, 861.0], [15.1, 862.0], [15.2, 863.0], [15.3, 864.0], [15.4, 864.0], [15.5, 864.0], [15.6, 864.0], [15.7, 865.0], [15.8, 866.0], [15.9, 867.0], [16.0, 867.0], [16.1, 868.0], [16.2, 869.0], [16.3, 869.0], [16.4, 869.0], [16.5, 870.0], [16.6, 870.0], [16.7, 870.0], [16.8, 870.0], [16.9, 871.0], [17.0, 871.0], [17.1, 871.0], [17.2, 872.0], [17.3, 872.0], [17.4, 873.0], [17.5, 874.0], [17.6, 874.0], [17.7, 875.0], [17.8, 876.0], [17.9, 876.0], [18.0, 877.0], [18.1, 878.0], [18.2, 878.0], [18.3, 879.0], [18.4, 881.0], [18.5, 881.0], [18.6, 881.0], [18.7, 882.0], [18.8, 882.0], [18.9, 882.0], [19.0, 883.0], [19.1, 883.0], [19.2, 884.0], [19.3, 888.0], [19.4, 891.0], [19.5, 892.0], [19.6, 892.0], [19.7, 892.0], [19.8, 893.0], [19.9, 893.0], [20.0, 895.0], [20.1, 895.0], [20.2, 896.0], [20.3, 902.0], [20.4, 902.0], [20.5, 904.0], [20.6, 904.0], [20.7, 905.0], [20.8, 906.0], [20.9, 909.0], [21.0, 912.0], [21.1, 918.0], [21.2, 918.0], [21.3, 919.0], [21.4, 922.0], [21.5, 923.0], [21.6, 932.0], [21.7, 934.0], [21.8, 943.0], [21.9, 947.0], [22.0, 949.0], [22.1, 951.0], [22.2, 953.0], [22.3, 953.0], [22.4, 956.0], [22.5, 962.0], [22.6, 962.0], [22.7, 965.0], [22.8, 969.0], [22.9, 969.0], [23.0, 970.0], [23.1, 972.0], [23.2, 976.0], [23.3, 977.0], [23.4, 978.0], [23.5, 978.0], [23.6, 979.0], [23.7, 980.0], [23.8, 981.0], [23.9, 984.0], [24.0, 986.0], [24.1, 986.0], [24.2, 987.0], [24.3, 993.0], [24.4, 995.0], [24.5, 997.0], [24.6, 998.0], [24.7, 1003.0], [24.8, 1005.0], [24.9, 1006.0], [25.0, 1008.0], [25.1, 1012.0], [25.2, 1012.0], [25.3, 1014.0], [25.4, 1018.0], [25.5, 1018.0], [25.6, 1022.0], [25.7, 1023.0], [25.8, 1024.0], [25.9, 1025.0], [26.0, 1031.0], [26.1, 1031.0], [26.2, 1034.0], [26.3, 1044.0], [26.4, 1065.0], [26.5, 1079.0], [26.6, 1103.0], [26.7, 1107.0], [26.8, 1116.0], [26.9, 1117.0], [27.0, 1118.0], [27.1, 1118.0], [27.2, 1119.0], [27.3, 1120.0], [27.4, 1121.0], [27.5, 1121.0], [27.6, 1121.0], [27.7, 1122.0], [27.8, 1122.0], [27.9, 1123.0], [28.0, 1123.0], [28.1, 1123.0], [28.2, 1123.0], [28.3, 1123.0], [28.4, 1123.0], [28.5, 1124.0], [28.6, 1124.0], [28.7, 1124.0], [28.8, 1124.0], [28.9, 1124.0], [29.0, 1125.0], [29.1, 1125.0], [29.2, 1125.0], [29.3, 1125.0], [29.4, 1125.0], [29.5, 1125.0], [29.6, 1125.0], [29.7, 1125.0], [29.8, 1126.0], [29.9, 1126.0], [30.0, 1126.0], [30.1, 1126.0], [30.2, 1126.0], [30.3, 1126.0], [30.4, 1126.0], [30.5, 1126.0], [30.6, 1127.0], [30.7, 1127.0], [30.8, 1127.0], [30.9, 1127.0], [31.0, 1127.0], [31.1, 1127.0], [31.2, 1127.0], [31.3, 1127.0], [31.4, 1128.0], [31.5, 1128.0], [31.6, 1128.0], [31.7, 1128.0], [31.8, 1128.0], [31.9, 1128.0], [32.0, 1128.0], [32.1, 1128.0], [32.2, 1128.0], [32.3, 1128.0], [32.4, 1128.0], [32.5, 1128.0], [32.6, 1128.0], [32.7, 1128.0], [32.8, 1128.0], [32.9, 1129.0], [33.0, 1129.0], [33.1, 1129.0], [33.2, 1129.0], [33.3, 1130.0], [33.4, 1130.0], [33.5, 1130.0], [33.6, 1130.0], [33.7, 1130.0], [33.8, 1130.0], [33.9, 1130.0], [34.0, 1130.0], [34.1, 1130.0], [34.2, 1130.0], [34.3, 1130.0], [34.4, 1130.0], [34.5, 1130.0], [34.6, 1130.0], [34.7, 1130.0], [34.8, 1130.0], [34.9, 1130.0], [35.0, 1130.0], [35.1, 1130.0], [35.2, 1131.0], [35.3, 1131.0], [35.4, 1131.0], [35.5, 1131.0], [35.6, 1131.0], [35.7, 1131.0], [35.8, 1131.0], [35.9, 1131.0], [36.0, 1131.0], [36.1, 1131.0], [36.2, 1131.0], [36.3, 1132.0], [36.4, 1132.0], [36.5, 1132.0], [36.6, 1132.0], [36.7, 1132.0], [36.8, 1132.0], [36.9, 1132.0], [37.0, 1132.0], [37.1, 1132.0], [37.2, 1132.0], [37.3, 1132.0], [37.4, 1132.0], [37.5, 1132.0], [37.6, 1132.0], [37.7, 1132.0], [37.8, 1132.0], [37.9, 1133.0], [38.0, 1133.0], [38.1, 1133.0], [38.2, 1133.0], [38.3, 1133.0], [38.4, 1133.0], [38.5, 1133.0], [38.6, 1133.0], [38.7, 1133.0], [38.8, 1133.0], [38.9, 1133.0], [39.0, 1133.0], [39.1, 1133.0], [39.2, 1133.0], [39.3, 1134.0], [39.4, 1134.0], [39.5, 1134.0], [39.6, 1134.0], [39.7, 1134.0], [39.8, 1134.0], [39.9, 1135.0], [40.0, 1135.0], [40.1, 1135.0], [40.2, 1135.0], [40.3, 1135.0], [40.4, 1135.0], [40.5, 1135.0], [40.6, 1135.0], [40.7, 1135.0], [40.8, 1135.0], [40.9, 1136.0], [41.0, 1136.0], [41.1, 1136.0], [41.2, 1136.0], [41.3, 1136.0], [41.4, 1136.0], [41.5, 1136.0], [41.6, 1136.0], [41.7, 1136.0], [41.8, 1136.0], [41.9, 1136.0], [42.0, 1136.0], [42.1, 1136.0], [42.2, 1136.0], [42.3, 1136.0], [42.4, 1136.0], [42.5, 1136.0], [42.6, 1136.0], [42.7, 1136.0], [42.8, 1136.0], [42.9, 1137.0], [43.0, 1137.0], [43.1, 1137.0], [43.2, 1137.0], [43.3, 1137.0], [43.4, 1137.0], [43.5, 1137.0], [43.6, 1137.0], [43.7, 1137.0], [43.8, 1137.0], [43.9, 1137.0], [44.0, 1137.0], [44.1, 1137.0], [44.2, 1137.0], [44.3, 1138.0], [44.4, 1138.0], [44.5, 1138.0], [44.6, 1138.0], [44.7, 1138.0], [44.8, 1138.0], [44.9, 1138.0], [45.0, 1138.0], [45.1, 1138.0], [45.2, 1138.0], [45.3, 1138.0], [45.4, 1138.0], [45.5, 1138.0], [45.6, 1138.0], [45.7, 1138.0], [45.8, 1138.0], [45.9, 1138.0], [46.0, 1138.0], [46.1, 1138.0], [46.2, 1138.0], [46.3, 1138.0], [46.4, 1138.0], [46.5, 1139.0], [46.6, 1139.0], [46.7, 1139.0], [46.8, 1139.0], [46.9, 1139.0], [47.0, 1139.0], [47.1, 1139.0], [47.2, 1139.0], [47.3, 1139.0], [47.4, 1139.0], [47.5, 1139.0], [47.6, 1139.0], [47.7, 1139.0], [47.8, 1139.0], [47.9, 1139.0], [48.0, 1139.0], [48.1, 1139.0], [48.2, 1139.0], [48.3, 1140.0], [48.4, 1140.0], [48.5, 1140.0], [48.6, 1140.0], [48.7, 1140.0], [48.8, 1140.0], [48.9, 1140.0], [49.0, 1140.0], [49.1, 1140.0], [49.2, 1140.0], [49.3, 1140.0], [49.4, 1140.0], [49.5, 1140.0], [49.6, 1140.0], [49.7, 1140.0], [49.8, 1141.0], [49.9, 1141.0], [50.0, 1141.0], [50.1, 1141.0], [50.2, 1141.0], [50.3, 1141.0], [50.4, 1141.0], [50.5, 1141.0], [50.6, 1141.0], [50.7, 1141.0], [50.8, 1141.0], [50.9, 1141.0], [51.0, 1141.0], [51.1, 1141.0], [51.2, 1141.0], [51.3, 1141.0], [51.4, 1141.0], [51.5, 1141.0], [51.6, 1141.0], [51.7, 1141.0], [51.8, 1142.0], [51.9, 1142.0], [52.0, 1142.0], [52.1, 1142.0], [52.2, 1142.0], [52.3, 1142.0], [52.4, 1142.0], [52.5, 1142.0], [52.6, 1142.0], [52.7, 1142.0], [52.8, 1143.0], [52.9, 1143.0], [53.0, 1143.0], [53.1, 1143.0], [53.2, 1143.0], [53.3, 1143.0], [53.4, 1143.0], [53.5, 1143.0], [53.6, 1143.0], [53.7, 1143.0], [53.8, 1144.0], [53.9, 1144.0], [54.0, 1144.0], [54.1, 1144.0], [54.2, 1144.0], [54.3, 1144.0], [54.4, 1144.0], [54.5, 1144.0], [54.6, 1144.0], [54.7, 1144.0], [54.8, 1144.0], [54.9, 1144.0], [55.0, 1144.0], [55.1, 1145.0], [55.2, 1145.0], [55.3, 1145.0], [55.4, 1145.0], [55.5, 1145.0], [55.6, 1145.0], [55.7, 1145.0], [55.8, 1145.0], [55.9, 1145.0], [56.0, 1145.0], [56.1, 1146.0], [56.2, 1146.0], [56.3, 1146.0], [56.4, 1146.0], [56.5, 1147.0], [56.6, 1147.0], [56.7, 1147.0], [56.8, 1147.0], [56.9, 1147.0], [57.0, 1147.0], [57.1, 1147.0], [57.2, 1147.0], [57.3, 1148.0], [57.4, 1148.0], [57.5, 1148.0], [57.6, 1148.0], [57.7, 1148.0], [57.8, 1148.0], [57.9, 1148.0], [58.0, 1149.0], [58.1, 1149.0], [58.2, 1149.0], [58.3, 1149.0], [58.4, 1150.0], [58.5, 1150.0], [58.6, 1150.0], [58.7, 1150.0], [58.8, 1150.0], [58.9, 1150.0], [59.0, 1150.0], [59.1, 1150.0], [59.2, 1150.0], [59.3, 1150.0], [59.4, 1151.0], [59.5, 1151.0], [59.6, 1151.0], [59.7, 1151.0], [59.8, 1151.0], [59.9, 1151.0], [60.0, 1151.0], [60.1, 1151.0], [60.2, 1151.0], [60.3, 1151.0], [60.4, 1151.0], [60.5, 1151.0], [60.6, 1152.0], [60.7, 1152.0], [60.8, 1152.0], [60.9, 1152.0], [61.0, 1152.0], [61.1, 1152.0], [61.2, 1152.0], [61.3, 1153.0], [61.4, 1153.0], [61.5, 1153.0], [61.6, 1153.0], [61.7, 1153.0], [61.8, 1154.0], [61.9, 1154.0], [62.0, 1154.0], [62.1, 1154.0], [62.2, 1154.0], [62.3, 1154.0], [62.4, 1154.0], [62.5, 1154.0], [62.6, 1154.0], [62.7, 1154.0], [62.8, 1155.0], [62.9, 1155.0], [63.0, 1155.0], [63.1, 1155.0], [63.2, 1155.0], [63.3, 1155.0], [63.4, 1155.0], [63.5, 1155.0], [63.6, 1155.0], [63.7, 1155.0], [63.8, 1155.0], [63.9, 1155.0], [64.0, 1156.0], [64.1, 1156.0], [64.2, 1157.0], [64.3, 1157.0], [64.4, 1157.0], [64.5, 1157.0], [64.6, 1158.0], [64.7, 1158.0], [64.8, 1158.0], [64.9, 1158.0], [65.0, 1158.0], [65.1, 1158.0], [65.2, 1158.0], [65.3, 1159.0], [65.4, 1159.0], [65.5, 1159.0], [65.6, 1159.0], [65.7, 1160.0], [65.8, 1160.0], [65.9, 1160.0], [66.0, 1160.0], [66.1, 1160.0], [66.2, 1161.0], [66.3, 1161.0], [66.4, 1161.0], [66.5, 1161.0], [66.6, 1161.0], [66.7, 1161.0], [66.8, 1161.0], [66.9, 1161.0], [67.0, 1162.0], [67.1, 1162.0], [67.2, 1162.0], [67.3, 1162.0], [67.4, 1163.0], [67.5, 1163.0], [67.6, 1163.0], [67.7, 1163.0], [67.8, 1163.0], [67.9, 1163.0], [68.0, 1164.0], [68.1, 1164.0], [68.2, 1164.0], [68.3, 1164.0], [68.4, 1165.0], [68.5, 1165.0], [68.6, 1166.0], [68.7, 1166.0], [68.8, 1166.0], [68.9, 1167.0], [69.0, 1168.0], [69.1, 1168.0], [69.2, 1169.0], [69.3, 1169.0], [69.4, 1169.0], [69.5, 1169.0], [69.6, 1169.0], [69.7, 1170.0], [69.8, 1170.0], [69.9, 1171.0], [70.0, 1171.0], [70.1, 1171.0], [70.2, 1172.0], [70.3, 1172.0], [70.4, 1172.0], [70.5, 1173.0], [70.6, 1173.0], [70.7, 1173.0], [70.8, 1173.0], [70.9, 1174.0], [71.0, 1174.0], [71.1, 1174.0], [71.2, 1174.0], [71.3, 1174.0], [71.4, 1175.0], [71.5, 1175.0], [71.6, 1176.0], [71.7, 1176.0], [71.8, 1177.0], [71.9, 1177.0], [72.0, 1178.0], [72.1, 1178.0], [72.2, 1179.0], [72.3, 1181.0], [72.4, 1182.0], [72.5, 1182.0], [72.6, 1182.0], [72.7, 1183.0], [72.8, 1183.0], [72.9, 1183.0], [73.0, 1184.0], [73.1, 1184.0], [73.2, 1184.0], [73.3, 1184.0], [73.4, 1185.0], [73.5, 1185.0], [73.6, 1185.0], [73.7, 1186.0], [73.8, 1186.0], [73.9, 1187.0], [74.0, 1187.0], [74.1, 1188.0], [74.2, 1188.0], [74.3, 1188.0], [74.4, 1188.0], [74.5, 1190.0], [74.6, 1191.0], [74.7, 1192.0], [74.8, 1192.0], [74.9, 1192.0], [75.0, 1193.0], [75.1, 1194.0], [75.2, 1195.0], [75.3, 1195.0], [75.4, 1196.0], [75.5, 1197.0], [75.6, 1197.0], [75.7, 1197.0], [75.8, 1198.0], [75.9, 1199.0], [76.0, 1200.0], [76.1, 1200.0], [76.2, 1200.0], [76.3, 1201.0], [76.4, 1201.0], [76.5, 1201.0], [76.6, 1201.0], [76.7, 1202.0], [76.8, 1202.0], [76.9, 1203.0], [77.0, 1204.0], [77.1, 1204.0], [77.2, 1204.0], [77.3, 1208.0], [77.4, 1208.0], [77.5, 1210.0], [77.6, 1210.0], [77.7, 1213.0], [77.8, 1215.0], [77.9, 1216.0], [78.0, 1217.0], [78.1, 1219.0], [78.2, 1221.0], [78.3, 1222.0], [78.4, 1224.0], [78.5, 1224.0], [78.6, 1225.0], [78.7, 1227.0], [78.8, 1227.0], [78.9, 1232.0], [79.0, 1233.0], [79.1, 1234.0], [79.2, 1234.0], [79.3, 1235.0], [79.4, 1235.0], [79.5, 1235.0], [79.6, 1236.0], [79.7, 1236.0], [79.8, 1236.0], [79.9, 1239.0], [80.0, 1247.0], [80.1, 1248.0], [80.2, 1250.0], [80.3, 1251.0], [80.4, 1252.0], [80.5, 1253.0], [80.6, 1253.0], [80.7, 1254.0], [80.8, 1255.0], [80.9, 1257.0], [81.0, 1261.0], [81.1, 1262.0], [81.2, 1266.0], [81.3, 1266.0], [81.4, 1267.0], [81.5, 1267.0], [81.6, 1273.0], [81.7, 1274.0], [81.8, 1275.0], [81.9, 1280.0], [82.0, 1281.0], [82.1, 1289.0], [82.2, 1293.0], [82.3, 1296.0], [82.4, 1298.0], [82.5, 1313.0], [82.6, 1317.0], [82.7, 1318.0], [82.8, 1319.0], [82.9, 1325.0], [83.0, 1325.0], [83.1, 1327.0], [83.2, 1332.0], [83.3, 1335.0], [83.4, 1364.0], [83.5, 1367.0], [83.6, 1381.0], [83.7, 1395.0], [83.8, 1416.0], [83.9, 1421.0], [84.0, 1440.0], [84.1, 1447.0], [84.2, 1454.0], [84.3, 1473.0], [84.4, 1475.0], [84.5, 1479.0], [84.6, 1486.0], [84.7, 1500.0], [84.8, 1507.0], [84.9, 1515.0], [85.0, 1518.0], [85.1, 1526.0], [85.2, 1530.0], [85.3, 1531.0], [85.4, 1540.0], [85.5, 1544.0], [85.6, 1551.0], [85.7, 1551.0], [85.8, 1554.0], [85.9, 1555.0], [86.0, 1556.0], [86.1, 1558.0], [86.2, 1558.0], [86.3, 1559.0], [86.4, 1559.0], [86.5, 1559.0], [86.6, 1561.0], [86.7, 1567.0], [86.8, 1568.0], [86.9, 1568.0], [87.0, 1594.0], [87.1, 1610.0], [87.2, 1618.0], [87.3, 1642.0], [87.4, 1643.0], [87.5, 1644.0], [87.6, 1703.0], [87.7, 1708.0], [87.8, 1715.0], [87.9, 1719.0], [88.0, 1736.0], [88.1, 1740.0], [88.2, 1844.0], [88.3, 1857.0], [88.4, 1876.0], [88.5, 1911.0], [88.6, 1923.0], [88.7, 1970.0], [88.8, 2019.0], [88.9, 2032.0], [89.0, 2045.0], [89.1, 2055.0], [89.2, 2065.0], [89.3, 2072.0], [89.4, 2077.0], [89.5, 2086.0], [89.6, 2090.0], [89.7, 2092.0], [89.8, 2111.0], [89.9, 2111.0], [90.0, 2122.0], [90.1, 2127.0], [90.2, 2127.0], [90.3, 2129.0], [90.4, 2132.0], [90.5, 2133.0], [90.6, 2134.0], [90.7, 2135.0], [90.8, 2135.0], [90.9, 2136.0], [91.0, 2136.0], [91.1, 2138.0], [91.2, 2139.0], [91.3, 2141.0], [91.4, 2142.0], [91.5, 2142.0], [91.6, 2145.0], [91.7, 2154.0], [91.8, 2156.0], [91.9, 2159.0], [92.0, 2161.0], [92.1, 2161.0], [92.2, 2163.0], [92.3, 2164.0], [92.4, 2172.0], [92.5, 2173.0], [92.6, 2173.0], [92.7, 2176.0], [92.8, 2176.0], [92.9, 2182.0], [93.0, 2185.0], [93.1, 2193.0], [93.2, 2201.0], [93.3, 2206.0], [93.4, 2213.0], [93.5, 2214.0], [93.6, 2225.0], [93.7, 2236.0], [93.8, 2237.0], [93.9, 2238.0], [94.0, 2275.0], [94.1, 2282.0], [94.2, 2284.0], [94.3, 2305.0], [94.4, 2314.0], [94.5, 2337.0], [94.6, 2391.0], [94.7, 2401.0], [94.8, 2402.0], [94.9, 2403.0], [95.0, 2407.0], [95.1, 2421.0], [95.2, 2448.0], [95.3, 2450.0], [95.4, 2450.0], [95.5, 2463.0], [95.6, 2463.0], [95.7, 2466.0], [95.8, 2468.0], [95.9, 2476.0], [96.0, 2488.0], [96.1, 2715.0], [96.2, 2764.0], [96.3, 2765.0], [96.4, 2770.0], [96.5, 2772.0], [96.6, 2777.0], [96.7, 2777.0], [96.8, 2779.0], [96.9, 2783.0], [97.0, 2785.0], [97.1, 2786.0], [97.2, 2788.0], [97.3, 2795.0], [97.4, 2796.0], [97.5, 2797.0], [97.6, 2802.0], [97.7, 2802.0], [97.8, 2803.0], [97.9, 2806.0], [98.0, 2807.0], [98.1, 2812.0], [98.2, 2815.0], [98.3, 2816.0], [98.4, 2817.0], [98.5, 2818.0], [98.6, 2818.0], [98.7, 2820.0], [98.8, 2824.0], [98.9, 2827.0], [99.0, 2908.0], [99.1, 3741.0], [99.2, 3768.0], [99.3, 3797.0], [99.4, 3870.0], [99.5, 3871.0], [99.6, 3899.0], [99.7, 3902.0], [99.8, 3904.0], [99.9, 6098.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 9.0], [0.1, 9.0], [0.2, 9.0], [0.3, 10.0], [0.4, 10.0], [0.5, 10.0], [0.6, 10.0], [0.7, 10.0], [0.8, 10.0], [0.9, 10.0], [1.0, 10.0], [1.1, 10.0], [1.2, 10.0], [1.3, 10.0], [1.4, 10.0], [1.5, 10.0], [1.6, 10.0], [1.7, 10.0], [1.8, 10.0], [1.9, 10.0], [2.0, 10.0], [2.1, 10.0], [2.2, 10.0], [2.3, 10.0], [2.4, 10.0], [2.5, 10.0], [2.6, 10.0], [2.7, 10.0], [2.8, 10.0], [2.9, 10.0], [3.0, 11.0], [3.1, 11.0], [3.2, 11.0], [3.3, 11.0], [3.4, 11.0], [3.5, 11.0], [3.6, 11.0], [3.7, 11.0], [3.8, 11.0], [3.9, 11.0], [4.0, 11.0], [4.1, 11.0], [4.2, 11.0], [4.3, 11.0], [4.4, 11.0], [4.5, 11.0], [4.6, 11.0], [4.7, 11.0], [4.8, 11.0], [4.9, 11.0], [5.0, 11.0], [5.1, 11.0], [5.2, 11.0], [5.3, 11.0], [5.4, 11.0], [5.5, 11.0], [5.6, 11.0], [5.7, 11.0], [5.8, 11.0], [5.9, 11.0], [6.0, 11.0], [6.1, 11.0], [6.2, 11.0], [6.3, 11.0], [6.4, 11.0], [6.5, 11.0], [6.6, 11.0], [6.7, 11.0], [6.8, 11.0], [6.9, 11.0], [7.0, 11.0], [7.1, 11.0], [7.2, 11.0], [7.3, 11.0], [7.4, 11.0], [7.5, 11.0], [7.6, 11.0], [7.7, 11.0], [7.8, 11.0], [7.9, 11.0], [8.0, 11.0], [8.1, 11.0], [8.2, 11.0], [8.3, 11.0], [8.4, 11.0], [8.5, 11.0], [8.6, 11.0], [8.7, 12.0], [8.8, 12.0], [8.9, 12.0], [9.0, 12.0], [9.1, 12.0], [9.2, 12.0], [9.3, 12.0], [9.4, 12.0], [9.5, 12.0], [9.6, 12.0], [9.7, 12.0], [9.8, 12.0], [9.9, 12.0], [10.0, 12.0], [10.1, 12.0], [10.2, 12.0], [10.3, 12.0], [10.4, 12.0], [10.5, 12.0], [10.6, 12.0], [10.7, 12.0], [10.8, 12.0], [10.9, 12.0], [11.0, 12.0], [11.1, 12.0], [11.2, 12.0], [11.3, 12.0], [11.4, 12.0], [11.5, 12.0], [11.6, 12.0], [11.7, 12.0], [11.8, 12.0], [11.9, 12.0], [12.0, 12.0], [12.1, 12.0], [12.2, 12.0], [12.3, 12.0], [12.4, 12.0], [12.5, 12.0], [12.6, 12.0], [12.7, 12.0], [12.8, 12.0], [12.9, 12.0], [13.0, 12.0], [13.1, 12.0], [13.2, 12.0], [13.3, 12.0], [13.4, 12.0], [13.5, 12.0], [13.6, 12.0], [13.7, 12.0], [13.8, 12.0], [13.9, 12.0], [14.0, 12.0], [14.1, 12.0], [14.2, 12.0], [14.3, 12.0], [14.4, 12.0], [14.5, 12.0], [14.6, 12.0], [14.7, 12.0], [14.8, 12.0], [14.9, 12.0], [15.0, 12.0], [15.1, 12.0], [15.2, 12.0], [15.3, 12.0], [15.4, 12.0], [15.5, 12.0], [15.6, 12.0], [15.7, 12.0], [15.8, 12.0], [15.9, 12.0], [16.0, 12.0], [16.1, 12.0], [16.2, 12.0], [16.3, 12.0], [16.4, 13.0], [16.5, 13.0], [16.6, 13.0], [16.7, 13.0], [16.8, 13.0], [16.9, 13.0], [17.0, 13.0], [17.1, 13.0], [17.2, 13.0], [17.3, 13.0], [17.4, 13.0], [17.5, 13.0], [17.6, 13.0], [17.7, 13.0], [17.8, 13.0], [17.9, 13.0], [18.0, 13.0], [18.1, 13.0], [18.2, 13.0], [18.3, 13.0], [18.4, 13.0], [18.5, 13.0], [18.6, 13.0], [18.7, 13.0], [18.8, 13.0], [18.9, 13.0], [19.0, 13.0], [19.1, 13.0], [19.2, 13.0], [19.3, 13.0], [19.4, 13.0], [19.5, 13.0], [19.6, 13.0], [19.7, 13.0], [19.8, 13.0], [19.9, 13.0], [20.0, 13.0], [20.1, 13.0], [20.2, 13.0], [20.3, 13.0], [20.4, 13.0], [20.5, 13.0], [20.6, 13.0], [20.7, 13.0], [20.8, 13.0], [20.9, 13.0], [21.0, 13.0], [21.1, 13.0], [21.2, 13.0], [21.3, 13.0], [21.4, 13.0], [21.5, 13.0], [21.6, 13.0], [21.7, 13.0], [21.8, 13.0], [21.9, 13.0], [22.0, 13.0], [22.1, 13.0], [22.2, 13.0], [22.3, 13.0], [22.4, 13.0], [22.5, 13.0], [22.6, 13.0], [22.7, 13.0], [22.8, 13.0], [22.9, 13.0], [23.0, 13.0], [23.1, 13.0], [23.2, 13.0], [23.3, 13.0], [23.4, 13.0], [23.5, 13.0], [23.6, 13.0], [23.7, 13.0], [23.8, 13.0], [23.9, 13.0], [24.0, 13.0], [24.1, 13.0], [24.2, 13.0], [24.3, 13.0], [24.4, 13.0], [24.5, 13.0], [24.6, 13.0], [24.7, 13.0], [24.8, 13.0], [24.9, 13.0], [25.0, 13.0], [25.1, 13.0], [25.2, 13.0], [25.3, 14.0], [25.4, 14.0], [25.5, 14.0], [25.6, 14.0], [25.7, 14.0], [25.8, 14.0], [25.9, 14.0], [26.0, 14.0], [26.1, 14.0], [26.2, 14.0], [26.3, 14.0], [26.4, 14.0], [26.5, 14.0], [26.6, 14.0], [26.7, 14.0], [26.8, 14.0], [26.9, 14.0], [27.0, 14.0], [27.1, 14.0], [27.2, 14.0], [27.3, 14.0], [27.4, 14.0], [27.5, 14.0], [27.6, 14.0], [27.7, 14.0], [27.8, 14.0], [27.9, 14.0], [28.0, 14.0], [28.1, 14.0], [28.2, 14.0], [28.3, 14.0], [28.4, 14.0], [28.5, 14.0], [28.6, 14.0], [28.7, 14.0], [28.8, 14.0], [28.9, 14.0], [29.0, 14.0], [29.1, 14.0], [29.2, 14.0], [29.3, 14.0], [29.4, 14.0], [29.5, 14.0], [29.6, 14.0], [29.7, 14.0], [29.8, 14.0], [29.9, 14.0], [30.0, 14.0], [30.1, 14.0], [30.2, 14.0], [30.3, 14.0], [30.4, 14.0], [30.5, 14.0], [30.6, 14.0], [30.7, 14.0], [30.8, 14.0], [30.9, 14.0], [31.0, 14.0], [31.1, 14.0], [31.2, 14.0], [31.3, 14.0], [31.4, 14.0], [31.5, 14.0], [31.6, 14.0], [31.7, 14.0], [31.8, 14.0], [31.9, 14.0], [32.0, 14.0], [32.1, 14.0], [32.2, 14.0], [32.3, 14.0], [32.4, 14.0], [32.5, 14.0], [32.6, 14.0], [32.7, 14.0], [32.8, 14.0], [32.9, 14.0], [33.0, 14.0], [33.1, 14.0], [33.2, 14.0], [33.3, 15.0], [33.4, 15.0], [33.5, 15.0], [33.6, 15.0], [33.7, 15.0], [33.8, 15.0], [33.9, 15.0], [34.0, 15.0], [34.1, 15.0], [34.2, 15.0], [34.3, 15.0], [34.4, 15.0], [34.5, 15.0], [34.6, 15.0], [34.7, 15.0], [34.8, 15.0], [34.9, 15.0], [35.0, 15.0], [35.1, 15.0], [35.2, 15.0], [35.3, 15.0], [35.4, 15.0], [35.5, 15.0], [35.6, 15.0], [35.7, 15.0], [35.8, 15.0], [35.9, 15.0], [36.0, 15.0], [36.1, 15.0], [36.2, 15.0], [36.3, 15.0], [36.4, 15.0], [36.5, 15.0], [36.6, 15.0], [36.7, 15.0], [36.8, 15.0], [36.9, 15.0], [37.0, 15.0], [37.1, 15.0], [37.2, 15.0], [37.3, 15.0], [37.4, 15.0], [37.5, 15.0], [37.6, 15.0], [37.7, 15.0], [37.8, 15.0], [37.9, 15.0], [38.0, 15.0], [38.1, 15.0], [38.2, 15.0], [38.3, 15.0], [38.4, 15.0], [38.5, 15.0], [38.6, 15.0], [38.7, 15.0], [38.8, 15.0], [38.9, 15.0], [39.0, 15.0], [39.1, 15.0], [39.2, 15.0], [39.3, 15.0], [39.4, 15.0], [39.5, 15.0], [39.6, 15.0], [39.7, 15.0], [39.8, 16.0], [39.9, 16.0], [40.0, 16.0], [40.1, 16.0], [40.2, 16.0], [40.3, 16.0], [40.4, 16.0], [40.5, 16.0], [40.6, 16.0], [40.7, 16.0], [40.8, 16.0], [40.9, 16.0], [41.0, 16.0], [41.1, 16.0], [41.2, 16.0], [41.3, 16.0], [41.4, 16.0], [41.5, 16.0], [41.6, 16.0], [41.7, 16.0], [41.8, 16.0], [41.9, 16.0], [42.0, 16.0], [42.1, 16.0], [42.2, 16.0], [42.3, 16.0], [42.4, 16.0], [42.5, 16.0], [42.6, 16.0], [42.7, 16.0], [42.8, 16.0], [42.9, 16.0], [43.0, 16.0], [43.1, 16.0], [43.2, 16.0], [43.3, 16.0], [43.4, 16.0], [43.5, 16.0], [43.6, 16.0], [43.7, 16.0], [43.8, 16.0], [43.9, 16.0], [44.0, 16.0], [44.1, 16.0], [44.2, 16.0], [44.3, 16.0], [44.4, 16.0], [44.5, 16.0], [44.6, 16.0], [44.7, 16.0], [44.8, 16.0], [44.9, 16.0], [45.0, 16.0], [45.1, 16.0], [45.2, 16.0], [45.3, 16.0], [45.4, 16.0], [45.5, 16.0], [45.6, 16.0], [45.7, 16.0], [45.8, 16.0], [45.9, 16.0], [46.0, 16.0], [46.1, 16.0], [46.2, 16.0], [46.3, 16.0], [46.4, 16.0], [46.5, 16.0], [46.6, 16.0], [46.7, 16.0], [46.8, 16.0], [46.9, 16.0], [47.0, 16.0], [47.1, 16.0], [47.2, 16.0], [47.3, 16.0], [47.4, 16.0], [47.5, 17.0], [47.6, 17.0], [47.7, 17.0], [47.8, 17.0], [47.9, 17.0], [48.0, 17.0], [48.1, 17.0], [48.2, 17.0], [48.3, 17.0], [48.4, 17.0], [48.5, 17.0], [48.6, 17.0], [48.7, 17.0], [48.8, 17.0], [48.9, 17.0], [49.0, 17.0], [49.1, 17.0], [49.2, 17.0], [49.3, 17.0], [49.4, 17.0], [49.5, 17.0], [49.6, 17.0], [49.7, 17.0], [49.8, 17.0], [49.9, 17.0], [50.0, 17.0], [50.1, 17.0], [50.2, 17.0], [50.3, 17.0], [50.4, 17.0], [50.5, 17.0], [50.6, 17.0], [50.7, 17.0], [50.8, 17.0], [50.9, 17.0], [51.0, 17.0], [51.1, 17.0], [51.2, 17.0], [51.3, 17.0], [51.4, 17.0], [51.5, 17.0], [51.6, 17.0], [51.7, 17.0], [51.8, 17.0], [51.9, 17.0], [52.0, 17.0], [52.1, 17.0], [52.2, 17.0], [52.3, 17.0], [52.4, 17.0], [52.5, 18.0], [52.6, 18.0], [52.7, 18.0], [52.8, 18.0], [52.9, 18.0], [53.0, 18.0], [53.1, 18.0], [53.2, 18.0], [53.3, 18.0], [53.4, 18.0], [53.5, 18.0], [53.6, 18.0], [53.7, 18.0], [53.8, 18.0], [53.9, 18.0], [54.0, 18.0], [54.1, 18.0], [54.2, 18.0], [54.3, 18.0], [54.4, 18.0], [54.5, 18.0], [54.6, 18.0], [54.7, 18.0], [54.8, 18.0], [54.9, 18.0], [55.0, 18.0], [55.1, 18.0], [55.2, 18.0], [55.3, 18.0], [55.4, 18.0], [55.5, 18.0], [55.6, 18.0], [55.7, 18.0], [55.8, 18.0], [55.9, 18.0], [56.0, 18.0], [56.1, 18.0], [56.2, 18.0], [56.3, 18.0], [56.4, 18.0], [56.5, 18.0], [56.6, 18.0], [56.7, 18.0], [56.8, 18.0], [56.9, 18.0], [57.0, 18.0], [57.1, 18.0], [57.2, 18.0], [57.3, 18.0], [57.4, 18.0], [57.5, 18.0], [57.6, 19.0], [57.7, 19.0], [57.8, 19.0], [57.9, 19.0], [58.0, 19.0], [58.1, 19.0], [58.2, 19.0], [58.3, 19.0], [58.4, 19.0], [58.5, 19.0], [58.6, 19.0], [58.7, 19.0], [58.8, 19.0], [58.9, 19.0], [59.0, 19.0], [59.1, 19.0], [59.2, 19.0], [59.3, 19.0], [59.4, 19.0], [59.5, 19.0], [59.6, 19.0], [59.7, 19.0], [59.8, 19.0], [59.9, 19.0], [60.0, 19.0], [60.1, 19.0], [60.2, 19.0], [60.3, 19.0], [60.4, 19.0], [60.5, 19.0], [60.6, 19.0], [60.7, 19.0], [60.8, 19.0], [60.9, 19.0], [61.0, 19.0], [61.1, 19.0], [61.2, 19.0], [61.3, 19.0], [61.4, 19.0], [61.5, 19.0], [61.6, 19.0], [61.7, 19.0], [61.8, 19.0], [61.9, 19.0], [62.0, 19.0], [62.1, 19.0], [62.2, 19.0], [62.3, 19.0], [62.4, 19.0], [62.5, 19.0], [62.6, 19.0], [62.7, 19.0], [62.8, 19.0], [62.9, 19.0], [63.0, 19.0], [63.1, 19.0], [63.2, 19.0], [63.3, 19.0], [63.4, 19.0], [63.5, 19.0], [63.6, 20.0], [63.7, 20.0], [63.8, 20.0], [63.9, 20.0], [64.0, 20.0], [64.1, 20.0], [64.2, 20.0], [64.3, 20.0], [64.4, 20.0], [64.5, 20.0], [64.6, 20.0], [64.7, 20.0], [64.8, 20.0], [64.9, 20.0], [65.0, 20.0], [65.1, 20.0], [65.2, 20.0], [65.3, 20.0], [65.4, 20.0], [65.5, 20.0], [65.6, 20.0], [65.7, 20.0], [65.8, 20.0], [65.9, 20.0], [66.0, 20.0], [66.1, 20.0], [66.2, 20.0], [66.3, 20.0], [66.4, 20.0], [66.5, 20.0], [66.6, 20.0], [66.7, 20.0], [66.8, 20.0], [66.9, 20.0], [67.0, 21.0], [67.1, 21.0], [67.2, 21.0], [67.3, 21.0], [67.4, 21.0], [67.5, 21.0], [67.6, 21.0], [67.7, 21.0], [67.8, 21.0], [67.9, 21.0], [68.0, 21.0], [68.1, 21.0], [68.2, 21.0], [68.3, 21.0], [68.4, 21.0], [68.5, 21.0], [68.6, 21.0], [68.7, 21.0], [68.8, 21.0], [68.9, 21.0], [69.0, 21.0], [69.1, 21.0], [69.2, 21.0], [69.3, 21.0], [69.4, 21.0], [69.5, 21.0], [69.6, 22.0], [69.7, 22.0], [69.8, 22.0], [69.9, 22.0], [70.0, 22.0], [70.1, 22.0], [70.2, 22.0], [70.3, 22.0], [70.4, 22.0], [70.5, 22.0], [70.6, 22.0], [70.7, 22.0], [70.8, 22.0], [70.9, 22.0], [71.0, 22.0], [71.1, 22.0], [71.2, 22.0], [71.3, 22.0], [71.4, 22.0], [71.5, 22.0], [71.6, 22.0], [71.7, 22.0], [71.8, 22.0], [71.9, 22.0], [72.0, 22.0], [72.1, 22.0], [72.2, 22.0], [72.3, 23.0], [72.4, 23.0], [72.5, 23.0], [72.6, 23.0], [72.7, 23.0], [72.8, 23.0], [72.9, 23.0], [73.0, 23.0], [73.1, 23.0], [73.2, 23.0], [73.3, 23.0], [73.4, 23.0], [73.5, 23.0], [73.6, 23.0], [73.7, 23.0], [73.8, 23.0], [73.9, 23.0], [74.0, 23.0], [74.1, 23.0], [74.2, 23.0], [74.3, 23.0], [74.4, 23.0], [74.5, 23.0], [74.6, 23.0], [74.7, 23.0], [74.8, 23.0], [74.9, 23.0], [75.0, 24.0], [75.1, 24.0], [75.2, 24.0], [75.3, 24.0], [75.4, 24.0], [75.5, 24.0], [75.6, 24.0], [75.7, 24.0], [75.8, 24.0], [75.9, 24.0], [76.0, 24.0], [76.1, 24.0], [76.2, 24.0], [76.3, 24.0], [76.4, 24.0], [76.5, 24.0], [76.6, 24.0], [76.7, 24.0], [76.8, 24.0], [76.9, 24.0], [77.0, 24.0], [77.1, 24.0], [77.2, 24.0], [77.3, 24.0], [77.4, 24.0], [77.5, 24.0], [77.6, 24.0], [77.7, 25.0], [77.8, 25.0], [77.9, 25.0], [78.0, 25.0], [78.1, 25.0], [78.2, 25.0], [78.3, 25.0], [78.4, 25.0], [78.5, 25.0], [78.6, 25.0], [78.7, 25.0], [78.8, 25.0], [78.9, 25.0], [79.0, 25.0], [79.1, 25.0], [79.2, 25.0], [79.3, 25.0], [79.4, 25.0], [79.5, 25.0], [79.6, 25.0], [79.7, 25.0], [79.8, 25.0], [79.9, 25.0], [80.0, 25.0], [80.1, 25.0], [80.2, 25.0], [80.3, 25.0], [80.4, 25.0], [80.5, 26.0], [80.6, 26.0], [80.7, 26.0], [80.8, 26.0], [80.9, 26.0], [81.0, 26.0], [81.1, 26.0], [81.2, 26.0], [81.3, 26.0], [81.4, 26.0], [81.5, 26.0], [81.6, 26.0], [81.7, 26.0], [81.8, 26.0], [81.9, 26.0], [82.0, 26.0], [82.1, 26.0], [82.2, 27.0], [82.3, 27.0], [82.4, 27.0], [82.5, 27.0], [82.6, 27.0], [82.7, 27.0], [82.8, 27.0], [82.9, 27.0], [83.0, 27.0], [83.1, 27.0], [83.2, 27.0], [83.3, 27.0], [83.4, 27.0], [83.5, 28.0], [83.6, 28.0], [83.7, 28.0], [83.8, 28.0], [83.9, 28.0], [84.0, 28.0], [84.1, 28.0], [84.2, 28.0], [84.3, 28.0], [84.4, 28.0], [84.5, 28.0], [84.6, 28.0], [84.7, 28.0], [84.8, 28.0], [84.9, 28.0], [85.0, 29.0], [85.1, 29.0], [85.2, 29.0], [85.3, 29.0], [85.4, 29.0], [85.5, 29.0], [85.6, 29.0], [85.7, 29.0], [85.8, 29.0], [85.9, 29.0], [86.0, 29.0], [86.1, 29.0], [86.2, 29.0], [86.3, 29.0], [86.4, 30.0], [86.5, 30.0], [86.6, 30.0], [86.7, 30.0], [86.8, 30.0], [86.9, 30.0], [87.0, 30.0], [87.1, 30.0], [87.2, 30.0], [87.3, 30.0], [87.4, 31.0], [87.5, 31.0], [87.6, 31.0], [87.7, 31.0], [87.8, 31.0], [87.9, 31.0], [88.0, 31.0], [88.1, 31.0], [88.2, 32.0], [88.3, 32.0], [88.4, 32.0], [88.5, 32.0], [88.6, 32.0], [88.7, 32.0], [88.8, 32.0], [88.9, 33.0], [89.0, 33.0], [89.1, 33.0], [89.2, 33.0], [89.3, 33.0], [89.4, 34.0], [89.5, 34.0], [89.6, 34.0], [89.7, 34.0], [89.8, 34.0], [89.9, 35.0], [90.0, 35.0], [90.1, 35.0], [90.2, 35.0], [90.3, 35.0], [90.4, 35.0], [90.5, 35.0], [90.6, 35.0], [90.7, 35.0], [90.8, 35.0], [90.9, 36.0], [91.0, 36.0], [91.1, 36.0], [91.2, 36.0], [91.3, 37.0], [91.4, 37.0], [91.5, 37.0], [91.6, 37.0], [91.7, 37.0], [91.8, 37.0], [91.9, 37.0], [92.0, 37.0], [92.1, 37.0], [92.2, 38.0], [92.3, 38.0], [92.4, 38.0], [92.5, 38.0], [92.6, 38.0], [92.7, 38.0], [92.8, 39.0], [92.9, 39.0], [93.0, 40.0], [93.1, 40.0], [93.2, 41.0], [93.3, 41.0], [93.4, 41.0], [93.5, 41.0], [93.6, 41.0], [93.7, 41.0], [93.8, 42.0], [93.9, 42.0], [94.0, 42.0], [94.1, 42.0], [94.2, 43.0], [94.3, 43.0], [94.4, 43.0], [94.5, 44.0], [94.6, 44.0], [94.7, 44.0], [94.8, 44.0], [94.9, 45.0], [95.0, 45.0], [95.1, 45.0], [95.2, 45.0], [95.3, 45.0], [95.4, 46.0], [95.5, 46.0], [95.6, 46.0], [95.7, 46.0], [95.8, 46.0], [95.9, 46.0], [96.0, 47.0], [96.1, 47.0], [96.2, 49.0], [96.3, 49.0], [96.4, 50.0], [96.5, 50.0], [96.6, 51.0], [96.7, 51.0], [96.8, 51.0], [96.9, 51.0], [97.0, 52.0], [97.1, 53.0], [97.2, 53.0], [97.3, 53.0], [97.4, 54.0], [97.5, 54.0], [97.6, 55.0], [97.7, 55.0], [97.8, 58.0], [97.9, 59.0], [98.0, 60.0], [98.1, 62.0], [98.2, 62.0], [98.3, 62.0], [98.4, 63.0], [98.5, 63.0], [98.6, 63.0], [98.7, 67.0], [98.8, 68.0], [98.9, 71.0], [99.0, 71.0], [99.1, 74.0], [99.2, 75.0], [99.3, 76.0], [99.4, 77.0], [99.5, 81.0], [99.6, 82.0], [99.7, 86.0], [99.8, 88.0], [99.9, 95.0]], "isOverall": false, "label": "getUserList", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1000.0, "series": [{"data": [[0.0, 999.0], [100.0, 1.0]], "isOverall": false, "label": "User", "isController": false}, {"data": [[2100.0, 43.0], [600.0, 15.0], [2600.0, 1.0], [2700.0, 28.0], [2800.0, 2.0], [700.0, 122.0], [3100.0, 1.0], [800.0, 143.0], [900.0, 32.0], [3700.0, 2.0], [3800.0, 3.0], [1000.0, 4.0], [1100.0, 600.0], [5900.0, 1.0], [6100.0, 1.0], [6900.0, 1.0], [2000.0, 1.0]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[600.0, 1.0], [700.0, 113.0], [800.0, 89.0], [900.0, 43.0], [1000.0, 19.0], [1100.0, 494.0], [1200.0, 66.0], [1300.0, 13.0], [1400.0, 9.0], [1500.0, 24.0], [1600.0, 5.0], [1700.0, 6.0], [1800.0, 3.0], [1900.0, 3.0], [2000.0, 10.0], [2100.0, 34.0], [2200.0, 11.0], [2300.0, 4.0], [2400.0, 14.0], [2700.0, 15.0], [2800.0, 14.0], [2900.0, 1.0], [3700.0, 3.0], [3800.0, 3.0], [3900.0, 2.0], [6000.0, 1.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 1000.0]], "isOverall": false, "label": "getUserList", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 6900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 236.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2000.0, "series": [{"data": [[0.0, 2000.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1764.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 236.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 233.16199999999998, "minX": 1.67397984E12, "maxY": 233.16199999999998, "series": [{"data": [[1.67397984E12, 233.16199999999998]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67397984E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.0, "maxY": 6108.0, "series": [{"data": [[10.0, 22.0], [23.0, 15.0], [57.0, 24.0], [64.0, 15.0], [100.0, 16.0], [119.0, 18.0], [123.0, 15.666666666666666], [122.0, 10.0], [120.0, 12.0], [125.0, 12.0], [124.0, 16.0], [134.0, 19.0], [132.0, 15.0], [131.0, 19.0], [130.0, 16.333333333333332], [142.0, 20.0], [141.0, 48.0], [140.0, 11.0], [136.0, 22.0], [148.0, 17.0], [147.0, 28.0], [144.0, 15.0], [157.0, 26.5], [156.0, 17.0], [155.0, 36.0], [154.0, 24.5], [152.0, 22.0], [167.0, 28.666666666666668], [162.0, 31.0], [160.0, 24.0], [175.0, 21.0], [174.0, 14.666666666666666], [173.0, 18.0], [172.0, 19.5], [171.0, 21.0], [170.0, 15.0], [169.0, 19.0], [179.0, 26.0], [178.0, 21.0], [176.0, 16.333333333333332], [191.0, 12.8], [187.0, 13.0], [185.0, 18.0], [184.0, 17.0], [197.0, 23.0], [196.0, 12.0], [195.0, 23.0], [192.0, 25.25], [203.0, 17.5], [206.0, 14.0], [204.0, 14.0], [202.0, 18.666666666666668], [201.0, 15.333333333333334], [209.0, 18.5], [212.0, 14.8], [215.0, 20.0], [214.0, 24.0], [213.0, 12.5], [211.0, 14.0], [210.0, 18.25], [208.0, 13.0], [216.0, 23.666666666666668], [217.0, 14.0], [219.0, 15.5], [220.0, 17.4], [223.0, 14.0], [221.0, 13.0], [224.0, 17.42857142857143], [225.0, 17.0], [226.0, 17.588235294117645], [227.0, 18.454545454545457], [228.0, 17.685714285714287], [229.0, 19.047619047619044], [230.0, 19.07692307692308], [231.0, 13.571428571428571], [232.0, 26.944444444444446], [233.0, 26.388888888888886], [234.0, 23.166666666666664], [235.0, 16.571428571428573], [236.0, 21.916666666666668], [237.0, 17.000000000000004], [238.0, 15.0], [239.0, 22.545454545454547], [242.0, 20.279999999999998], [243.0, 20.226415094339632], [244.0, 18.326923076923077], [245.0, 18.083333333333336], [246.0, 18.500000000000004], [247.0, 16.878048780487806], [240.0, 17.41176470588235], [241.0, 16.571428571428573], [250.0, 16.52173913043478], [252.0, 24.904761904761912], [253.0, 22.11764705882353], [254.0, 23.0], [255.0, 20.499999999999996], [251.0, 25.357142857142858], [249.0, 17.25], [248.0, 17.54838709677419], [257.0, 22.142857142857142], [256.0, 17.4], [258.0, 19.0], [259.0, 17.8], [260.0, 24.857142857142858], [261.0, 43.5], [262.0, 35.66666666666667], [263.0, 34.42857142857143], [264.0, 56.5], [271.0, 25.0], [269.0, 25.0], [270.0, 17.333333333333332], [265.0, 42.875], [266.0, 19.25], [267.0, 64.33333333333333], [274.0, 18.5], [273.0, 12.0], [279.0, 36.0], [275.0, 12.0], [285.0, 13.0], [286.0, 15.0], [276.0, 18.0], [277.0, 11.0], [280.0, 12.0], [281.0, 15.0], [282.0, 43.333333333333336], [283.0, 16.333333333333332], [288.0, 19.0], [290.0, 15.0], [292.0, 19.25], [293.0, 26.666666666666664], [294.0, 18.0], [295.0, 13.0], [296.0, 41.25], [299.0, 51.0], [298.0, 45.666666666666664], [297.0, 58.5], [300.0, 34.333333333333336], [301.0, 48.5], [303.0, 35.75], [304.0, 15.0], [305.0, 12.5], [306.0, 13.0], [308.0, 25.333333333333332], [307.0, 11.0], [310.0, 18.5], [312.0, 69.75]], "isOverall": false, "label": "User", "isController": false}, {"data": [[238.14199999999997, 21.20799999999997]], "isOverall": false, "label": "User-Aggregated", "isController": false}, {"data": [[2.0, 2754.0], [3.0, 2737.0], [4.0, 1090.0], [5.0, 2739.0], [6.0, 2733.0], [7.0, 1120.0], [8.0, 2736.0], [9.0, 2800.0], [10.0, 2099.0], [11.0, 836.0], [12.0, 2740.0], [13.0, 840.0], [14.0, 1120.0], [15.0, 1112.0], [16.0, 1101.0], [17.0, 1112.0], [18.0, 1105.0], [19.0, 1120.0], [20.0, 1117.0], [21.0, 1102.0], [23.0, 1105.0], [25.0, 1121.5], [26.0, 1113.0], [27.0, 1111.0], [28.0, 1138.0], [29.0, 1103.0], [30.0, 864.0], [31.0, 1110.0], [33.0, 1110.0], [32.0, 1104.0], [35.0, 852.0], [34.0, 843.0], [37.0, 1110.0], [36.0, 1113.0], [39.0, 977.5], [41.0, 1104.0], [40.0, 1103.0], [43.0, 1107.0], [42.0, 1129.0], [45.0, 1119.0], [44.0, 1106.0], [47.0, 1106.0], [46.0, 1105.0], [49.0, 1129.0], [48.0, 3775.0], [51.0, 1102.0], [50.0, 1106.0], [53.0, 1111.0], [52.0, 1111.0], [55.0, 1124.0], [57.0, 2127.0], [56.0, 1118.0], [59.0, 1109.0], [58.0, 1126.0], [61.0, 1109.0], [60.0, 831.0], [63.0, 1107.0], [62.0, 825.0], [67.0, 1116.0], [66.0, 1109.0], [65.0, 826.0], [64.0, 1109.0], [71.0, 818.0], [70.0, 1110.0], [69.0, 1102.0], [68.0, 823.0], [75.0, 827.0], [74.0, 824.0], [73.0, 1105.0], [72.0, 1110.0], [78.0, 1104.0], [77.0, 1097.0], [76.0, 1116.0], [83.0, 1109.0], [82.0, 1108.0], [81.0, 1120.0], [80.0, 822.5], [87.0, 1107.0], [86.0, 1113.0], [85.0, 1109.0], [84.0, 1108.0], [91.0, 1115.0], [90.0, 825.0], [89.0, 1130.0], [88.0, 809.0], [95.0, 1945.0], [93.0, 1126.0], [92.0, 1110.0], [97.0, 1607.5], [103.0, 1105.0], [102.0, 1103.0], [101.0, 1103.0], [100.0, 906.6666666666666], [107.0, 1110.0], [106.0, 1103.0], [105.0, 802.0], [104.0, 1114.0], [111.0, 803.0], [110.0, 1112.0], [109.0, 1103.0], [108.0, 1105.0], [115.0, 1116.0], [114.0, 2748.0], [113.0, 803.0], [112.0, 1115.0], [119.0, 1116.0], [118.0, 2103.0], [117.0, 788.0], [116.0, 1099.0], [123.0, 1114.0], [122.0, 789.5], [120.0, 1111.0], [127.0, 1105.0], [126.0, 2755.0], [125.0, 802.0], [124.0, 2108.0], [135.0, 1102.0], [134.0, 1100.0], [133.0, 1111.0], [132.0, 1111.0], [131.0, 1111.0], [130.0, 789.0], [129.0, 806.0], [128.0, 1103.0], [143.0, 1121.0], [142.0, 766.0], [141.0, 770.0], [140.0, 1102.0], [139.0, 1105.0], [138.0, 769.0], [137.0, 1124.0], [136.0, 770.0], [151.0, 1118.0], [149.0, 767.0], [148.0, 1113.0], [147.0, 1121.0], [146.0, 1118.0], [145.0, 1110.0], [144.0, 2752.0], [159.0, 1116.0], [158.0, 1110.0], [157.0, 1102.0], [156.0, 1110.0], [155.0, 1121.0], [154.0, 1109.0], [153.0, 1108.0], [152.0, 1116.0], [167.0, 1122.0], [165.0, 2102.0], [164.0, 943.5], [162.0, 764.0], [160.0, 1111.0], [175.0, 1107.0], [174.0, 1115.0], [173.0, 1124.0], [172.0, 767.0], [171.0, 765.0], [170.0, 771.0], [169.0, 1108.0], [168.0, 1120.0], [181.0, 1109.0], [180.0, 1113.0], [179.0, 765.0], [178.0, 773.0], [177.0, 1114.0], [176.0, 1107.0], [191.0, 2757.0], [190.0, 1121.0], [188.0, 764.0], [187.0, 1110.0], [186.0, 1110.0], [185.0, 752.0], [184.0, 1109.6666666666667], [199.0, 950.0], [197.0, 2111.0], [196.0, 759.0], [195.0, 939.5], [193.0, 1119.0], [192.0, 1107.0], [206.0, 1117.0], [205.0, 757.0], [204.0, 1107.0], [203.0, 1105.0], [202.0, 1111.0], [201.0, 762.0], [200.0, 763.0], [214.0, 2109.0], [213.0, 2113.0], [212.0, 1121.0], [211.0, 787.0], [210.0, 1112.0], [209.0, 767.0], [208.0, 1110.5], [223.0, 1112.0], [221.0, 750.0], [220.0, 1106.0], [219.0, 1937.5], [217.0, 756.0], [216.0, 1125.5], [230.0, 1132.8000000000002], [229.0, 1104.0], [228.0, 1082.2758620689656], [227.0, 1006.7391304347825], [226.0, 1161.1176470588234], [225.0, 2089.5], [224.0, 1040.2], [231.0, 1169.6], [238.0, 1075.25], [236.0, 1075.4285714285716], [235.0, 1043.0], [234.0, 1184.0000000000002], [233.0, 963.3333333333333], [232.0, 1081.7142857142856], [239.0, 1188.5], [237.0, 940.8571428571429], [247.0, 1123.9999999999998], [246.0, 1145.5531914893618], [245.0, 1131.0625], [244.0, 1256.1276595744682], [243.0, 1317.551724137931], [240.0, 1225.875], [241.0, 1091.8], [242.0, 1342.857142857143], [255.0, 1226.95], [253.0, 1023.909090909091], [252.0, 1099.2962962962963], [251.0, 1023.0370370370372], [250.0, 1121.3333333333333], [249.0, 1192.6562499999998], [248.0, 1261.2340425531913], [254.0, 1162.3333333333333], [270.0, 860.0], [271.0, 1001.0], [269.0, 1000.5], [258.0, 1132.0], [257.0, 1149.3333333333333], [256.0, 1436.3000000000002], [259.0, 1058.5], [267.0, 932.25], [265.0, 1041.3333333333333], [262.0, 1119.0], [263.0, 1121.0], [266.0, 935.0], [261.0, 1033.6666666666667], [260.0, 1054.5], [286.0, 970.5], [287.0, 825.0], [285.0, 1105.0], [284.0, 1107.0], [283.0, 836.0], [282.0, 965.5], [279.0, 834.5], [272.0, 890.0], [280.0, 1026.6666666666667], [278.0, 1023.8333333333333], [301.0, 961.6], [294.0, 834.0], [295.0, 840.0], [299.0, 901.4], [300.0, 1034.6666666666667], [290.0, 968.5], [289.0, 1018.3333333333334], [303.0, 961.6666666666666], [297.0, 840.0], [298.0, 838.0], [296.0, 824.0], [293.0, 1041.5], [292.0, 1120.0], [304.0, 859.0], [309.0, 854.0], [308.0, 865.0], [312.0, 1017.7142857142857], [310.0, 940.125], [306.0, 861.0], [1.0, 6108.0]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[218.27899999999977, 1149.1649999999984]], "isOverall": false, "label": "CreateUser-Aggregated", "isController": false}, {"data": [[10.0, 3741.0], [25.0, 2807.0], [58.0, 2134.0], [65.0, 2786.0], [102.0, 2772.0], [119.0, 1133.0], [120.0, 1536.75], [126.0, 1148.0], [125.0, 1146.0], [124.0, 1677.3333333333333], [134.0, 1136.5], [133.0, 1135.0], [131.0, 1137.5], [130.0, 2764.0], [129.0, 1155.0], [143.0, 1143.0], [141.0, 1133.6666666666667], [151.0, 1121.0], [149.0, 809.0], [146.0, 1142.0], [144.0, 1141.0], [157.0, 1024.3333333333333], [156.0, 1134.0], [152.0, 1137.0], [167.0, 1147.0], [164.0, 1133.0], [160.0, 978.0], [175.0, 1923.2], [174.0, 1154.0], [173.0, 1133.0], [172.0, 1125.0], [171.0, 1139.0], [169.0, 1979.5], [168.0, 975.0], [181.0, 1788.0], [180.0, 790.0], [179.0, 794.0], [176.0, 1423.857142857143], [191.0, 1065.2], [188.0, 964.0], [187.0, 961.5], [186.0, 1130.0], [185.0, 1954.0], [199.0, 1125.0], [197.0, 1130.6666666666667], [195.0, 1140.0], [193.0, 1133.0], [192.0, 1130.0], [201.0, 1200.6666666666667], [202.0, 988.0], [203.0, 1014.0], [204.0, 1079.0], [205.0, 1192.0], [207.0, 1267.0], [206.0, 1133.0], [210.0, 1771.75], [213.0, 1117.0], [215.0, 1204.0], [214.0, 777.0], [212.0, 1021.0], [211.0, 2452.0], [217.0, 1095.0], [218.0, 1736.0], [222.0, 1592.0], [223.0, 1143.0], [221.0, 1462.25], [220.0, 1132.5], [219.0, 1472.0], [224.0, 1133.8461538461538], [225.0, 1323.6666666666667], [227.0, 1142.3461538461538], [228.0, 1097.3928571428569], [230.0, 1219.428571428571], [231.0, 1243.2727272727273], [226.0, 1156.157894736842], [229.0, 1030.857142857143], [232.0, 1166.0], [234.0, 1226.1599999999999], [235.0, 1203.6666666666665], [236.0, 1058.0833333333337], [237.0, 1206.4], [233.0, 1000.8], [238.0, 1120.0000000000002], [239.0, 1185.4], [241.0, 1105.0], [242.0, 1263.258064516129], [243.0, 1202.1499999999999], [244.0, 1330.675], [245.0, 1230.8085106382982], [246.0, 1247.8095238095236], [240.0, 1097.909090909091], [247.0, 1195.3055555555552], [249.0, 1213.7272727272732], [250.0, 1211.2000000000003], [251.0, 1268.111111111111], [252.0, 1368.2857142857142], [253.0, 1247.375], [254.0, 1372.6470588235293], [255.0, 1395.9375000000002], [248.0, 1359.3939393939397], [257.0, 1748.6875], [256.0, 1241.2857142857142], [258.0, 2066.285714285714], [259.0, 1708.7142857142858], [260.0, 1537.6666666666667], [261.0, 1480.5833333333335], [262.0, 1258.272727272727], [263.0, 1134.6666666666667], [264.0, 1209.3333333333333], [271.0, 1034.0], [268.0, 1134.0], [269.0, 1125.0], [265.0, 1095.0], [266.0, 904.0], [267.0, 1253.5], [284.0, 1130.0], [273.0, 1002.0], [272.0, 1045.3333333333333], [274.0, 1130.0], [276.0, 876.0], [278.0, 1142.0], [279.0, 1126.3333333333333], [280.0, 1003.0], [282.0, 1138.0], [285.0, 872.0], [286.0, 1118.0], [290.0, 1132.6666666666667], [288.0, 892.0], [289.0, 1138.0], [291.0, 1129.0], [292.0, 1116.5], [293.0, 1123.0], [294.0, 1120.5], [299.0, 1074.0], [298.0, 1046.3333333333333], [297.0, 1022.5], [296.0, 956.3333333333334], [300.0, 1082.375], [301.0, 1136.0], [303.0, 1141.0], [304.0, 1001.75], [307.0, 1071.5], [309.0, 1044.3333333333333], [308.0, 1133.0], [310.0, 1142.6666666666667], [312.0, 1085.6666666666667]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[238.27499999999975, 1251.9560000000008]], "isOverall": false, "label": "Login-Aggregated", "isController": false}, {"data": [[10.0, 17.0], [23.0, 12.0], [53.0, 19.0], [64.0, 18.0], [97.0, 20.0], [119.0, 10.0], [117.0, 18.0], [120.0, 19.571428571428573], [126.0, 17.0], [134.0, 13.0], [133.0, 25.0], [131.0, 13.0], [130.0, 18.0], [129.0, 37.0], [143.0, 24.0], [141.0, 17.666666666666668], [136.0, 14.5], [151.0, 19.0], [149.0, 13.0], [144.0, 18.0], [159.0, 31.0], [157.0, 25.5], [155.0, 20.0], [153.0, 13.0], [152.0, 18.5], [167.0, 35.0], [160.0, 23.0], [174.0, 30.0], [173.0, 22.0], [172.0, 17.0], [170.0, 13.666666666666666], [169.0, 14.0], [180.0, 21.5], [177.0, 13.5], [176.0, 16.8], [191.0, 16.5], [188.0, 21.0], [185.0, 16.0], [184.0, 15.0], [197.0, 20.0], [192.0, 15.666666666666666], [204.0, 23.333333333333332], [202.0, 14.0], [209.0, 14.0], [210.0, 14.750000000000002], [211.0, 23.75], [214.0, 12.0], [213.0, 11.0], [212.0, 10.0], [208.0, 35.0], [217.0, 13.0], [218.0, 17.0], [219.0, 20.571428571428573], [220.0, 22.0], [221.0, 12.5], [223.0, 10.0], [216.0, 14.0], [227.0, 14.071428571428571], [228.0, 19.38095238095238], [229.0, 17.952380952380953], [230.0, 14.045454545454547], [231.0, 25.933333333333337], [225.0, 13.941176470588237], [224.0, 15.8], [226.0, 15.153846153846153], [234.0, 15.999999999999996], [235.0, 20.333333333333332], [236.0, 20.499999999999996], [237.0, 18.5], [238.0, 17.076923076923073], [233.0, 22.52631578947368], [232.0, 35.0], [239.0, 25.14285714285714], [240.0, 22.11111111111111], [244.0, 16.944444444444446], [245.0, 17.225], [246.0, 14.575757575757573], [247.0, 17.14285714285714], [243.0, 20.666666666666664], [241.0, 14.857142857142858], [242.0, 24.11764705882353], [248.0, 18.791666666666664], [252.0, 33.0], [253.0, 24.583333333333336], [254.0, 20.25], [255.0, 20.76923076923077], [251.0, 24.083333333333336], [250.0, 18.65217391304348], [249.0, 17.7037037037037], [257.0, 16.777777777777775], [256.0, 18.333333333333332], [258.0, 17.555555555555557], [259.0, 18.333333333333332], [260.0, 20.333333333333336], [261.0, 37.83333333333333], [262.0, 40.333333333333336], [263.0, 36.75], [264.0, 66.0], [271.0, 24.0], [268.0, 17.28571428571429], [269.0, 17.333333333333332], [265.0, 34.0], [266.0, 20.866666666666667], [267.0, 29.625], [274.0, 42.0], [272.0, 18.0], [275.0, 28.0], [285.0, 14.5], [287.0, 13.5], [276.0, 17.0], [277.0, 24.0], [278.0, 17.0], [280.0, 28.0], [282.0, 45.0], [283.0, 26.0], [291.0, 23.0], [292.0, 24.0], [293.0, 20.75], [294.0, 14.25], [289.0, 50.5], [290.0, 51.0], [296.0, 40.0], [297.0, 23.0], [299.0, 42.5], [298.0, 37.25], [301.0, 14.0], [300.0, 58.4], [302.0, 13.0], [303.0, 19.0], [304.0, 11.0], [305.0, 12.0], [306.0, 12.0], [307.0, 34.5], [308.0, 26.5], [310.0, 14.0], [312.0, 62.5]], "isOverall": false, "label": "getUserList", "isController": false}, {"data": [[237.951, 20.706999999999997]], "isOverall": false, "label": "getUserList-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 312.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 13566.666666666666, "minX": 1.67397984E12, "maxY": 69609.38333333333, "series": [{"data": [[1.67397984E12, 69609.38333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.67397984E12, 13566.666666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67397984E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 20.706999999999997, "minX": 1.67397984E12, "maxY": 1251.9560000000008, "series": [{"data": [[1.67397984E12, 21.20799999999997]], "isOverall": false, "label": "User", "isController": false}, {"data": [[1.67397984E12, 1149.1649999999984]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[1.67397984E12, 1251.9560000000008]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.67397984E12, 20.706999999999997]], "isOverall": false, "label": "getUserList", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67397984E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 20.492000000000015, "minX": 1.67397984E12, "maxY": 1251.9240000000018, "series": [{"data": [[1.67397984E12, 21.199000000000034]], "isOverall": false, "label": "User", "isController": false}, {"data": [[1.67397984E12, 1149.1510000000023]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[1.67397984E12, 1251.9240000000018]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.67397984E12, 20.492000000000015]], "isOverall": false, "label": "getUserList", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67397984E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.67397984E12, "maxY": 120.80499999999992, "series": [{"data": [[1.67397984E12, 0.0]], "isOverall": false, "label": "User", "isController": false}, {"data": [[1.67397984E12, 0.0]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[1.67397984E12, 120.80499999999992]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.67397984E12, 0.0]], "isOverall": false, "label": "getUserList", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67397984E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 9.0, "minX": 1.67397984E12, "maxY": 6992.0, "series": [{"data": [[1.67397984E12, 6992.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.67397984E12, 9.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.67397984E12, 1167.9]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.67397984E12, 2795.99]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.67397984E12, 391.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.67397984E12, 1875.0499999999965]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67397984E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 23.0, "minX": 2.0, "maxY": 4431.0, "series": [{"data": [[517.0, 23.0], [8.0, 2734.5], [2.0, 4431.0], [342.0, 54.5], [43.0, 1106.0], [360.0, 796.5], [387.0, 719.0], [197.0, 1103.0], [409.0, 772.0], [435.0, 372.5], [456.0, 24.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 517.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 23.0, "minX": 2.0, "maxY": 4431.0, "series": [{"data": [[517.0, 23.0], [8.0, 2734.5], [2.0, 4431.0], [342.0, 54.5], [43.0, 1106.0], [360.0, 796.5], [387.0, 719.0], [197.0, 1103.0], [409.0, 772.0], [435.0, 372.5], [456.0, 24.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 517.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 66.66666666666667, "minX": 1.67397984E12, "maxY": 66.66666666666667, "series": [{"data": [[1.67397984E12, 66.66666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67397984E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.67397984E12, "maxY": 50.0, "series": [{"data": [[1.67397984E12, 50.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.67397984E12, 16.666666666666668]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67397984E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.67397984E12, "maxY": 16.666666666666668, "series": [{"data": [[1.67397984E12, 16.666666666666668]], "isOverall": false, "label": "User-success", "isController": false}, {"data": [[1.67397984E12, 16.666666666666668]], "isOverall": false, "label": "getUserList-success", "isController": false}, {"data": [[1.67397984E12, 16.666666666666668]], "isOverall": false, "label": "CreateUser-success", "isController": false}, {"data": [[1.67397984E12, 16.666666666666668]], "isOverall": false, "label": "Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67397984E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 66.66666666666667, "minX": 1.67397984E12, "maxY": 66.66666666666667, "series": [{"data": [[1.67397984E12, 66.66666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67397984E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

