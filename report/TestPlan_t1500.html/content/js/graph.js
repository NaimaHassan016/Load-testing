/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 8.0, "minX": 0.0, "maxY": 16109.0, "series": [{"data": [[0.0, 9.0], [0.1, 9.0], [0.2, 9.0], [0.3, 9.0], [0.4, 9.0], [0.5, 9.0], [0.6, 9.0], [0.7, 9.0], [0.8, 10.0], [0.9, 10.0], [1.0, 10.0], [1.1, 10.0], [1.2, 10.0], [1.3, 10.0], [1.4, 10.0], [1.5, 10.0], [1.6, 10.0], [1.7, 10.0], [1.8, 10.0], [1.9, 10.0], [2.0, 10.0], [2.1, 10.0], [2.2, 10.0], [2.3, 10.0], [2.4, 10.0], [2.5, 10.0], [2.6, 10.0], [2.7, 10.0], [2.8, 10.0], [2.9, 10.0], [3.0, 10.0], [3.1, 10.0], [3.2, 10.0], [3.3, 10.0], [3.4, 10.0], [3.5, 10.0], [3.6, 10.0], [3.7, 11.0], [3.8, 11.0], [3.9, 11.0], [4.0, 11.0], [4.1, 11.0], [4.2, 11.0], [4.3, 11.0], [4.4, 11.0], [4.5, 11.0], [4.6, 11.0], [4.7, 11.0], [4.8, 11.0], [4.9, 11.0], [5.0, 11.0], [5.1, 11.0], [5.2, 11.0], [5.3, 11.0], [5.4, 11.0], [5.5, 11.0], [5.6, 11.0], [5.7, 11.0], [5.8, 11.0], [5.9, 11.0], [6.0, 11.0], [6.1, 11.0], [6.2, 11.0], [6.3, 11.0], [6.4, 11.0], [6.5, 11.0], [6.6, 11.0], [6.7, 11.0], [6.8, 11.0], [6.9, 11.0], [7.0, 11.0], [7.1, 11.0], [7.2, 11.0], [7.3, 11.0], [7.4, 11.0], [7.5, 11.0], [7.6, 11.0], [7.7, 11.0], [7.8, 11.0], [7.9, 11.0], [8.0, 11.0], [8.1, 11.0], [8.2, 11.0], [8.3, 11.0], [8.4, 11.0], [8.5, 11.0], [8.6, 11.0], [8.7, 11.0], [8.8, 11.0], [8.9, 11.0], [9.0, 11.0], [9.1, 11.0], [9.2, 11.0], [9.3, 11.0], [9.4, 11.0], [9.5, 11.0], [9.6, 11.0], [9.7, 11.0], [9.8, 11.0], [9.9, 11.0], [10.0, 11.0], [10.1, 11.0], [10.2, 11.0], [10.3, 11.0], [10.4, 11.0], [10.5, 12.0], [10.6, 12.0], [10.7, 12.0], [10.8, 12.0], [10.9, 12.0], [11.0, 12.0], [11.1, 12.0], [11.2, 12.0], [11.3, 12.0], [11.4, 12.0], [11.5, 12.0], [11.6, 12.0], [11.7, 12.0], [11.8, 12.0], [11.9, 12.0], [12.0, 12.0], [12.1, 12.0], [12.2, 12.0], [12.3, 12.0], [12.4, 12.0], [12.5, 12.0], [12.6, 12.0], [12.7, 12.0], [12.8, 12.0], [12.9, 12.0], [13.0, 12.0], [13.1, 12.0], [13.2, 12.0], [13.3, 12.0], [13.4, 12.0], [13.5, 12.0], [13.6, 12.0], [13.7, 12.0], [13.8, 12.0], [13.9, 12.0], [14.0, 12.0], [14.1, 12.0], [14.2, 12.0], [14.3, 12.0], [14.4, 12.0], [14.5, 12.0], [14.6, 12.0], [14.7, 12.0], [14.8, 12.0], [14.9, 12.0], [15.0, 12.0], [15.1, 12.0], [15.2, 12.0], [15.3, 12.0], [15.4, 12.0], [15.5, 12.0], [15.6, 12.0], [15.7, 12.0], [15.8, 12.0], [15.9, 12.0], [16.0, 12.0], [16.1, 12.0], [16.2, 12.0], [16.3, 12.0], [16.4, 12.0], [16.5, 12.0], [16.6, 12.0], [16.7, 12.0], [16.8, 12.0], [16.9, 12.0], [17.0, 12.0], [17.1, 12.0], [17.2, 12.0], [17.3, 12.0], [17.4, 12.0], [17.5, 12.0], [17.6, 12.0], [17.7, 12.0], [17.8, 12.0], [17.9, 12.0], [18.0, 12.0], [18.1, 12.0], [18.2, 12.0], [18.3, 12.0], [18.4, 12.0], [18.5, 12.0], [18.6, 12.0], [18.7, 12.0], [18.8, 12.0], [18.9, 12.0], [19.0, 12.0], [19.1, 12.0], [19.2, 12.0], [19.3, 12.0], [19.4, 12.0], [19.5, 12.0], [19.6, 12.0], [19.7, 12.0], [19.8, 12.0], [19.9, 12.0], [20.0, 12.0], [20.1, 12.0], [20.2, 12.0], [20.3, 12.0], [20.4, 12.0], [20.5, 12.0], [20.6, 12.0], [20.7, 12.0], [20.8, 13.0], [20.9, 13.0], [21.0, 13.0], [21.1, 13.0], [21.2, 13.0], [21.3, 13.0], [21.4, 13.0], [21.5, 13.0], [21.6, 13.0], [21.7, 13.0], [21.8, 13.0], [21.9, 13.0], [22.0, 13.0], [22.1, 13.0], [22.2, 13.0], [22.3, 13.0], [22.4, 13.0], [22.5, 13.0], [22.6, 13.0], [22.7, 13.0], [22.8, 13.0], [22.9, 13.0], [23.0, 13.0], [23.1, 13.0], [23.2, 13.0], [23.3, 13.0], [23.4, 13.0], [23.5, 13.0], [23.6, 13.0], [23.7, 13.0], [23.8, 13.0], [23.9, 13.0], [24.0, 13.0], [24.1, 13.0], [24.2, 13.0], [24.3, 13.0], [24.4, 13.0], [24.5, 13.0], [24.6, 13.0], [24.7, 13.0], [24.8, 13.0], [24.9, 13.0], [25.0, 13.0], [25.1, 13.0], [25.2, 13.0], [25.3, 13.0], [25.4, 13.0], [25.5, 13.0], [25.6, 13.0], [25.7, 13.0], [25.8, 13.0], [25.9, 13.0], [26.0, 13.0], [26.1, 13.0], [26.2, 13.0], [26.3, 13.0], [26.4, 13.0], [26.5, 13.0], [26.6, 13.0], [26.7, 13.0], [26.8, 13.0], [26.9, 13.0], [27.0, 13.0], [27.1, 13.0], [27.2, 13.0], [27.3, 13.0], [27.4, 13.0], [27.5, 13.0], [27.6, 13.0], [27.7, 13.0], [27.8, 13.0], [27.9, 13.0], [28.0, 13.0], [28.1, 13.0], [28.2, 13.0], [28.3, 13.0], [28.4, 13.0], [28.5, 13.0], [28.6, 13.0], [28.7, 13.0], [28.8, 13.0], [28.9, 13.0], [29.0, 13.0], [29.1, 13.0], [29.2, 13.0], [29.3, 13.0], [29.4, 13.0], [29.5, 13.0], [29.6, 13.0], [29.7, 13.0], [29.8, 14.0], [29.9, 14.0], [30.0, 14.0], [30.1, 14.0], [30.2, 14.0], [30.3, 14.0], [30.4, 14.0], [30.5, 14.0], [30.6, 14.0], [30.7, 14.0], [30.8, 14.0], [30.9, 14.0], [31.0, 14.0], [31.1, 14.0], [31.2, 14.0], [31.3, 14.0], [31.4, 14.0], [31.5, 14.0], [31.6, 14.0], [31.7, 14.0], [31.8, 14.0], [31.9, 14.0], [32.0, 14.0], [32.1, 14.0], [32.2, 14.0], [32.3, 14.0], [32.4, 14.0], [32.5, 14.0], [32.6, 14.0], [32.7, 14.0], [32.8, 14.0], [32.9, 14.0], [33.0, 14.0], [33.1, 14.0], [33.2, 14.0], [33.3, 14.0], [33.4, 14.0], [33.5, 14.0], [33.6, 14.0], [33.7, 14.0], [33.8, 14.0], [33.9, 14.0], [34.0, 14.0], [34.1, 14.0], [34.2, 14.0], [34.3, 14.0], [34.4, 14.0], [34.5, 14.0], [34.6, 14.0], [34.7, 14.0], [34.8, 14.0], [34.9, 14.0], [35.0, 14.0], [35.1, 14.0], [35.2, 14.0], [35.3, 14.0], [35.4, 14.0], [35.5, 14.0], [35.6, 14.0], [35.7, 14.0], [35.8, 14.0], [35.9, 14.0], [36.0, 14.0], [36.1, 14.0], [36.2, 14.0], [36.3, 14.0], [36.4, 14.0], [36.5, 14.0], [36.6, 14.0], [36.7, 14.0], [36.8, 14.0], [36.9, 14.0], [37.0, 14.0], [37.1, 14.0], [37.2, 14.0], [37.3, 14.0], [37.4, 14.0], [37.5, 14.0], [37.6, 14.0], [37.7, 14.0], [37.8, 14.0], [37.9, 14.0], [38.0, 14.0], [38.1, 14.0], [38.2, 14.0], [38.3, 14.0], [38.4, 14.0], [38.5, 14.0], [38.6, 14.0], [38.7, 14.0], [38.8, 14.0], [38.9, 14.0], [39.0, 14.0], [39.1, 14.0], [39.2, 14.0], [39.3, 14.0], [39.4, 14.0], [39.5, 14.0], [39.6, 14.0], [39.7, 14.0], [39.8, 14.0], [39.9, 15.0], [40.0, 15.0], [40.1, 15.0], [40.2, 15.0], [40.3, 15.0], [40.4, 15.0], [40.5, 15.0], [40.6, 15.0], [40.7, 15.0], [40.8, 15.0], [40.9, 15.0], [41.0, 15.0], [41.1, 15.0], [41.2, 15.0], [41.3, 15.0], [41.4, 15.0], [41.5, 15.0], [41.6, 15.0], [41.7, 15.0], [41.8, 15.0], [41.9, 15.0], [42.0, 15.0], [42.1, 15.0], [42.2, 15.0], [42.3, 15.0], [42.4, 15.0], [42.5, 15.0], [42.6, 15.0], [42.7, 15.0], [42.8, 15.0], [42.9, 15.0], [43.0, 15.0], [43.1, 15.0], [43.2, 15.0], [43.3, 15.0], [43.4, 15.0], [43.5, 15.0], [43.6, 15.0], [43.7, 15.0], [43.8, 15.0], [43.9, 15.0], [44.0, 15.0], [44.1, 15.0], [44.2, 15.0], [44.3, 15.0], [44.4, 15.0], [44.5, 15.0], [44.6, 15.0], [44.7, 15.0], [44.8, 15.0], [44.9, 15.0], [45.0, 15.0], [45.1, 15.0], [45.2, 15.0], [45.3, 15.0], [45.4, 15.0], [45.5, 15.0], [45.6, 15.0], [45.7, 15.0], [45.8, 15.0], [45.9, 15.0], [46.0, 15.0], [46.1, 15.0], [46.2, 15.0], [46.3, 15.0], [46.4, 15.0], [46.5, 15.0], [46.6, 15.0], [46.7, 15.0], [46.8, 15.0], [46.9, 15.0], [47.0, 15.0], [47.1, 15.0], [47.2, 15.0], [47.3, 15.0], [47.4, 15.0], [47.5, 15.0], [47.6, 15.0], [47.7, 15.0], [47.8, 15.0], [47.9, 15.0], [48.0, 15.0], [48.1, 15.0], [48.2, 15.0], [48.3, 15.0], [48.4, 15.0], [48.5, 15.0], [48.6, 15.0], [48.7, 15.0], [48.8, 15.0], [48.9, 15.0], [49.0, 15.0], [49.1, 15.0], [49.2, 15.0], [49.3, 15.0], [49.4, 15.0], [49.5, 15.0], [49.6, 15.0], [49.7, 15.0], [49.8, 15.0], [49.9, 15.0], [50.0, 15.0], [50.1, 15.0], [50.2, 15.0], [50.3, 15.0], [50.4, 15.0], [50.5, 15.0], [50.6, 15.0], [50.7, 15.0], [50.8, 15.0], [50.9, 16.0], [51.0, 16.0], [51.1, 16.0], [51.2, 16.0], [51.3, 16.0], [51.4, 16.0], [51.5, 16.0], [51.6, 16.0], [51.7, 16.0], [51.8, 16.0], [51.9, 16.0], [52.0, 16.0], [52.1, 16.0], [52.2, 16.0], [52.3, 16.0], [52.4, 16.0], [52.5, 16.0], [52.6, 16.0], [52.7, 16.0], [52.8, 16.0], [52.9, 16.0], [53.0, 16.0], [53.1, 16.0], [53.2, 16.0], [53.3, 16.0], [53.4, 16.0], [53.5, 16.0], [53.6, 16.0], [53.7, 16.0], [53.8, 16.0], [53.9, 16.0], [54.0, 16.0], [54.1, 16.0], [54.2, 16.0], [54.3, 16.0], [54.4, 16.0], [54.5, 16.0], [54.6, 16.0], [54.7, 16.0], [54.8, 16.0], [54.9, 16.0], [55.0, 16.0], [55.1, 16.0], [55.2, 16.0], [55.3, 16.0], [55.4, 16.0], [55.5, 16.0], [55.6, 16.0], [55.7, 16.0], [55.8, 16.0], [55.9, 16.0], [56.0, 16.0], [56.1, 16.0], [56.2, 16.0], [56.3, 16.0], [56.4, 16.0], [56.5, 16.0], [56.6, 16.0], [56.7, 16.0], [56.8, 16.0], [56.9, 16.0], [57.0, 16.0], [57.1, 16.0], [57.2, 16.0], [57.3, 16.0], [57.4, 16.0], [57.5, 16.0], [57.6, 16.0], [57.7, 16.0], [57.8, 17.0], [57.9, 17.0], [58.0, 17.0], [58.1, 17.0], [58.2, 17.0], [58.3, 17.0], [58.4, 17.0], [58.5, 17.0], [58.6, 17.0], [58.7, 17.0], [58.8, 17.0], [58.9, 17.0], [59.0, 17.0], [59.1, 17.0], [59.2, 17.0], [59.3, 17.0], [59.4, 17.0], [59.5, 17.0], [59.6, 17.0], [59.7, 17.0], [59.8, 17.0], [59.9, 17.0], [60.0, 17.0], [60.1, 17.0], [60.2, 17.0], [60.3, 17.0], [60.4, 17.0], [60.5, 17.0], [60.6, 17.0], [60.7, 17.0], [60.8, 17.0], [60.9, 17.0], [61.0, 17.0], [61.1, 17.0], [61.2, 17.0], [61.3, 17.0], [61.4, 17.0], [61.5, 17.0], [61.6, 17.0], [61.7, 17.0], [61.8, 17.0], [61.9, 17.0], [62.0, 17.0], [62.1, 17.0], [62.2, 17.0], [62.3, 17.0], [62.4, 17.0], [62.5, 17.0], [62.6, 17.0], [62.7, 17.0], [62.8, 17.0], [62.9, 17.0], [63.0, 17.0], [63.1, 17.0], [63.2, 17.0], [63.3, 17.0], [63.4, 17.0], [63.5, 17.0], [63.6, 17.0], [63.7, 17.0], [63.8, 17.0], [63.9, 17.0], [64.0, 17.0], [64.1, 17.0], [64.2, 18.0], [64.3, 18.0], [64.4, 18.0], [64.5, 18.0], [64.6, 18.0], [64.7, 18.0], [64.8, 18.0], [64.9, 18.0], [65.0, 18.0], [65.1, 18.0], [65.2, 18.0], [65.3, 18.0], [65.4, 18.0], [65.5, 18.0], [65.6, 18.0], [65.7, 18.0], [65.8, 18.0], [65.9, 18.0], [66.0, 18.0], [66.1, 18.0], [66.2, 18.0], [66.3, 18.0], [66.4, 18.0], [66.5, 18.0], [66.6, 18.0], [66.7, 18.0], [66.8, 18.0], [66.9, 18.0], [67.0, 18.0], [67.1, 18.0], [67.2, 18.0], [67.3, 18.0], [67.4, 18.0], [67.5, 18.0], [67.6, 18.0], [67.7, 18.0], [67.8, 18.0], [67.9, 18.0], [68.0, 18.0], [68.1, 18.0], [68.2, 18.0], [68.3, 18.0], [68.4, 18.0], [68.5, 18.0], [68.6, 18.0], [68.7, 18.0], [68.8, 18.0], [68.9, 18.0], [69.0, 18.0], [69.1, 18.0], [69.2, 19.0], [69.3, 19.0], [69.4, 19.0], [69.5, 19.0], [69.6, 19.0], [69.7, 19.0], [69.8, 19.0], [69.9, 19.0], [70.0, 19.0], [70.1, 19.0], [70.2, 19.0], [70.3, 19.0], [70.4, 19.0], [70.5, 19.0], [70.6, 19.0], [70.7, 19.0], [70.8, 19.0], [70.9, 19.0], [71.0, 19.0], [71.1, 19.0], [71.2, 19.0], [71.3, 19.0], [71.4, 19.0], [71.5, 19.0], [71.6, 19.0], [71.7, 19.0], [71.8, 19.0], [71.9, 19.0], [72.0, 19.0], [72.1, 19.0], [72.2, 19.0], [72.3, 19.0], [72.4, 19.0], [72.5, 19.0], [72.6, 19.0], [72.7, 19.0], [72.8, 19.0], [72.9, 19.0], [73.0, 19.0], [73.1, 19.0], [73.2, 19.0], [73.3, 19.0], [73.4, 19.0], [73.5, 19.0], [73.6, 19.0], [73.7, 19.0], [73.8, 19.0], [73.9, 19.0], [74.0, 19.0], [74.1, 19.0], [74.2, 19.0], [74.3, 19.0], [74.4, 19.0], [74.5, 20.0], [74.6, 20.0], [74.7, 20.0], [74.8, 20.0], [74.9, 20.0], [75.0, 20.0], [75.1, 20.0], [75.2, 20.0], [75.3, 20.0], [75.4, 20.0], [75.5, 20.0], [75.6, 20.0], [75.7, 20.0], [75.8, 20.0], [75.9, 20.0], [76.0, 20.0], [76.1, 20.0], [76.2, 20.0], [76.3, 20.0], [76.4, 20.0], [76.5, 20.0], [76.6, 20.0], [76.7, 20.0], [76.8, 20.0], [76.9, 20.0], [77.0, 20.0], [77.1, 20.0], [77.2, 20.0], [77.3, 20.0], [77.4, 20.0], [77.5, 20.0], [77.6, 20.0], [77.7, 20.0], [77.8, 20.0], [77.9, 20.0], [78.0, 20.0], [78.1, 20.0], [78.2, 20.0], [78.3, 20.0], [78.4, 21.0], [78.5, 21.0], [78.6, 21.0], [78.7, 21.0], [78.8, 21.0], [78.9, 21.0], [79.0, 21.0], [79.1, 21.0], [79.2, 21.0], [79.3, 21.0], [79.4, 21.0], [79.5, 21.0], [79.6, 21.0], [79.7, 21.0], [79.8, 21.0], [79.9, 21.0], [80.0, 21.0], [80.1, 21.0], [80.2, 21.0], [80.3, 21.0], [80.4, 21.0], [80.5, 21.0], [80.6, 21.0], [80.7, 21.0], [80.8, 21.0], [80.9, 21.0], [81.0, 21.0], [81.1, 21.0], [81.2, 21.0], [81.3, 21.0], [81.4, 22.0], [81.5, 22.0], [81.6, 22.0], [81.7, 22.0], [81.8, 22.0], [81.9, 22.0], [82.0, 22.0], [82.1, 22.0], [82.2, 22.0], [82.3, 22.0], [82.4, 22.0], [82.5, 22.0], [82.6, 22.0], [82.7, 22.0], [82.8, 22.0], [82.9, 22.0], [83.0, 22.0], [83.1, 22.0], [83.2, 22.0], [83.3, 22.0], [83.4, 22.0], [83.5, 22.0], [83.6, 22.0], [83.7, 23.0], [83.8, 23.0], [83.9, 23.0], [84.0, 23.0], [84.1, 23.0], [84.2, 23.0], [84.3, 23.0], [84.4, 23.0], [84.5, 23.0], [84.6, 23.0], [84.7, 23.0], [84.8, 23.0], [84.9, 23.0], [85.0, 23.0], [85.1, 23.0], [85.2, 23.0], [85.3, 23.0], [85.4, 23.0], [85.5, 23.0], [85.6, 23.0], [85.7, 23.0], [85.8, 23.0], [85.9, 23.0], [86.0, 23.0], [86.1, 24.0], [86.2, 24.0], [86.3, 24.0], [86.4, 24.0], [86.5, 24.0], [86.6, 24.0], [86.7, 24.0], [86.8, 24.0], [86.9, 24.0], [87.0, 24.0], [87.1, 24.0], [87.2, 24.0], [87.3, 24.0], [87.4, 24.0], [87.5, 24.0], [87.6, 24.0], [87.7, 24.0], [87.8, 24.0], [87.9, 24.0], [88.0, 24.0], [88.1, 25.0], [88.2, 25.0], [88.3, 25.0], [88.4, 25.0], [88.5, 25.0], [88.6, 25.0], [88.7, 25.0], [88.8, 25.0], [88.9, 25.0], [89.0, 25.0], [89.1, 25.0], [89.2, 25.0], [89.3, 25.0], [89.4, 25.0], [89.5, 25.0], [89.6, 26.0], [89.7, 26.0], [89.8, 26.0], [89.9, 26.0], [90.0, 26.0], [90.1, 26.0], [90.2, 26.0], [90.3, 26.0], [90.4, 26.0], [90.5, 26.0], [90.6, 26.0], [90.7, 26.0], [90.8, 26.0], [90.9, 26.0], [91.0, 26.0], [91.1, 26.0], [91.2, 26.0], [91.3, 26.0], [91.4, 27.0], [91.5, 27.0], [91.6, 27.0], [91.7, 27.0], [91.8, 27.0], [91.9, 27.0], [92.0, 27.0], [92.1, 27.0], [92.2, 27.0], [92.3, 27.0], [92.4, 28.0], [92.5, 28.0], [92.6, 28.0], [92.7, 28.0], [92.8, 29.0], [92.9, 29.0], [93.0, 29.0], [93.1, 29.0], [93.2, 29.0], [93.3, 29.0], [93.4, 29.0], [93.5, 29.0], [93.6, 30.0], [93.7, 30.0], [93.8, 30.0], [93.9, 30.0], [94.0, 30.0], [94.1, 30.0], [94.2, 30.0], [94.3, 30.0], [94.4, 30.0], [94.5, 31.0], [94.6, 31.0], [94.7, 31.0], [94.8, 31.0], [94.9, 31.0], [95.0, 32.0], [95.1, 32.0], [95.2, 32.0], [95.3, 32.0], [95.4, 33.0], [95.5, 33.0], [95.6, 33.0], [95.7, 33.0], [95.8, 33.0], [95.9, 34.0], [96.0, 34.0], [96.1, 34.0], [96.2, 34.0], [96.3, 34.0], [96.4, 36.0], [96.5, 36.0], [96.6, 36.0], [96.7, 37.0], [96.8, 37.0], [96.9, 37.0], [97.0, 37.0], [97.1, 37.0], [97.2, 38.0], [97.3, 38.0], [97.4, 38.0], [97.5, 39.0], [97.6, 39.0], [97.7, 39.0], [97.8, 39.0], [97.9, 40.0], [98.0, 40.0], [98.1, 41.0], [98.2, 42.0], [98.3, 42.0], [98.4, 43.0], [98.5, 45.0], [98.6, 45.0], [98.7, 47.0], [98.8, 47.0], [98.9, 48.0], [99.0, 49.0], [99.1, 50.0], [99.2, 51.0], [99.3, 52.0], [99.4, 52.0], [99.5, 59.0], [99.6, 60.0], [99.7, 67.0], [99.8, 69.0], [99.9, 79.0]], "isOverall": false, "label": "User", "isController": false}, {"data": [[0.0, 640.0], [0.1, 644.0], [0.2, 645.0], [0.3, 647.0], [0.4, 650.0], [0.5, 651.0], [0.6, 652.0], [0.7, 653.0], [0.8, 654.0], [0.9, 654.0], [1.0, 658.0], [1.1, 659.0], [1.2, 659.0], [1.3, 659.0], [1.4, 662.0], [1.5, 663.0], [1.6, 664.0], [1.7, 665.0], [1.8, 666.0], [1.9, 666.0], [2.0, 668.0], [2.1, 669.0], [2.2, 671.0], [2.3, 676.0], [2.4, 678.0], [2.5, 683.0], [2.6, 684.0], [2.7, 687.0], [2.8, 690.0], [2.9, 694.0], [3.0, 695.0], [3.1, 696.0], [3.2, 696.0], [3.3, 697.0], [3.4, 697.0], [3.5, 698.0], [3.6, 699.0], [3.7, 700.0], [3.8, 702.0], [3.9, 704.0], [4.0, 704.0], [4.1, 705.0], [4.2, 705.0], [4.3, 706.0], [4.4, 706.0], [4.5, 706.0], [4.6, 708.0], [4.7, 709.0], [4.8, 709.0], [4.9, 712.0], [5.0, 713.0], [5.1, 715.0], [5.2, 716.0], [5.3, 716.0], [5.4, 716.0], [5.5, 717.0], [5.6, 718.0], [5.7, 719.0], [5.8, 719.0], [5.9, 721.0], [6.0, 721.0], [6.1, 722.0], [6.2, 722.0], [6.3, 723.0], [6.4, 724.0], [6.5, 724.0], [6.6, 724.0], [6.7, 725.0], [6.8, 725.0], [6.9, 726.0], [7.0, 726.0], [7.1, 726.0], [7.2, 727.0], [7.3, 727.0], [7.4, 730.0], [7.5, 730.0], [7.6, 730.0], [7.7, 731.0], [7.8, 733.0], [7.9, 733.0], [8.0, 733.0], [8.1, 734.0], [8.2, 734.0], [8.3, 735.0], [8.4, 736.0], [8.5, 736.0], [8.6, 737.0], [8.7, 737.0], [8.8, 738.0], [8.9, 740.0], [9.0, 741.0], [9.1, 742.0], [9.2, 743.0], [9.3, 744.0], [9.4, 744.0], [9.5, 744.0], [9.6, 745.0], [9.7, 746.0], [9.8, 747.0], [9.9, 747.0], [10.0, 748.0], [10.1, 748.0], [10.2, 749.0], [10.3, 749.0], [10.4, 749.0], [10.5, 749.0], [10.6, 750.0], [10.7, 750.0], [10.8, 750.0], [10.9, 750.0], [11.0, 751.0], [11.1, 751.0], [11.2, 751.0], [11.3, 752.0], [11.4, 752.0], [11.5, 752.0], [11.6, 752.0], [11.7, 752.0], [11.8, 753.0], [11.9, 753.0], [12.0, 753.0], [12.1, 753.0], [12.2, 753.0], [12.3, 754.0], [12.4, 754.0], [12.5, 754.0], [12.6, 755.0], [12.7, 755.0], [12.8, 756.0], [12.9, 756.0], [13.0, 756.0], [13.1, 757.0], [13.2, 757.0], [13.3, 757.0], [13.4, 758.0], [13.5, 758.0], [13.6, 758.0], [13.7, 758.0], [13.8, 758.0], [13.9, 758.0], [14.0, 759.0], [14.1, 759.0], [14.2, 759.0], [14.3, 759.0], [14.4, 759.0], [14.5, 759.0], [14.6, 760.0], [14.7, 760.0], [14.8, 760.0], [14.9, 760.0], [15.0, 761.0], [15.1, 761.0], [15.2, 761.0], [15.3, 761.0], [15.4, 761.0], [15.5, 761.0], [15.6, 762.0], [15.7, 762.0], [15.8, 762.0], [15.9, 762.0], [16.0, 762.0], [16.1, 762.0], [16.2, 763.0], [16.3, 763.0], [16.4, 763.0], [16.5, 763.0], [16.6, 763.0], [16.7, 764.0], [16.8, 764.0], [16.9, 764.0], [17.0, 765.0], [17.1, 765.0], [17.2, 765.0], [17.3, 765.0], [17.4, 766.0], [17.5, 766.0], [17.6, 766.0], [17.7, 766.0], [17.8, 766.0], [17.9, 766.0], [18.0, 766.0], [18.1, 766.0], [18.2, 767.0], [18.3, 767.0], [18.4, 768.0], [18.5, 768.0], [18.6, 768.0], [18.7, 768.0], [18.8, 769.0], [18.9, 769.0], [19.0, 769.0], [19.1, 769.0], [19.2, 769.0], [19.3, 769.0], [19.4, 769.0], [19.5, 770.0], [19.6, 770.0], [19.7, 770.0], [19.8, 771.0], [19.9, 771.0], [20.0, 771.0], [20.1, 772.0], [20.2, 772.0], [20.3, 772.0], [20.4, 773.0], [20.5, 773.0], [20.6, 773.0], [20.7, 773.0], [20.8, 773.0], [20.9, 773.0], [21.0, 773.0], [21.1, 774.0], [21.2, 774.0], [21.3, 774.0], [21.4, 775.0], [21.5, 775.0], [21.6, 776.0], [21.7, 776.0], [21.8, 776.0], [21.9, 776.0], [22.0, 777.0], [22.1, 777.0], [22.2, 778.0], [22.3, 778.0], [22.4, 778.0], [22.5, 779.0], [22.6, 779.0], [22.7, 779.0], [22.8, 780.0], [22.9, 780.0], [23.0, 781.0], [23.1, 781.0], [23.2, 781.0], [23.3, 781.0], [23.4, 782.0], [23.5, 782.0], [23.6, 782.0], [23.7, 782.0], [23.8, 783.0], [23.9, 783.0], [24.0, 784.0], [24.1, 785.0], [24.2, 785.0], [24.3, 786.0], [24.4, 786.0], [24.5, 787.0], [24.6, 787.0], [24.7, 787.0], [24.8, 788.0], [24.9, 788.0], [25.0, 789.0], [25.1, 789.0], [25.2, 789.0], [25.3, 789.0], [25.4, 790.0], [25.5, 790.0], [25.6, 792.0], [25.7, 792.0], [25.8, 793.0], [25.9, 794.0], [26.0, 795.0], [26.1, 795.0], [26.2, 795.0], [26.3, 796.0], [26.4, 799.0], [26.5, 800.0], [26.6, 801.0], [26.7, 802.0], [26.8, 805.0], [26.9, 806.0], [27.0, 808.0], [27.1, 808.0], [27.2, 809.0], [27.3, 812.0], [27.4, 813.0], [27.5, 813.0], [27.6, 814.0], [27.7, 814.0], [27.8, 815.0], [27.9, 815.0], [28.0, 817.0], [28.1, 818.0], [28.2, 820.0], [28.3, 820.0], [28.4, 822.0], [28.5, 822.0], [28.6, 823.0], [28.7, 823.0], [28.8, 824.0], [28.9, 825.0], [29.0, 825.0], [29.1, 825.0], [29.2, 826.0], [29.3, 826.0], [29.4, 827.0], [29.5, 827.0], [29.6, 830.0], [29.7, 831.0], [29.8, 832.0], [29.9, 832.0], [30.0, 833.0], [30.1, 833.0], [30.2, 834.0], [30.3, 834.0], [30.4, 835.0], [30.5, 836.0], [30.6, 837.0], [30.7, 838.0], [30.8, 838.0], [30.9, 838.0], [31.0, 839.0], [31.1, 840.0], [31.2, 841.0], [31.3, 842.0], [31.4, 846.0], [31.5, 846.0], [31.6, 846.0], [31.7, 847.0], [31.8, 848.0], [31.9, 849.0], [32.0, 849.0], [32.1, 850.0], [32.2, 851.0], [32.3, 851.0], [32.4, 852.0], [32.5, 852.0], [32.6, 853.0], [32.7, 853.0], [32.8, 853.0], [32.9, 854.0], [33.0, 854.0], [33.1, 854.0], [33.2, 855.0], [33.3, 855.0], [33.4, 856.0], [33.5, 857.0], [33.6, 858.0], [33.7, 860.0], [33.8, 861.0], [33.9, 864.0], [34.0, 866.0], [34.1, 866.0], [34.2, 870.0], [34.3, 874.0], [34.4, 886.0], [34.5, 1022.0], [34.6, 1029.0], [34.7, 1030.0], [34.8, 1030.0], [34.9, 1033.0], [35.0, 1035.0], [35.1, 1035.0], [35.2, 1036.0], [35.3, 1036.0], [35.4, 1037.0], [35.5, 1037.0], [35.6, 1038.0], [35.7, 1038.0], [35.8, 1039.0], [35.9, 1040.0], [36.0, 1041.0], [36.1, 1043.0], [36.2, 1043.0], [36.3, 1044.0], [36.4, 1046.0], [36.5, 1048.0], [36.6, 1048.0], [36.7, 1049.0], [36.8, 1050.0], [36.9, 1050.0], [37.0, 1050.0], [37.1, 1051.0], [37.2, 1051.0], [37.3, 1053.0], [37.4, 1056.0], [37.5, 1057.0], [37.6, 1057.0], [37.7, 1058.0], [37.8, 1058.0], [37.9, 1059.0], [38.0, 1059.0], [38.1, 1060.0], [38.2, 1060.0], [38.3, 1061.0], [38.4, 1062.0], [38.5, 1063.0], [38.6, 1063.0], [38.7, 1063.0], [38.8, 1063.0], [38.9, 1064.0], [39.0, 1065.0], [39.1, 1065.0], [39.2, 1065.0], [39.3, 1066.0], [39.4, 1067.0], [39.5, 1067.0], [39.6, 1068.0], [39.7, 1068.0], [39.8, 1068.0], [39.9, 1069.0], [40.0, 1069.0], [40.1, 1069.0], [40.2, 1071.0], [40.3, 1071.0], [40.4, 1072.0], [40.5, 1072.0], [40.6, 1073.0], [40.7, 1073.0], [40.8, 1073.0], [40.9, 1074.0], [41.0, 1074.0], [41.1, 1075.0], [41.2, 1075.0], [41.3, 1075.0], [41.4, 1076.0], [41.5, 1076.0], [41.6, 1076.0], [41.7, 1077.0], [41.8, 1078.0], [41.9, 1078.0], [42.0, 1078.0], [42.1, 1079.0], [42.2, 1079.0], [42.3, 1080.0], [42.4, 1080.0], [42.5, 1081.0], [42.6, 1081.0], [42.7, 1082.0], [42.8, 1082.0], [42.9, 1082.0], [43.0, 1082.0], [43.1, 1083.0], [43.2, 1083.0], [43.3, 1083.0], [43.4, 1083.0], [43.5, 1084.0], [43.6, 1084.0], [43.7, 1085.0], [43.8, 1085.0], [43.9, 1085.0], [44.0, 1085.0], [44.1, 1086.0], [44.2, 1086.0], [44.3, 1086.0], [44.4, 1086.0], [44.5, 1087.0], [44.6, 1087.0], [44.7, 1088.0], [44.8, 1088.0], [44.9, 1088.0], [45.0, 1088.0], [45.1, 1088.0], [45.2, 1088.0], [45.3, 1088.0], [45.4, 1088.0], [45.5, 1088.0], [45.6, 1088.0], [45.7, 1088.0], [45.8, 1089.0], [45.9, 1089.0], [46.0, 1089.0], [46.1, 1089.0], [46.2, 1089.0], [46.3, 1089.0], [46.4, 1090.0], [46.5, 1090.0], [46.6, 1090.0], [46.7, 1090.0], [46.8, 1090.0], [46.9, 1091.0], [47.0, 1091.0], [47.1, 1091.0], [47.2, 1091.0], [47.3, 1092.0], [47.4, 1092.0], [47.5, 1092.0], [47.6, 1092.0], [47.7, 1093.0], [47.8, 1093.0], [47.9, 1093.0], [48.0, 1093.0], [48.1, 1093.0], [48.2, 1094.0], [48.3, 1094.0], [48.4, 1094.0], [48.5, 1095.0], [48.6, 1095.0], [48.7, 1095.0], [48.8, 1095.0], [48.9, 1095.0], [49.0, 1095.0], [49.1, 1096.0], [49.2, 1096.0], [49.3, 1096.0], [49.4, 1096.0], [49.5, 1096.0], [49.6, 1096.0], [49.7, 1096.0], [49.8, 1096.0], [49.9, 1096.0], [50.0, 1097.0], [50.1, 1097.0], [50.2, 1097.0], [50.3, 1097.0], [50.4, 1097.0], [50.5, 1097.0], [50.6, 1097.0], [50.7, 1097.0], [50.8, 1097.0], [50.9, 1097.0], [51.0, 1098.0], [51.1, 1098.0], [51.2, 1098.0], [51.3, 1098.0], [51.4, 1098.0], [51.5, 1098.0], [51.6, 1099.0], [51.7, 1099.0], [51.8, 1099.0], [51.9, 1099.0], [52.0, 1100.0], [52.1, 1100.0], [52.2, 1100.0], [52.3, 1100.0], [52.4, 1100.0], [52.5, 1100.0], [52.6, 1100.0], [52.7, 1101.0], [52.8, 1101.0], [52.9, 1101.0], [53.0, 1101.0], [53.1, 1101.0], [53.2, 1101.0], [53.3, 1101.0], [53.4, 1101.0], [53.5, 1101.0], [53.6, 1102.0], [53.7, 1102.0], [53.8, 1102.0], [53.9, 1102.0], [54.0, 1102.0], [54.1, 1102.0], [54.2, 1102.0], [54.3, 1102.0], [54.4, 1102.0], [54.5, 1102.0], [54.6, 1102.0], [54.7, 1102.0], [54.8, 1102.0], [54.9, 1103.0], [55.0, 1103.0], [55.1, 1103.0], [55.2, 1103.0], [55.3, 1103.0], [55.4, 1103.0], [55.5, 1103.0], [55.6, 1103.0], [55.7, 1103.0], [55.8, 1103.0], [55.9, 1103.0], [56.0, 1103.0], [56.1, 1103.0], [56.2, 1103.0], [56.3, 1103.0], [56.4, 1103.0], [56.5, 1104.0], [56.6, 1104.0], [56.7, 1104.0], [56.8, 1104.0], [56.9, 1104.0], [57.0, 1104.0], [57.1, 1104.0], [57.2, 1104.0], [57.3, 1104.0], [57.4, 1104.0], [57.5, 1104.0], [57.6, 1104.0], [57.7, 1104.0], [57.8, 1104.0], [57.9, 1104.0], [58.0, 1104.0], [58.1, 1104.0], [58.2, 1104.0], [58.3, 1104.0], [58.4, 1104.0], [58.5, 1104.0], [58.6, 1105.0], [58.7, 1105.0], [58.8, 1105.0], [58.9, 1105.0], [59.0, 1105.0], [59.1, 1105.0], [59.2, 1105.0], [59.3, 1105.0], [59.4, 1105.0], [59.5, 1105.0], [59.6, 1105.0], [59.7, 1105.0], [59.8, 1105.0], [59.9, 1105.0], [60.0, 1105.0], [60.1, 1105.0], [60.2, 1106.0], [60.3, 1106.0], [60.4, 1106.0], [60.5, 1106.0], [60.6, 1106.0], [60.7, 1106.0], [60.8, 1106.0], [60.9, 1106.0], [61.0, 1106.0], [61.1, 1106.0], [61.2, 1106.0], [61.3, 1106.0], [61.4, 1106.0], [61.5, 1106.0], [61.6, 1106.0], [61.7, 1106.0], [61.8, 1106.0], [61.9, 1106.0], [62.0, 1106.0], [62.1, 1106.0], [62.2, 1106.0], [62.3, 1106.0], [62.4, 1106.0], [62.5, 1107.0], [62.6, 1107.0], [62.7, 1107.0], [62.8, 1107.0], [62.9, 1107.0], [63.0, 1107.0], [63.1, 1107.0], [63.2, 1107.0], [63.3, 1107.0], [63.4, 1107.0], [63.5, 1107.0], [63.6, 1107.0], [63.7, 1107.0], [63.8, 1107.0], [63.9, 1107.0], [64.0, 1107.0], [64.1, 1107.0], [64.2, 1107.0], [64.3, 1108.0], [64.4, 1108.0], [64.5, 1108.0], [64.6, 1108.0], [64.7, 1108.0], [64.8, 1108.0], [64.9, 1108.0], [65.0, 1108.0], [65.1, 1108.0], [65.2, 1108.0], [65.3, 1108.0], [65.4, 1108.0], [65.5, 1108.0], [65.6, 1108.0], [65.7, 1108.0], [65.8, 1108.0], [65.9, 1108.0], [66.0, 1108.0], [66.1, 1108.0], [66.2, 1108.0], [66.3, 1108.0], [66.4, 1108.0], [66.5, 1108.0], [66.6, 1108.0], [66.7, 1108.0], [66.8, 1108.0], [66.9, 1108.0], [67.0, 1109.0], [67.1, 1109.0], [67.2, 1109.0], [67.3, 1109.0], [67.4, 1109.0], [67.5, 1109.0], [67.6, 1109.0], [67.7, 1109.0], [67.8, 1109.0], [67.9, 1109.0], [68.0, 1109.0], [68.1, 1109.0], [68.2, 1109.0], [68.3, 1109.0], [68.4, 1109.0], [68.5, 1109.0], [68.6, 1109.0], [68.7, 1110.0], [68.8, 1110.0], [68.9, 1110.0], [69.0, 1110.0], [69.1, 1110.0], [69.2, 1110.0], [69.3, 1110.0], [69.4, 1110.0], [69.5, 1110.0], [69.6, 1110.0], [69.7, 1110.0], [69.8, 1110.0], [69.9, 1110.0], [70.0, 1110.0], [70.1, 1110.0], [70.2, 1110.0], [70.3, 1110.0], [70.4, 1110.0], [70.5, 1110.0], [70.6, 1110.0], [70.7, 1110.0], [70.8, 1110.0], [70.9, 1110.0], [71.0, 1110.0], [71.1, 1110.0], [71.2, 1111.0], [71.3, 1111.0], [71.4, 1111.0], [71.5, 1111.0], [71.6, 1111.0], [71.7, 1111.0], [71.8, 1111.0], [71.9, 1111.0], [72.0, 1111.0], [72.1, 1111.0], [72.2, 1111.0], [72.3, 1111.0], [72.4, 1111.0], [72.5, 1111.0], [72.6, 1111.0], [72.7, 1111.0], [72.8, 1111.0], [72.9, 1111.0], [73.0, 1111.0], [73.1, 1112.0], [73.2, 1112.0], [73.3, 1112.0], [73.4, 1112.0], [73.5, 1112.0], [73.6, 1112.0], [73.7, 1112.0], [73.8, 1112.0], [73.9, 1112.0], [74.0, 1112.0], [74.1, 1113.0], [74.2, 1113.0], [74.3, 1113.0], [74.4, 1113.0], [74.5, 1113.0], [74.6, 1113.0], [74.7, 1113.0], [74.8, 1113.0], [74.9, 1113.0], [75.0, 1113.0], [75.1, 1113.0], [75.2, 1113.0], [75.3, 1113.0], [75.4, 1113.0], [75.5, 1113.0], [75.6, 1113.0], [75.7, 1113.0], [75.8, 1113.0], [75.9, 1114.0], [76.0, 1114.0], [76.1, 1114.0], [76.2, 1114.0], [76.3, 1114.0], [76.4, 1114.0], [76.5, 1114.0], [76.6, 1114.0], [76.7, 1114.0], [76.8, 1114.0], [76.9, 1114.0], [77.0, 1114.0], [77.1, 1114.0], [77.2, 1114.0], [77.3, 1114.0], [77.4, 1114.0], [77.5, 1114.0], [77.6, 1114.0], [77.7, 1114.0], [77.8, 1115.0], [77.9, 1115.0], [78.0, 1115.0], [78.1, 1115.0], [78.2, 1115.0], [78.3, 1115.0], [78.4, 1115.0], [78.5, 1115.0], [78.6, 1115.0], [78.7, 1115.0], [78.8, 1115.0], [78.9, 1115.0], [79.0, 1116.0], [79.1, 1116.0], [79.2, 1116.0], [79.3, 1116.0], [79.4, 1116.0], [79.5, 1116.0], [79.6, 1116.0], [79.7, 1116.0], [79.8, 1116.0], [79.9, 1116.0], [80.0, 1116.0], [80.1, 1116.0], [80.2, 1116.0], [80.3, 1116.0], [80.4, 1116.0], [80.5, 1117.0], [80.6, 1117.0], [80.7, 1117.0], [80.8, 1117.0], [80.9, 1117.0], [81.0, 1117.0], [81.1, 1117.0], [81.2, 1117.0], [81.3, 1117.0], [81.4, 1117.0], [81.5, 1117.0], [81.6, 1118.0], [81.7, 1118.0], [81.8, 1118.0], [81.9, 1118.0], [82.0, 1118.0], [82.1, 1118.0], [82.2, 1118.0], [82.3, 1119.0], [82.4, 1119.0], [82.5, 1119.0], [82.6, 1119.0], [82.7, 1119.0], [82.8, 1119.0], [82.9, 1119.0], [83.0, 1119.0], [83.1, 1119.0], [83.2, 1119.0], [83.3, 1119.0], [83.4, 1119.0], [83.5, 1119.0], [83.6, 1120.0], [83.7, 1120.0], [83.8, 1120.0], [83.9, 1120.0], [84.0, 1120.0], [84.1, 1120.0], [84.2, 1120.0], [84.3, 1120.0], [84.4, 1120.0], [84.5, 1121.0], [84.6, 1121.0], [84.7, 1121.0], [84.8, 1121.0], [84.9, 1121.0], [85.0, 1121.0], [85.1, 1121.0], [85.2, 1121.0], [85.3, 1121.0], [85.4, 1121.0], [85.5, 1122.0], [85.6, 1122.0], [85.7, 1122.0], [85.8, 1122.0], [85.9, 1122.0], [86.0, 1122.0], [86.1, 1122.0], [86.2, 1122.0], [86.3, 1122.0], [86.4, 1123.0], [86.5, 1123.0], [86.6, 1123.0], [86.7, 1123.0], [86.8, 1124.0], [86.9, 1124.0], [87.0, 1124.0], [87.1, 1125.0], [87.2, 1125.0], [87.3, 1125.0], [87.4, 1125.0], [87.5, 1125.0], [87.6, 1125.0], [87.7, 1125.0], [87.8, 1126.0], [87.9, 1126.0], [88.0, 1126.0], [88.1, 1126.0], [88.2, 1126.0], [88.3, 1126.0], [88.4, 1126.0], [88.5, 1127.0], [88.6, 1127.0], [88.7, 1128.0], [88.8, 1128.0], [88.9, 1128.0], [89.0, 1129.0], [89.1, 1130.0], [89.2, 1130.0], [89.3, 1131.0], [89.4, 1132.0], [89.5, 1133.0], [89.6, 1133.0], [89.7, 1134.0], [89.8, 1134.0], [89.9, 1134.0], [90.0, 1135.0], [90.1, 1136.0], [90.2, 1138.0], [90.3, 1139.0], [90.4, 1145.0], [90.5, 1148.0], [90.6, 1153.0], [90.7, 1164.0], [90.8, 1191.0], [90.9, 1609.0], [91.0, 2031.0], [91.1, 2048.0], [91.2, 2056.0], [91.3, 2057.0], [91.4, 2062.0], [91.5, 2063.0], [91.6, 2067.0], [91.7, 2074.0], [91.8, 2075.0], [91.9, 2079.0], [92.0, 2080.0], [92.1, 2081.0], [92.2, 2082.0], [92.3, 2086.0], [92.4, 2086.0], [92.5, 2087.0], [92.6, 2089.0], [92.7, 2091.0], [92.8, 2091.0], [92.9, 2092.0], [93.0, 2093.0], [93.1, 2095.0], [93.2, 2096.0], [93.3, 2096.0], [93.4, 2097.0], [93.5, 2098.0], [93.6, 2099.0], [93.7, 2099.0], [93.8, 2101.0], [93.9, 2101.0], [94.0, 2101.0], [94.1, 2103.0], [94.2, 2104.0], [94.3, 2106.0], [94.4, 2106.0], [94.5, 2107.0], [94.6, 2108.0], [94.7, 2109.0], [94.8, 2109.0], [94.9, 2114.0], [95.0, 2114.0], [95.1, 2115.0], [95.2, 2117.0], [95.3, 2122.0], [95.4, 2122.0], [95.5, 2129.0], [95.6, 2614.0], [95.7, 2629.0], [95.8, 2629.0], [95.9, 2637.0], [96.0, 2638.0], [96.1, 2652.0], [96.2, 2662.0], [96.3, 2673.0], [96.4, 2703.0], [96.5, 2711.0], [96.6, 2712.0], [96.7, 2715.0], [96.8, 2715.0], [96.9, 2719.0], [97.0, 2723.0], [97.1, 2731.0], [97.2, 2731.0], [97.3, 2732.0], [97.4, 2736.0], [97.5, 2739.0], [97.6, 2742.0], [97.7, 2743.0], [97.8, 2750.0], [97.9, 2752.0], [98.0, 2752.0], [98.1, 2754.0], [98.2, 2755.0], [98.3, 2758.0], [98.4, 2759.0], [98.5, 2760.0], [98.6, 2760.0], [98.7, 2767.0], [98.8, 2771.0], [98.9, 2779.0], [99.0, 2781.0], [99.1, 3685.0], [99.2, 3693.0], [99.3, 3735.0], [99.4, 3762.0], [99.5, 3769.0], [99.6, 3788.0], [99.7, 3828.0], [99.8, 3851.0], [99.9, 6126.0]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[0.0, 667.0], [0.1, 671.0], [0.2, 677.0], [0.3, 680.0], [0.4, 683.0], [0.5, 684.0], [0.6, 686.0], [0.7, 687.0], [0.8, 691.0], [0.9, 692.0], [1.0, 696.0], [1.1, 697.0], [1.2, 705.0], [1.3, 709.0], [1.4, 714.0], [1.5, 715.0], [1.6, 717.0], [1.7, 718.0], [1.8, 720.0], [1.9, 723.0], [2.0, 727.0], [2.1, 727.0], [2.2, 729.0], [2.3, 729.0], [2.4, 730.0], [2.5, 731.0], [2.6, 732.0], [2.7, 733.0], [2.8, 735.0], [2.9, 737.0], [3.0, 737.0], [3.1, 740.0], [3.2, 741.0], [3.3, 743.0], [3.4, 743.0], [3.5, 745.0], [3.6, 746.0], [3.7, 749.0], [3.8, 749.0], [3.9, 750.0], [4.0, 751.0], [4.1, 751.0], [4.2, 752.0], [4.3, 752.0], [4.4, 752.0], [4.5, 759.0], [4.6, 761.0], [4.7, 761.0], [4.8, 762.0], [4.9, 763.0], [5.0, 763.0], [5.1, 764.0], [5.2, 765.0], [5.3, 765.0], [5.4, 766.0], [5.5, 767.0], [5.6, 767.0], [5.7, 768.0], [5.8, 768.0], [5.9, 769.0], [6.0, 769.0], [6.1, 770.0], [6.2, 770.0], [6.3, 771.0], [6.4, 771.0], [6.5, 772.0], [6.6, 772.0], [6.7, 773.0], [6.8, 773.0], [6.9, 773.0], [7.0, 774.0], [7.1, 774.0], [7.2, 775.0], [7.3, 775.0], [7.4, 775.0], [7.5, 776.0], [7.6, 776.0], [7.7, 776.0], [7.8, 776.0], [7.9, 778.0], [8.0, 779.0], [8.1, 779.0], [8.2, 779.0], [8.3, 780.0], [8.4, 780.0], [8.5, 783.0], [8.6, 783.0], [8.7, 783.0], [8.8, 783.0], [8.9, 783.0], [9.0, 783.0], [9.1, 784.0], [9.2, 784.0], [9.3, 784.0], [9.4, 784.0], [9.5, 785.0], [9.6, 785.0], [9.7, 785.0], [9.8, 786.0], [9.9, 786.0], [10.0, 787.0], [10.1, 787.0], [10.2, 787.0], [10.3, 787.0], [10.4, 788.0], [10.5, 788.0], [10.6, 788.0], [10.7, 789.0], [10.8, 789.0], [10.9, 789.0], [11.0, 789.0], [11.1, 790.0], [11.2, 790.0], [11.3, 790.0], [11.4, 790.0], [11.5, 791.0], [11.6, 791.0], [11.7, 791.0], [11.8, 791.0], [11.9, 791.0], [12.0, 792.0], [12.1, 792.0], [12.2, 792.0], [12.3, 792.0], [12.4, 792.0], [12.5, 793.0], [12.6, 793.0], [12.7, 793.0], [12.8, 793.0], [12.9, 794.0], [13.0, 794.0], [13.1, 794.0], [13.2, 794.0], [13.3, 795.0], [13.4, 795.0], [13.5, 795.0], [13.6, 795.0], [13.7, 796.0], [13.8, 796.0], [13.9, 796.0], [14.0, 796.0], [14.1, 796.0], [14.2, 797.0], [14.3, 797.0], [14.4, 797.0], [14.5, 797.0], [14.6, 797.0], [14.7, 797.0], [14.8, 797.0], [14.9, 798.0], [15.0, 798.0], [15.1, 799.0], [15.2, 799.0], [15.3, 799.0], [15.4, 799.0], [15.5, 800.0], [15.6, 800.0], [15.7, 800.0], [15.8, 800.0], [15.9, 801.0], [16.0, 801.0], [16.1, 802.0], [16.2, 802.0], [16.3, 802.0], [16.4, 802.0], [16.5, 802.0], [16.6, 803.0], [16.7, 803.0], [16.8, 803.0], [16.9, 803.0], [17.0, 805.0], [17.1, 805.0], [17.2, 806.0], [17.3, 807.0], [17.4, 807.0], [17.5, 807.0], [17.6, 807.0], [17.7, 807.0], [17.8, 808.0], [17.9, 808.0], [18.0, 808.0], [18.1, 808.0], [18.2, 809.0], [18.3, 809.0], [18.4, 809.0], [18.5, 809.0], [18.6, 809.0], [18.7, 810.0], [18.8, 810.0], [18.9, 810.0], [19.0, 810.0], [19.1, 810.0], [19.2, 810.0], [19.3, 811.0], [19.4, 812.0], [19.5, 812.0], [19.6, 813.0], [19.7, 813.0], [19.8, 814.0], [19.9, 814.0], [20.0, 815.0], [20.1, 816.0], [20.2, 818.0], [20.3, 819.0], [20.4, 819.0], [20.5, 819.0], [20.6, 820.0], [20.7, 821.0], [20.8, 822.0], [20.9, 822.0], [21.0, 824.0], [21.1, 824.0], [21.2, 825.0], [21.3, 826.0], [21.4, 827.0], [21.5, 827.0], [21.6, 830.0], [21.7, 830.0], [21.8, 830.0], [21.9, 831.0], [22.0, 832.0], [22.1, 832.0], [22.2, 834.0], [22.3, 834.0], [22.4, 836.0], [22.5, 838.0], [22.6, 838.0], [22.7, 838.0], [22.8, 839.0], [22.9, 839.0], [23.0, 840.0], [23.1, 840.0], [23.2, 841.0], [23.3, 842.0], [23.4, 843.0], [23.5, 843.0], [23.6, 845.0], [23.7, 845.0], [23.8, 846.0], [23.9, 846.0], [24.0, 846.0], [24.1, 846.0], [24.2, 847.0], [24.3, 849.0], [24.4, 850.0], [24.5, 850.0], [24.6, 850.0], [24.7, 850.0], [24.8, 851.0], [24.9, 852.0], [25.0, 852.0], [25.1, 853.0], [25.2, 854.0], [25.3, 854.0], [25.4, 855.0], [25.5, 855.0], [25.6, 857.0], [25.7, 858.0], [25.8, 858.0], [25.9, 860.0], [26.0, 861.0], [26.1, 862.0], [26.2, 863.0], [26.3, 863.0], [26.4, 865.0], [26.5, 866.0], [26.6, 867.0], [26.7, 867.0], [26.8, 868.0], [26.9, 870.0], [27.0, 871.0], [27.1, 872.0], [27.2, 873.0], [27.3, 873.0], [27.4, 873.0], [27.5, 874.0], [27.6, 874.0], [27.7, 875.0], [27.8, 876.0], [27.9, 877.0], [28.0, 880.0], [28.1, 880.0], [28.2, 882.0], [28.3, 882.0], [28.4, 884.0], [28.5, 884.0], [28.6, 885.0], [28.7, 885.0], [28.8, 885.0], [28.9, 885.0], [29.0, 887.0], [29.1, 887.0], [29.2, 889.0], [29.3, 889.0], [29.4, 894.0], [29.5, 895.0], [29.6, 896.0], [29.7, 897.0], [29.8, 897.0], [29.9, 901.0], [30.0, 902.0], [30.1, 902.0], [30.2, 908.0], [30.3, 909.0], [30.4, 910.0], [30.5, 910.0], [30.6, 911.0], [30.7, 911.0], [30.8, 927.0], [30.9, 932.0], [31.0, 1049.0], [31.1, 1053.0], [31.2, 1053.0], [31.3, 1054.0], [31.4, 1056.0], [31.5, 1057.0], [31.6, 1058.0], [31.7, 1059.0], [31.8, 1060.0], [31.9, 1062.0], [32.0, 1062.0], [32.1, 1063.0], [32.2, 1064.0], [32.3, 1064.0], [32.4, 1065.0], [32.5, 1065.0], [32.6, 1066.0], [32.7, 1067.0], [32.8, 1069.0], [32.9, 1069.0], [33.0, 1070.0], [33.1, 1070.0], [33.2, 1071.0], [33.3, 1072.0], [33.4, 1072.0], [33.5, 1073.0], [33.6, 1074.0], [33.7, 1075.0], [33.8, 1076.0], [33.9, 1077.0], [34.0, 1077.0], [34.1, 1077.0], [34.2, 1078.0], [34.3, 1078.0], [34.4, 1079.0], [34.5, 1079.0], [34.6, 1080.0], [34.7, 1080.0], [34.8, 1081.0], [34.9, 1082.0], [35.0, 1082.0], [35.1, 1082.0], [35.2, 1083.0], [35.3, 1083.0], [35.4, 1085.0], [35.5, 1086.0], [35.6, 1087.0], [35.7, 1087.0], [35.8, 1087.0], [35.9, 1088.0], [36.0, 1089.0], [36.1, 1089.0], [36.2, 1089.0], [36.3, 1090.0], [36.4, 1090.0], [36.5, 1091.0], [36.6, 1091.0], [36.7, 1092.0], [36.8, 1092.0], [36.9, 1093.0], [37.0, 1094.0], [37.1, 1094.0], [37.2, 1096.0], [37.3, 1096.0], [37.4, 1097.0], [37.5, 1097.0], [37.6, 1097.0], [37.7, 1098.0], [37.8, 1098.0], [37.9, 1098.0], [38.0, 1099.0], [38.1, 1099.0], [38.2, 1099.0], [38.3, 1100.0], [38.4, 1100.0], [38.5, 1100.0], [38.6, 1100.0], [38.7, 1101.0], [38.8, 1101.0], [38.9, 1101.0], [39.0, 1101.0], [39.1, 1101.0], [39.2, 1102.0], [39.3, 1102.0], [39.4, 1104.0], [39.5, 1104.0], [39.6, 1104.0], [39.7, 1104.0], [39.8, 1105.0], [39.9, 1105.0], [40.0, 1105.0], [40.1, 1105.0], [40.2, 1106.0], [40.3, 1106.0], [40.4, 1106.0], [40.5, 1107.0], [40.6, 1107.0], [40.7, 1107.0], [40.8, 1107.0], [40.9, 1107.0], [41.0, 1108.0], [41.1, 1108.0], [41.2, 1108.0], [41.3, 1108.0], [41.4, 1108.0], [41.5, 1108.0], [41.6, 1108.0], [41.7, 1109.0], [41.8, 1109.0], [41.9, 1109.0], [42.0, 1109.0], [42.1, 1109.0], [42.2, 1110.0], [42.3, 1110.0], [42.4, 1110.0], [42.5, 1110.0], [42.6, 1110.0], [42.7, 1110.0], [42.8, 1111.0], [42.9, 1111.0], [43.0, 1111.0], [43.1, 1111.0], [43.2, 1112.0], [43.3, 1112.0], [43.4, 1112.0], [43.5, 1112.0], [43.6, 1113.0], [43.7, 1113.0], [43.8, 1113.0], [43.9, 1113.0], [44.0, 1113.0], [44.1, 1113.0], [44.2, 1113.0], [44.3, 1114.0], [44.4, 1114.0], [44.5, 1114.0], [44.6, 1114.0], [44.7, 1114.0], [44.8, 1115.0], [44.9, 1115.0], [45.0, 1115.0], [45.1, 1115.0], [45.2, 1115.0], [45.3, 1115.0], [45.4, 1116.0], [45.5, 1116.0], [45.6, 1116.0], [45.7, 1116.0], [45.8, 1116.0], [45.9, 1117.0], [46.0, 1117.0], [46.1, 1117.0], [46.2, 1117.0], [46.3, 1117.0], [46.4, 1117.0], [46.5, 1117.0], [46.6, 1117.0], [46.7, 1117.0], [46.8, 1117.0], [46.9, 1118.0], [47.0, 1118.0], [47.1, 1118.0], [47.2, 1118.0], [47.3, 1118.0], [47.4, 1118.0], [47.5, 1118.0], [47.6, 1118.0], [47.7, 1118.0], [47.8, 1119.0], [47.9, 1119.0], [48.0, 1119.0], [48.1, 1119.0], [48.2, 1119.0], [48.3, 1119.0], [48.4, 1119.0], [48.5, 1119.0], [48.6, 1119.0], [48.7, 1119.0], [48.8, 1120.0], [48.9, 1120.0], [49.0, 1120.0], [49.1, 1120.0], [49.2, 1120.0], [49.3, 1120.0], [49.4, 1120.0], [49.5, 1120.0], [49.6, 1121.0], [49.7, 1121.0], [49.8, 1121.0], [49.9, 1121.0], [50.0, 1121.0], [50.1, 1121.0], [50.2, 1121.0], [50.3, 1121.0], [50.4, 1122.0], [50.5, 1122.0], [50.6, 1122.0], [50.7, 1122.0], [50.8, 1122.0], [50.9, 1122.0], [51.0, 1122.0], [51.1, 1122.0], [51.2, 1123.0], [51.3, 1123.0], [51.4, 1123.0], [51.5, 1123.0], [51.6, 1123.0], [51.7, 1123.0], [51.8, 1123.0], [51.9, 1123.0], [52.0, 1123.0], [52.1, 1123.0], [52.2, 1124.0], [52.3, 1124.0], [52.4, 1124.0], [52.5, 1124.0], [52.6, 1124.0], [52.7, 1124.0], [52.8, 1124.0], [52.9, 1124.0], [53.0, 1124.0], [53.1, 1124.0], [53.2, 1124.0], [53.3, 1124.0], [53.4, 1124.0], [53.5, 1124.0], [53.6, 1125.0], [53.7, 1125.0], [53.8, 1125.0], [53.9, 1125.0], [54.0, 1125.0], [54.1, 1125.0], [54.2, 1125.0], [54.3, 1125.0], [54.4, 1125.0], [54.5, 1125.0], [54.6, 1125.0], [54.7, 1125.0], [54.8, 1125.0], [54.9, 1125.0], [55.0, 1125.0], [55.1, 1125.0], [55.2, 1125.0], [55.3, 1125.0], [55.4, 1126.0], [55.5, 1126.0], [55.6, 1126.0], [55.7, 1126.0], [55.8, 1126.0], [55.9, 1126.0], [56.0, 1126.0], [56.1, 1126.0], [56.2, 1126.0], [56.3, 1126.0], [56.4, 1126.0], [56.5, 1126.0], [56.6, 1126.0], [56.7, 1126.0], [56.8, 1127.0], [56.9, 1127.0], [57.0, 1127.0], [57.1, 1127.0], [57.2, 1127.0], [57.3, 1127.0], [57.4, 1127.0], [57.5, 1127.0], [57.6, 1127.0], [57.7, 1127.0], [57.8, 1127.0], [57.9, 1127.0], [58.0, 1127.0], [58.1, 1127.0], [58.2, 1127.0], [58.3, 1128.0], [58.4, 1128.0], [58.5, 1128.0], [58.6, 1128.0], [58.7, 1128.0], [58.8, 1128.0], [58.9, 1128.0], [59.0, 1128.0], [59.1, 1128.0], [59.2, 1128.0], [59.3, 1128.0], [59.4, 1129.0], [59.5, 1129.0], [59.6, 1129.0], [59.7, 1129.0], [59.8, 1129.0], [59.9, 1129.0], [60.0, 1129.0], [60.1, 1129.0], [60.2, 1129.0], [60.3, 1129.0], [60.4, 1129.0], [60.5, 1129.0], [60.6, 1129.0], [60.7, 1129.0], [60.8, 1130.0], [60.9, 1130.0], [61.0, 1130.0], [61.1, 1130.0], [61.2, 1130.0], [61.3, 1130.0], [61.4, 1130.0], [61.5, 1130.0], [61.6, 1130.0], [61.7, 1130.0], [61.8, 1130.0], [61.9, 1130.0], [62.0, 1130.0], [62.1, 1130.0], [62.2, 1130.0], [62.3, 1130.0], [62.4, 1131.0], [62.5, 1131.0], [62.6, 1131.0], [62.7, 1131.0], [62.8, 1131.0], [62.9, 1131.0], [63.0, 1131.0], [63.1, 1131.0], [63.2, 1131.0], [63.3, 1131.0], [63.4, 1131.0], [63.5, 1131.0], [63.6, 1131.0], [63.7, 1131.0], [63.8, 1131.0], [63.9, 1131.0], [64.0, 1131.0], [64.1, 1132.0], [64.2, 1132.0], [64.3, 1132.0], [64.4, 1132.0], [64.5, 1132.0], [64.6, 1132.0], [64.7, 1132.0], [64.8, 1132.0], [64.9, 1132.0], [65.0, 1132.0], [65.1, 1132.0], [65.2, 1132.0], [65.3, 1132.0], [65.4, 1132.0], [65.5, 1132.0], [65.6, 1133.0], [65.7, 1133.0], [65.8, 1133.0], [65.9, 1133.0], [66.0, 1133.0], [66.1, 1133.0], [66.2, 1133.0], [66.3, 1133.0], [66.4, 1133.0], [66.5, 1133.0], [66.6, 1133.0], [66.7, 1133.0], [66.8, 1133.0], [66.9, 1133.0], [67.0, 1133.0], [67.1, 1133.0], [67.2, 1133.0], [67.3, 1133.0], [67.4, 1133.0], [67.5, 1134.0], [67.6, 1134.0], [67.7, 1134.0], [67.8, 1134.0], [67.9, 1134.0], [68.0, 1134.0], [68.1, 1134.0], [68.2, 1134.0], [68.3, 1134.0], [68.4, 1134.0], [68.5, 1134.0], [68.6, 1134.0], [68.7, 1135.0], [68.8, 1135.0], [68.9, 1135.0], [69.0, 1135.0], [69.1, 1135.0], [69.2, 1135.0], [69.3, 1136.0], [69.4, 1136.0], [69.5, 1136.0], [69.6, 1136.0], [69.7, 1136.0], [69.8, 1136.0], [69.9, 1136.0], [70.0, 1136.0], [70.1, 1136.0], [70.2, 1136.0], [70.3, 1136.0], [70.4, 1136.0], [70.5, 1136.0], [70.6, 1136.0], [70.7, 1136.0], [70.8, 1136.0], [70.9, 1136.0], [71.0, 1137.0], [71.1, 1137.0], [71.2, 1137.0], [71.3, 1137.0], [71.4, 1137.0], [71.5, 1137.0], [71.6, 1137.0], [71.7, 1137.0], [71.8, 1137.0], [71.9, 1137.0], [72.0, 1137.0], [72.1, 1137.0], [72.2, 1137.0], [72.3, 1137.0], [72.4, 1138.0], [72.5, 1138.0], [72.6, 1138.0], [72.7, 1138.0], [72.8, 1138.0], [72.9, 1138.0], [73.0, 1138.0], [73.1, 1138.0], [73.2, 1138.0], [73.3, 1139.0], [73.4, 1139.0], [73.5, 1139.0], [73.6, 1139.0], [73.7, 1139.0], [73.8, 1139.0], [73.9, 1139.0], [74.0, 1140.0], [74.1, 1140.0], [74.2, 1140.0], [74.3, 1140.0], [74.4, 1140.0], [74.5, 1140.0], [74.6, 1140.0], [74.7, 1140.0], [74.8, 1140.0], [74.9, 1140.0], [75.0, 1140.0], [75.1, 1141.0], [75.2, 1141.0], [75.3, 1141.0], [75.4, 1141.0], [75.5, 1141.0], [75.6, 1141.0], [75.7, 1141.0], [75.8, 1141.0], [75.9, 1141.0], [76.0, 1141.0], [76.1, 1141.0], [76.2, 1141.0], [76.3, 1142.0], [76.4, 1142.0], [76.5, 1142.0], [76.6, 1142.0], [76.7, 1142.0], [76.8, 1142.0], [76.9, 1142.0], [77.0, 1142.0], [77.1, 1142.0], [77.2, 1142.0], [77.3, 1142.0], [77.4, 1143.0], [77.5, 1143.0], [77.6, 1143.0], [77.7, 1143.0], [77.8, 1143.0], [77.9, 1143.0], [78.0, 1144.0], [78.1, 1144.0], [78.2, 1144.0], [78.3, 1144.0], [78.4, 1144.0], [78.5, 1144.0], [78.6, 1144.0], [78.7, 1144.0], [78.8, 1144.0], [78.9, 1144.0], [79.0, 1144.0], [79.1, 1144.0], [79.2, 1145.0], [79.3, 1145.0], [79.4, 1145.0], [79.5, 1145.0], [79.6, 1145.0], [79.7, 1145.0], [79.8, 1145.0], [79.9, 1145.0], [80.0, 1146.0], [80.1, 1146.0], [80.2, 1146.0], [80.3, 1146.0], [80.4, 1146.0], [80.5, 1146.0], [80.6, 1147.0], [80.7, 1147.0], [80.8, 1147.0], [80.9, 1147.0], [81.0, 1147.0], [81.1, 1148.0], [81.2, 1148.0], [81.3, 1148.0], [81.4, 1148.0], [81.5, 1148.0], [81.6, 1149.0], [81.7, 1149.0], [81.8, 1149.0], [81.9, 1149.0], [82.0, 1150.0], [82.1, 1150.0], [82.2, 1150.0], [82.3, 1150.0], [82.4, 1151.0], [82.5, 1151.0], [82.6, 1151.0], [82.7, 1152.0], [82.8, 1152.0], [82.9, 1152.0], [83.0, 1152.0], [83.1, 1152.0], [83.2, 1153.0], [83.3, 1153.0], [83.4, 1154.0], [83.5, 1154.0], [83.6, 1154.0], [83.7, 1155.0], [83.8, 1155.0], [83.9, 1155.0], [84.0, 1156.0], [84.1, 1157.0], [84.2, 1157.0], [84.3, 1157.0], [84.4, 1158.0], [84.5, 1158.0], [84.6, 1158.0], [84.7, 1159.0], [84.8, 1159.0], [84.9, 1160.0], [85.0, 1160.0], [85.1, 1160.0], [85.2, 1161.0], [85.3, 1162.0], [85.4, 1162.0], [85.5, 1162.0], [85.6, 1162.0], [85.7, 1167.0], [85.8, 1167.0], [85.9, 1167.0], [86.0, 1169.0], [86.1, 1169.0], [86.2, 1172.0], [86.3, 1172.0], [86.4, 1174.0], [86.5, 1175.0], [86.6, 1175.0], [86.7, 1177.0], [86.8, 1177.0], [86.9, 1187.0], [87.0, 1190.0], [87.1, 1190.0], [87.2, 1233.0], [87.3, 1254.0], [87.4, 1342.0], [87.5, 1351.0], [87.6, 1385.0], [87.7, 1398.0], [87.8, 1451.0], [87.9, 1456.0], [88.0, 1486.0], [88.1, 1487.0], [88.2, 1495.0], [88.3, 1523.0], [88.4, 1539.0], [88.5, 1543.0], [88.6, 1558.0], [88.7, 1561.0], [88.8, 1576.0], [88.9, 1579.0], [89.0, 1602.0], [89.1, 1608.0], [89.2, 1620.0], [89.3, 1628.0], [89.4, 1632.0], [89.5, 1639.0], [89.6, 1642.0], [89.7, 1649.0], [89.8, 1660.0], [89.9, 1675.0], [90.0, 1703.0], [90.1, 1722.0], [90.2, 1730.0], [90.3, 1733.0], [90.4, 1743.0], [90.5, 1751.0], [90.6, 1760.0], [90.7, 1777.0], [90.8, 1789.0], [90.9, 1803.0], [91.0, 1809.0], [91.1, 1813.0], [91.2, 1819.0], [91.3, 1840.0], [91.4, 1844.0], [91.5, 1847.0], [91.6, 1859.0], [91.7, 1896.0], [91.8, 1918.0], [91.9, 1922.0], [92.0, 1966.0], [92.1, 2037.0], [92.2, 2057.0], [92.3, 2059.0], [92.4, 2060.0], [92.5, 2067.0], [92.6, 2080.0], [92.7, 2082.0], [92.8, 2087.0], [92.9, 2096.0], [93.0, 2098.0], [93.1, 2102.0], [93.2, 2106.0], [93.3, 2108.0], [93.4, 2111.0], [93.5, 2113.0], [93.6, 2119.0], [93.7, 2120.0], [93.8, 2120.0], [93.9, 2122.0], [94.0, 2124.0], [94.1, 2124.0], [94.2, 2125.0], [94.3, 2125.0], [94.4, 2132.0], [94.5, 2132.0], [94.6, 2133.0], [94.7, 2133.0], [94.8, 2138.0], [94.9, 2141.0], [95.0, 2143.0], [95.1, 2148.0], [95.2, 2153.0], [95.3, 2155.0], [95.4, 2175.0], [95.5, 2191.0], [95.6, 2622.0], [95.7, 2639.0], [95.8, 2645.0], [95.9, 2657.0], [96.0, 2672.0], [96.1, 2678.0], [96.2, 2682.0], [96.3, 2692.0], [96.4, 2699.0], [96.5, 2702.0], [96.6, 2712.0], [96.7, 2717.0], [96.8, 2724.0], [96.9, 2731.0], [97.0, 2736.0], [97.1, 2739.0], [97.2, 2745.0], [97.3, 2747.0], [97.4, 2751.0], [97.5, 2751.0], [97.6, 2755.0], [97.7, 2758.0], [97.8, 2762.0], [97.9, 2766.0], [98.0, 2769.0], [98.1, 2770.0], [98.2, 2773.0], [98.3, 2785.0], [98.4, 2796.0], [98.5, 2800.0], [98.6, 2923.0], [98.7, 3103.0], [98.8, 3787.0], [98.9, 3797.0], [99.0, 3857.0], [99.1, 3887.0], [99.2, 3909.0], [99.3, 3964.0], [99.4, 4599.0], [99.5, 4863.0], [99.6, 6074.0], [99.7, 6973.0], [99.8, 7609.0], [99.9, 7984.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 8.0], [0.1, 9.0], [0.2, 9.0], [0.3, 9.0], [0.4, 9.0], [0.5, 9.0], [0.6, 9.0], [0.7, 9.0], [0.8, 9.0], [0.9, 9.0], [1.0, 9.0], [1.1, 10.0], [1.2, 10.0], [1.3, 10.0], [1.4, 10.0], [1.5, 10.0], [1.6, 10.0], [1.7, 10.0], [1.8, 10.0], [1.9, 10.0], [2.0, 10.0], [2.1, 10.0], [2.2, 10.0], [2.3, 10.0], [2.4, 10.0], [2.5, 10.0], [2.6, 10.0], [2.7, 10.0], [2.8, 10.0], [2.9, 10.0], [3.0, 10.0], [3.1, 10.0], [3.2, 10.0], [3.3, 10.0], [3.4, 10.0], [3.5, 11.0], [3.6, 11.0], [3.7, 11.0], [3.8, 11.0], [3.9, 11.0], [4.0, 11.0], [4.1, 11.0], [4.2, 11.0], [4.3, 11.0], [4.4, 11.0], [4.5, 11.0], [4.6, 11.0], [4.7, 11.0], [4.8, 11.0], [4.9, 11.0], [5.0, 11.0], [5.1, 11.0], [5.2, 11.0], [5.3, 11.0], [5.4, 11.0], [5.5, 11.0], [5.6, 11.0], [5.7, 11.0], [5.8, 11.0], [5.9, 11.0], [6.0, 11.0], [6.1, 11.0], [6.2, 11.0], [6.3, 11.0], [6.4, 11.0], [6.5, 11.0], [6.6, 11.0], [6.7, 11.0], [6.8, 11.0], [6.9, 11.0], [7.0, 11.0], [7.1, 11.0], [7.2, 11.0], [7.3, 11.0], [7.4, 11.0], [7.5, 11.0], [7.6, 11.0], [7.7, 11.0], [7.8, 11.0], [7.9, 11.0], [8.0, 11.0], [8.1, 11.0], [8.2, 11.0], [8.3, 11.0], [8.4, 11.0], [8.5, 11.0], [8.6, 11.0], [8.7, 11.0], [8.8, 11.0], [8.9, 11.0], [9.0, 11.0], [9.1, 11.0], [9.2, 11.0], [9.3, 11.0], [9.4, 11.0], [9.5, 11.0], [9.6, 11.0], [9.7, 11.0], [9.8, 11.0], [9.9, 11.0], [10.0, 11.0], [10.1, 11.0], [10.2, 11.0], [10.3, 11.0], [10.4, 11.0], [10.5, 11.0], [10.6, 11.0], [10.7, 11.0], [10.8, 11.0], [10.9, 11.0], [11.0, 11.0], [11.1, 11.0], [11.2, 11.0], [11.3, 11.0], [11.4, 11.0], [11.5, 11.0], [11.6, 11.0], [11.7, 12.0], [11.8, 12.0], [11.9, 12.0], [12.0, 12.0], [12.1, 12.0], [12.2, 12.0], [12.3, 12.0], [12.4, 12.0], [12.5, 12.0], [12.6, 12.0], [12.7, 12.0], [12.8, 12.0], [12.9, 12.0], [13.0, 12.0], [13.1, 12.0], [13.2, 12.0], [13.3, 12.0], [13.4, 12.0], [13.5, 12.0], [13.6, 12.0], [13.7, 12.0], [13.8, 12.0], [13.9, 12.0], [14.0, 12.0], [14.1, 12.0], [14.2, 12.0], [14.3, 12.0], [14.4, 12.0], [14.5, 12.0], [14.6, 12.0], [14.7, 12.0], [14.8, 12.0], [14.9, 12.0], [15.0, 12.0], [15.1, 12.0], [15.2, 12.0], [15.3, 12.0], [15.4, 12.0], [15.5, 12.0], [15.6, 12.0], [15.7, 12.0], [15.8, 12.0], [15.9, 12.0], [16.0, 12.0], [16.1, 12.0], [16.2, 12.0], [16.3, 12.0], [16.4, 12.0], [16.5, 12.0], [16.6, 12.0], [16.7, 12.0], [16.8, 12.0], [16.9, 12.0], [17.0, 12.0], [17.1, 12.0], [17.2, 12.0], [17.3, 12.0], [17.4, 12.0], [17.5, 12.0], [17.6, 12.0], [17.7, 12.0], [17.8, 12.0], [17.9, 12.0], [18.0, 12.0], [18.1, 12.0], [18.2, 12.0], [18.3, 12.0], [18.4, 12.0], [18.5, 12.0], [18.6, 12.0], [18.7, 12.0], [18.8, 12.0], [18.9, 12.0], [19.0, 12.0], [19.1, 12.0], [19.2, 12.0], [19.3, 12.0], [19.4, 12.0], [19.5, 12.0], [19.6, 12.0], [19.7, 12.0], [19.8, 12.0], [19.9, 12.0], [20.0, 12.0], [20.1, 12.0], [20.2, 12.0], [20.3, 12.0], [20.4, 12.0], [20.5, 12.0], [20.6, 12.0], [20.7, 12.0], [20.8, 12.0], [20.9, 12.0], [21.0, 12.0], [21.1, 12.0], [21.2, 12.0], [21.3, 12.0], [21.4, 12.0], [21.5, 12.0], [21.6, 12.0], [21.7, 13.0], [21.8, 13.0], [21.9, 13.0], [22.0, 13.0], [22.1, 13.0], [22.2, 13.0], [22.3, 13.0], [22.4, 13.0], [22.5, 13.0], [22.6, 13.0], [22.7, 13.0], [22.8, 13.0], [22.9, 13.0], [23.0, 13.0], [23.1, 13.0], [23.2, 13.0], [23.3, 13.0], [23.4, 13.0], [23.5, 13.0], [23.6, 13.0], [23.7, 13.0], [23.8, 13.0], [23.9, 13.0], [24.0, 13.0], [24.1, 13.0], [24.2, 13.0], [24.3, 13.0], [24.4, 13.0], [24.5, 13.0], [24.6, 13.0], [24.7, 13.0], [24.8, 13.0], [24.9, 13.0], [25.0, 13.0], [25.1, 13.0], [25.2, 13.0], [25.3, 13.0], [25.4, 13.0], [25.5, 13.0], [25.6, 13.0], [25.7, 13.0], [25.8, 13.0], [25.9, 13.0], [26.0, 13.0], [26.1, 13.0], [26.2, 13.0], [26.3, 13.0], [26.4, 13.0], [26.5, 13.0], [26.6, 13.0], [26.7, 13.0], [26.8, 13.0], [26.9, 13.0], [27.0, 13.0], [27.1, 13.0], [27.2, 13.0], [27.3, 13.0], [27.4, 13.0], [27.5, 13.0], [27.6, 13.0], [27.7, 13.0], [27.8, 13.0], [27.9, 13.0], [28.0, 13.0], [28.1, 13.0], [28.2, 13.0], [28.3, 13.0], [28.4, 13.0], [28.5, 13.0], [28.6, 13.0], [28.7, 13.0], [28.8, 13.0], [28.9, 13.0], [29.0, 13.0], [29.1, 13.0], [29.2, 13.0], [29.3, 13.0], [29.4, 13.0], [29.5, 13.0], [29.6, 13.0], [29.7, 13.0], [29.8, 13.0], [29.9, 13.0], [30.0, 13.0], [30.1, 13.0], [30.2, 13.0], [30.3, 13.0], [30.4, 13.0], [30.5, 13.0], [30.6, 13.0], [30.7, 13.0], [30.8, 13.0], [30.9, 13.0], [31.0, 13.0], [31.1, 13.0], [31.2, 13.0], [31.3, 13.0], [31.4, 13.0], [31.5, 13.0], [31.6, 13.0], [31.7, 14.0], [31.8, 14.0], [31.9, 14.0], [32.0, 14.0], [32.1, 14.0], [32.2, 14.0], [32.3, 14.0], [32.4, 14.0], [32.5, 14.0], [32.6, 14.0], [32.7, 14.0], [32.8, 14.0], [32.9, 14.0], [33.0, 14.0], [33.1, 14.0], [33.2, 14.0], [33.3, 14.0], [33.4, 14.0], [33.5, 14.0], [33.6, 14.0], [33.7, 14.0], [33.8, 14.0], [33.9, 14.0], [34.0, 14.0], [34.1, 14.0], [34.2, 14.0], [34.3, 14.0], [34.4, 14.0], [34.5, 14.0], [34.6, 14.0], [34.7, 14.0], [34.8, 14.0], [34.9, 14.0], [35.0, 14.0], [35.1, 14.0], [35.2, 14.0], [35.3, 14.0], [35.4, 14.0], [35.5, 14.0], [35.6, 14.0], [35.7, 14.0], [35.8, 14.0], [35.9, 14.0], [36.0, 14.0], [36.1, 14.0], [36.2, 14.0], [36.3, 14.0], [36.4, 14.0], [36.5, 14.0], [36.6, 14.0], [36.7, 14.0], [36.8, 14.0], [36.9, 14.0], [37.0, 14.0], [37.1, 14.0], [37.2, 14.0], [37.3, 14.0], [37.4, 14.0], [37.5, 14.0], [37.6, 14.0], [37.7, 14.0], [37.8, 14.0], [37.9, 14.0], [38.0, 14.0], [38.1, 14.0], [38.2, 14.0], [38.3, 14.0], [38.4, 14.0], [38.5, 14.0], [38.6, 14.0], [38.7, 14.0], [38.8, 14.0], [38.9, 14.0], [39.0, 14.0], [39.1, 14.0], [39.2, 14.0], [39.3, 14.0], [39.4, 14.0], [39.5, 14.0], [39.6, 14.0], [39.7, 14.0], [39.8, 14.0], [39.9, 14.0], [40.0, 14.0], [40.1, 14.0], [40.2, 14.0], [40.3, 14.0], [40.4, 14.0], [40.5, 14.0], [40.6, 14.0], [40.7, 14.0], [40.8, 14.0], [40.9, 14.0], [41.0, 14.0], [41.1, 14.0], [41.2, 14.0], [41.3, 14.0], [41.4, 14.0], [41.5, 14.0], [41.6, 14.0], [41.7, 14.0], [41.8, 14.0], [41.9, 14.0], [42.0, 14.0], [42.1, 14.0], [42.2, 14.0], [42.3, 14.0], [42.4, 14.0], [42.5, 14.0], [42.6, 14.0], [42.7, 14.0], [42.8, 15.0], [42.9, 15.0], [43.0, 15.0], [43.1, 15.0], [43.2, 15.0], [43.3, 15.0], [43.4, 15.0], [43.5, 15.0], [43.6, 15.0], [43.7, 15.0], [43.8, 15.0], [43.9, 15.0], [44.0, 15.0], [44.1, 15.0], [44.2, 15.0], [44.3, 15.0], [44.4, 15.0], [44.5, 15.0], [44.6, 15.0], [44.7, 15.0], [44.8, 15.0], [44.9, 15.0], [45.0, 15.0], [45.1, 15.0], [45.2, 15.0], [45.3, 15.0], [45.4, 15.0], [45.5, 15.0], [45.6, 15.0], [45.7, 15.0], [45.8, 15.0], [45.9, 15.0], [46.0, 15.0], [46.1, 15.0], [46.2, 15.0], [46.3, 15.0], [46.4, 15.0], [46.5, 15.0], [46.6, 15.0], [46.7, 15.0], [46.8, 15.0], [46.9, 15.0], [47.0, 15.0], [47.1, 15.0], [47.2, 15.0], [47.3, 15.0], [47.4, 15.0], [47.5, 15.0], [47.6, 15.0], [47.7, 15.0], [47.8, 15.0], [47.9, 15.0], [48.0, 15.0], [48.1, 15.0], [48.2, 15.0], [48.3, 15.0], [48.4, 15.0], [48.5, 15.0], [48.6, 15.0], [48.7, 15.0], [48.8, 15.0], [48.9, 15.0], [49.0, 15.0], [49.1, 15.0], [49.2, 15.0], [49.3, 15.0], [49.4, 15.0], [49.5, 15.0], [49.6, 15.0], [49.7, 15.0], [49.8, 15.0], [49.9, 15.0], [50.0, 15.0], [50.1, 15.0], [50.2, 15.0], [50.3, 15.0], [50.4, 15.0], [50.5, 15.0], [50.6, 15.0], [50.7, 15.0], [50.8, 15.0], [50.9, 15.0], [51.0, 15.0], [51.1, 15.0], [51.2, 15.0], [51.3, 15.0], [51.4, 15.0], [51.5, 15.0], [51.6, 15.0], [51.7, 15.0], [51.8, 16.0], [51.9, 16.0], [52.0, 16.0], [52.1, 16.0], [52.2, 16.0], [52.3, 16.0], [52.4, 16.0], [52.5, 16.0], [52.6, 16.0], [52.7, 16.0], [52.8, 16.0], [52.9, 16.0], [53.0, 16.0], [53.1, 16.0], [53.2, 16.0], [53.3, 16.0], [53.4, 16.0], [53.5, 16.0], [53.6, 16.0], [53.7, 16.0], [53.8, 16.0], [53.9, 16.0], [54.0, 16.0], [54.1, 16.0], [54.2, 16.0], [54.3, 16.0], [54.4, 16.0], [54.5, 16.0], [54.6, 16.0], [54.7, 16.0], [54.8, 16.0], [54.9, 16.0], [55.0, 16.0], [55.1, 16.0], [55.2, 16.0], [55.3, 16.0], [55.4, 16.0], [55.5, 16.0], [55.6, 16.0], [55.7, 16.0], [55.8, 16.0], [55.9, 16.0], [56.0, 16.0], [56.1, 16.0], [56.2, 16.0], [56.3, 16.0], [56.4, 16.0], [56.5, 16.0], [56.6, 16.0], [56.7, 16.0], [56.8, 16.0], [56.9, 16.0], [57.0, 16.0], [57.1, 16.0], [57.2, 16.0], [57.3, 16.0], [57.4, 16.0], [57.5, 16.0], [57.6, 16.0], [57.7, 16.0], [57.8, 16.0], [57.9, 16.0], [58.0, 16.0], [58.1, 16.0], [58.2, 16.0], [58.3, 16.0], [58.4, 16.0], [58.5, 16.0], [58.6, 16.0], [58.7, 16.0], [58.8, 16.0], [58.9, 16.0], [59.0, 16.0], [59.1, 16.0], [59.2, 16.0], [59.3, 17.0], [59.4, 17.0], [59.5, 17.0], [59.6, 17.0], [59.7, 17.0], [59.8, 17.0], [59.9, 17.0], [60.0, 17.0], [60.1, 17.0], [60.2, 17.0], [60.3, 17.0], [60.4, 17.0], [60.5, 17.0], [60.6, 17.0], [60.7, 17.0], [60.8, 17.0], [60.9, 17.0], [61.0, 17.0], [61.1, 17.0], [61.2, 17.0], [61.3, 17.0], [61.4, 17.0], [61.5, 17.0], [61.6, 17.0], [61.7, 17.0], [61.8, 17.0], [61.9, 17.0], [62.0, 17.0], [62.1, 17.0], [62.2, 17.0], [62.3, 17.0], [62.4, 17.0], [62.5, 17.0], [62.6, 17.0], [62.7, 17.0], [62.8, 17.0], [62.9, 17.0], [63.0, 17.0], [63.1, 17.0], [63.2, 17.0], [63.3, 17.0], [63.4, 17.0], [63.5, 17.0], [63.6, 17.0], [63.7, 17.0], [63.8, 17.0], [63.9, 17.0], [64.0, 17.0], [64.1, 17.0], [64.2, 17.0], [64.3, 17.0], [64.4, 17.0], [64.5, 17.0], [64.6, 17.0], [64.7, 17.0], [64.8, 17.0], [64.9, 17.0], [65.0, 17.0], [65.1, 17.0], [65.2, 17.0], [65.3, 17.0], [65.4, 17.0], [65.5, 17.0], [65.6, 17.0], [65.7, 17.0], [65.8, 17.0], [65.9, 17.0], [66.0, 17.0], [66.1, 17.0], [66.2, 17.0], [66.3, 17.0], [66.4, 17.0], [66.5, 18.0], [66.6, 18.0], [66.7, 18.0], [66.8, 18.0], [66.9, 18.0], [67.0, 18.0], [67.1, 18.0], [67.2, 18.0], [67.3, 18.0], [67.4, 18.0], [67.5, 18.0], [67.6, 18.0], [67.7, 18.0], [67.8, 18.0], [67.9, 18.0], [68.0, 18.0], [68.1, 18.0], [68.2, 18.0], [68.3, 18.0], [68.4, 18.0], [68.5, 18.0], [68.6, 18.0], [68.7, 18.0], [68.8, 18.0], [68.9, 18.0], [69.0, 18.0], [69.1, 18.0], [69.2, 18.0], [69.3, 18.0], [69.4, 18.0], [69.5, 18.0], [69.6, 18.0], [69.7, 18.0], [69.8, 18.0], [69.9, 18.0], [70.0, 18.0], [70.1, 18.0], [70.2, 18.0], [70.3, 18.0], [70.4, 18.0], [70.5, 18.0], [70.6, 18.0], [70.7, 18.0], [70.8, 18.0], [70.9, 18.0], [71.0, 18.0], [71.1, 18.0], [71.2, 19.0], [71.3, 19.0], [71.4, 19.0], [71.5, 19.0], [71.6, 19.0], [71.7, 19.0], [71.8, 19.0], [71.9, 19.0], [72.0, 19.0], [72.1, 19.0], [72.2, 19.0], [72.3, 19.0], [72.4, 19.0], [72.5, 19.0], [72.6, 19.0], [72.7, 19.0], [72.8, 19.0], [72.9, 19.0], [73.0, 19.0], [73.1, 19.0], [73.2, 19.0], [73.3, 19.0], [73.4, 19.0], [73.5, 19.0], [73.6, 19.0], [73.7, 19.0], [73.8, 19.0], [73.9, 19.0], [74.0, 19.0], [74.1, 19.0], [74.2, 19.0], [74.3, 19.0], [74.4, 19.0], [74.5, 19.0], [74.6, 19.0], [74.7, 19.0], [74.8, 19.0], [74.9, 19.0], [75.0, 19.0], [75.1, 19.0], [75.2, 19.0], [75.3, 19.0], [75.4, 19.0], [75.5, 19.0], [75.6, 19.0], [75.7, 19.0], [75.8, 19.0], [75.9, 19.0], [76.0, 20.0], [76.1, 20.0], [76.2, 20.0], [76.3, 20.0], [76.4, 20.0], [76.5, 20.0], [76.6, 20.0], [76.7, 20.0], [76.8, 20.0], [76.9, 20.0], [77.0, 20.0], [77.1, 20.0], [77.2, 20.0], [77.3, 20.0], [77.4, 20.0], [77.5, 20.0], [77.6, 20.0], [77.7, 20.0], [77.8, 20.0], [77.9, 20.0], [78.0, 20.0], [78.1, 20.0], [78.2, 20.0], [78.3, 20.0], [78.4, 20.0], [78.5, 20.0], [78.6, 20.0], [78.7, 20.0], [78.8, 20.0], [78.9, 20.0], [79.0, 20.0], [79.1, 20.0], [79.2, 20.0], [79.3, 20.0], [79.4, 20.0], [79.5, 20.0], [79.6, 20.0], [79.7, 20.0], [79.8, 20.0], [79.9, 21.0], [80.0, 21.0], [80.1, 21.0], [80.2, 21.0], [80.3, 21.0], [80.4, 21.0], [80.5, 21.0], [80.6, 21.0], [80.7, 21.0], [80.8, 21.0], [80.9, 21.0], [81.0, 21.0], [81.1, 21.0], [81.2, 21.0], [81.3, 21.0], [81.4, 21.0], [81.5, 21.0], [81.6, 21.0], [81.7, 21.0], [81.8, 21.0], [81.9, 21.0], [82.0, 21.0], [82.1, 21.0], [82.2, 21.0], [82.3, 21.0], [82.4, 21.0], [82.5, 21.0], [82.6, 21.0], [82.7, 21.0], [82.8, 22.0], [82.9, 22.0], [83.0, 22.0], [83.1, 22.0], [83.2, 22.0], [83.3, 22.0], [83.4, 22.0], [83.5, 22.0], [83.6, 22.0], [83.7, 22.0], [83.8, 22.0], [83.9, 22.0], [84.0, 22.0], [84.1, 22.0], [84.2, 22.0], [84.3, 22.0], [84.4, 22.0], [84.5, 22.0], [84.6, 22.0], [84.7, 22.0], [84.8, 22.0], [84.9, 22.0], [85.0, 22.0], [85.1, 22.0], [85.2, 22.0], [85.3, 22.0], [85.4, 22.0], [85.5, 22.0], [85.6, 22.0], [85.7, 22.0], [85.8, 23.0], [85.9, 23.0], [86.0, 23.0], [86.1, 23.0], [86.2, 23.0], [86.3, 23.0], [86.4, 23.0], [86.5, 23.0], [86.6, 23.0], [86.7, 23.0], [86.8, 23.0], [86.9, 23.0], [87.0, 23.0], [87.1, 23.0], [87.2, 23.0], [87.3, 23.0], [87.4, 23.0], [87.5, 23.0], [87.6, 23.0], [87.7, 23.0], [87.8, 24.0], [87.9, 24.0], [88.0, 24.0], [88.1, 24.0], [88.2, 24.0], [88.3, 24.0], [88.4, 24.0], [88.5, 24.0], [88.6, 24.0], [88.7, 24.0], [88.8, 24.0], [88.9, 24.0], [89.0, 24.0], [89.1, 24.0], [89.2, 24.0], [89.3, 24.0], [89.4, 24.0], [89.5, 25.0], [89.6, 25.0], [89.7, 25.0], [89.8, 25.0], [89.9, 25.0], [90.0, 25.0], [90.1, 25.0], [90.2, 25.0], [90.3, 25.0], [90.4, 25.0], [90.5, 25.0], [90.6, 26.0], [90.7, 26.0], [90.8, 26.0], [90.9, 26.0], [91.0, 26.0], [91.1, 26.0], [91.2, 26.0], [91.3, 26.0], [91.4, 26.0], [91.5, 26.0], [91.6, 27.0], [91.7, 27.0], [91.8, 27.0], [91.9, 27.0], [92.0, 27.0], [92.1, 27.0], [92.2, 27.0], [92.3, 27.0], [92.4, 27.0], [92.5, 28.0], [92.6, 28.0], [92.7, 28.0], [92.8, 28.0], [92.9, 28.0], [93.0, 28.0], [93.1, 28.0], [93.2, 29.0], [93.3, 29.0], [93.4, 29.0], [93.5, 29.0], [93.6, 29.0], [93.7, 30.0], [93.8, 30.0], [93.9, 30.0], [94.0, 30.0], [94.1, 30.0], [94.2, 30.0], [94.3, 30.0], [94.4, 30.0], [94.5, 30.0], [94.6, 31.0], [94.7, 31.0], [94.8, 31.0], [94.9, 31.0], [95.0, 32.0], [95.1, 32.0], [95.2, 32.0], [95.3, 32.0], [95.4, 32.0], [95.5, 32.0], [95.6, 32.0], [95.7, 33.0], [95.8, 33.0], [95.9, 33.0], [96.0, 33.0], [96.1, 33.0], [96.2, 34.0], [96.3, 34.0], [96.4, 34.0], [96.5, 34.0], [96.6, 35.0], [96.7, 35.0], [96.8, 36.0], [96.9, 37.0], [97.0, 37.0], [97.1, 38.0], [97.2, 38.0], [97.3, 38.0], [97.4, 39.0], [97.5, 39.0], [97.6, 40.0], [97.7, 40.0], [97.8, 40.0], [97.9, 41.0], [98.0, 41.0], [98.1, 42.0], [98.2, 42.0], [98.3, 42.0], [98.4, 43.0], [98.5, 43.0], [98.6, 46.0], [98.7, 47.0], [98.8, 47.0], [98.9, 49.0], [99.0, 50.0], [99.1, 51.0], [99.2, 51.0], [99.3, 52.0], [99.4, 53.0], [99.5, 54.0], [99.6, 56.0], [99.7, 58.0], [99.8, 67.0], [99.9, 70.0]], "isOverall": false, "label": "getUserList", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1500.0, "series": [{"data": [[0.0, 1499.0], [100.0, 1.0]], "isOverall": false, "label": "User", "isController": false}, {"data": [[2100.0, 27.0], [600.0, 54.0], [2600.0, 12.0], [700.0, 343.0], [2700.0, 40.0], [800.0, 120.0], [3600.0, 4.0], [3700.0, 6.0], [3800.0, 3.0], [1000.0, 262.0], [1100.0, 584.0], [6100.0, 1.0], [1600.0, 1.0], [6900.0, 1.0], [2000.0, 42.0]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[600.0, 17.0], [700.0, 214.0], [800.0, 217.0], [900.0, 16.0], [1000.0, 110.0], [16100.0, 1.0], [1100.0, 733.0], [1200.0, 3.0], [1300.0, 6.0], [1400.0, 8.0], [1500.0, 11.0], [1600.0, 15.0], [1700.0, 13.0], [1800.0, 13.0], [1900.0, 5.0], [2000.0, 15.0], [2100.0, 37.0], [2600.0, 14.0], [2700.0, 30.0], [2800.0, 2.0], [2900.0, 1.0], [3100.0, 1.0], [3700.0, 3.0], [3800.0, 3.0], [3900.0, 3.0], [4400.0, 1.0], [4500.0, 1.0], [4800.0, 1.0], [5400.0, 1.0], [6000.0, 1.0], [6900.0, 1.0], [7100.0, 1.0], [7600.0, 1.0], [7900.0, 1.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 1500.0]], "isOverall": false, "label": "getUserList", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 16100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 313.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 3000.0, "series": [{"data": [[0.0, 3000.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2687.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 313.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 288.75808823529485, "minX": 1.67398002E12, "maxY": 330.93079268292735, "series": [{"data": [[1.67398002E12, 330.93079268292735], [1.67398008E12, 288.75808823529485]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67398008E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 9.0, "minX": 1.0, "maxY": 16109.0, "series": [{"data": [[2.0, 24.0], [6.0, 14.0], [10.0, 14.0], [35.0, 18.0], [34.0, 14.0], [43.0, 22.0], [42.0, 15.0], [44.0, 19.666666666666668], [48.0, 19.0], [52.0, 23.0], [84.0, 13.0], [125.0, 12.0], [159.0, 21.0], [157.0, 18.0], [167.0, 15.5], [164.0, 14.5], [175.0, 16.2], [169.0, 30.0], [168.0, 24.0], [183.0, 15.5], [182.0, 19.0], [181.0, 16.0], [180.0, 18.0], [177.0, 13.0], [190.0, 13.5], [189.0, 12.0], [195.0, 11.0], [192.0, 15.0], [207.0, 24.0], [206.0, 16.0], [205.0, 14.0], [215.0, 31.0], [213.0, 17.0], [212.0, 14.0], [211.0, 22.0], [210.0, 14.0], [208.0, 13.0], [223.0, 15.0], [222.0, 19.0], [220.0, 24.0], [219.0, 13.0], [218.0, 15.0], [217.0, 11.0], [216.0, 19.75], [230.0, 13.0], [224.0, 19.0], [236.0, 13.5], [233.0, 19.666666666666668], [246.0, 20.333333333333332], [245.0, 20.0], [242.0, 14.0], [240.0, 17.2], [252.0, 12.5], [255.0, 18.0], [251.0, 19.0], [254.0, 17.0], [253.0, 15.0], [250.0, 12.0], [248.0, 19.333333333333332], [269.0, 10.0], [256.0, 15.6], [257.0, 27.5], [258.0, 21.5], [268.0, 17.666666666666668], [259.0, 14.5], [260.0, 19.0], [263.0, 11.0], [261.0, 18.5], [264.0, 15.0], [265.0, 14.666666666666666], [266.0, 17.0], [271.0, 16.0], [286.0, 18.0], [272.0, 12.666666666666666], [275.0, 20.333333333333332], [280.0, 18.666666666666668], [281.0, 23.142857142857142], [282.0, 21.25], [285.0, 20.099999999999998], [287.0, 22.0], [279.0, 14.5], [278.0, 14.5], [276.0, 12.5], [289.0, 15.7], [288.0, 18.833333333333336], [290.0, 17.125], [291.0, 15.0], [292.0, 17.0], [293.0, 18.8], [294.0, 15.0], [295.0, 18.333333333333336], [296.0, 12.666666666666666], [302.0, 14.0], [303.0, 17.0], [300.0, 13.666666666666666], [301.0, 23.0], [297.0, 20.0], [299.0, 13.666666666666668], [316.0, 16.692307692307693], [305.0, 14.0], [307.0, 14.142857142857142], [306.0, 16.0], [309.0, 16.0], [308.0, 32.0], [311.0, 14.727272727272728], [304.0, 22.75], [310.0, 22.5], [313.0, 16.588235294117652], [315.0, 16.583333333333332], [314.0, 19.142857142857146], [317.0, 21.941176470588232], [318.0, 13.499999999999998], [319.0, 16.040000000000003], [312.0, 18.0], [321.0, 15.437499999999998], [320.0, 17.666666666666664], [323.0, 18.23333333333333], [322.0, 20.818181818181824], [332.0, 19.07142857142858], [335.0, 20.317460317460327], [328.0, 15.76086956521739], [333.0, 18.85714285714286], [334.0, 17.253731343283583], [325.0, 18.982142857142854], [324.0, 20.250000000000004], [326.0, 16.672131147540977], [327.0, 16.0], [329.0, 17.242424242424246], [330.0, 16.491525423728817], [331.0, 16.59210526315789], [337.0, 18.17142857142857], [336.0, 19.971428571428568], [338.0, 17.846153846153847], [348.0, 27.0], [339.0, 23.0], [349.0, 20.5], [350.0, 15.0], [340.0, 16.5], [341.0, 15.333333333333332], [342.0, 19.571428571428573], [343.0, 20.857142857142858], [344.0, 15.899999999999999], [345.0, 15.142857142857144], [347.0, 15.11111111111111], [346.0, 14.833333333333332], [353.0, 12.0], [355.0, 27.0], [356.0, 14.666666666666666], [357.0, 11.5], [358.0, 15.0], [359.0, 17.833333333333336], [360.0, 16.0], [363.0, 16.0], [364.0, 12.5], [365.0, 15.0], [366.0, 16.833333333333336], [367.0, 11.5], [381.0, 14.363636363636363], [369.0, 13.5], [368.0, 12.75], [371.0, 15.25], [370.0, 13.75], [374.0, 14.0], [373.0, 21.5], [372.0, 14.0], [375.0, 32.0], [376.0, 11.0], [379.0, 16.5], [382.0, 21.333333333333332], [383.0, 15.142857142857144], [384.0, 23.2], [385.0, 15.0], [1.0, 15.0]], "isOverall": false, "label": "User", "isController": false}, {"data": [[316.8466666666673, 17.652000000000008]], "isOverall": false, "label": "User-Aggregated", "isController": false}, {"data": [[2.0, 1191.0], [3.0, 6126.0], [4.0, 1048.0], [5.0, 762.0], [6.0, 746.0], [7.0, 1111.0], [8.0, 3851.0], [9.0, 1110.0], [10.0, 1106.0], [11.0, 3828.0], [12.0, 1123.0], [13.0, 818.0], [14.0, 826.0], [15.0, 1100.0], [16.0, 2767.0], [17.0, 2760.0], [18.0, 1094.0], [19.0, 788.0], [20.0, 2743.0], [21.0, 789.0], [22.0, 2751.0], [23.0, 2776.0], [24.0, 746.0], [25.0, 755.0], [26.0, 2092.0], [27.0, 2752.0], [28.0, 2755.0], [30.0, 2404.0], [31.0, 2081.0], [33.0, 2730.0], [32.0, 2080.0], [35.0, 2095.0], [34.0, 2074.0], [37.0, 2723.0], [36.0, 2715.0], [39.0, 6952.0], [38.0, 2711.0], [41.0, 1118.0], [40.0, 727.0], [43.0, 2706.0], [42.0, 3693.0], [45.0, 1110.0], [44.0, 2115.0], [47.0, 1120.0], [46.0, 2114.0], [49.0, 2111.0], [48.0, 1110.0], [51.0, 1614.0], [53.0, 3735.0], [52.0, 2703.0], [55.0, 1107.0], [54.0, 1103.0], [57.0, 2718.0], [56.0, 1115.0], [59.0, 1133.0], [58.0, 1112.0], [60.0, 1121.0], [63.0, 1112.0], [62.0, 1610.5], [67.0, 1117.0], [66.0, 2124.0], [65.0, 1126.0], [64.0, 1124.0], [71.0, 1110.0], [70.0, 1121.0], [69.0, 1109.0], [68.0, 1148.0], [75.0, 1114.0], [74.0, 1122.0], [73.0, 1108.0], [72.0, 1123.0], [78.0, 1107.0], [77.0, 1119.0], [76.0, 1115.0], [83.0, 747.0], [82.0, 1106.0], [81.0, 749.0], [80.0, 2452.0], [87.0, 1115.0], [86.0, 760.0], [85.0, 1112.0], [84.0, 750.0], [91.0, 1105.0], [90.0, 737.0], [89.0, 1125.0], [88.0, 1125.0], [95.0, 1125.0], [93.0, 1122.0], [92.0, 1109.0], [99.0, 2400.0], [97.0, 1109.0], [103.0, 1129.0], [102.0, 1126.0], [101.0, 936.0], [105.0, 1119.0], [104.0, 1134.0], [111.0, 1107.5], [109.0, 1113.0], [108.0, 993.6666666666666], [115.0, 1119.0], [114.0, 1116.0], [113.0, 734.0], [119.0, 987.6666666666666], [116.0, 741.0], [123.0, 921.0], [121.0, 920.5], [127.0, 719.0], [126.0, 724.0], [125.0, 729.0], [124.0, 726.0], [135.0, 1108.0], [134.0, 1115.0], [132.0, 1110.0], [131.0, 1122.0], [130.0, 730.0], [129.0, 1117.0], [128.0, 1108.0], [143.0, 714.0], [142.0, 726.0], [141.0, 704.0], [140.0, 1120.5], [138.0, 713.0], [137.0, 1124.0], [136.0, 1110.0], [151.0, 986.0], [148.0, 712.0], [147.0, 1126.0], [146.0, 1115.5], [144.0, 705.0], [159.0, 702.0], [158.0, 709.0], [157.0, 697.0], [156.0, 1138.0], [155.0, 1109.0], [154.0, 698.0], [153.0, 1125.0], [152.0, 1126.0], [167.0, 1110.0], [166.0, 1112.0], [165.0, 1132.0], [164.0, 1126.0], [163.0, 718.0], [162.0, 1110.0], [161.0, 1134.0], [160.0, 730.0], [175.0, 1424.75], [171.0, 691.0], [169.0, 1132.0], [168.0, 1113.0], [183.0, 1104.0], [182.0, 671.0], [181.0, 1108.0], [180.0, 2758.0], [179.0, 1126.0], [178.0, 678.0], [177.0, 1106.0], [176.0, 1108.0], [191.0, 2093.0], [190.0, 2739.0], [189.0, 1111.0], [187.0, 1101.0], [186.0, 685.0], [185.0, 661.0], [184.0, 669.0], [199.0, 666.0], [198.0, 1107.0], [197.0, 1096.0], [196.0, 2098.0], [195.0, 2103.0], [194.0, 659.0], [193.0, 1114.0], [192.0, 2104.0], [207.0, 1096.0], [206.0, 2712.0], [205.0, 1095.5], [203.0, 1102.0], [202.0, 684.0], [201.0, 657.0], [200.0, 1098.0], [215.0, 1102.0], [214.0, 1104.0], [213.0, 1108.0], [212.0, 1097.0], [211.0, 663.0], [210.0, 2107.0], [209.0, 653.0], [208.0, 664.0], [223.0, 1114.0], [222.0, 1119.0], [221.0, 1101.0], [220.0, 1111.0], [219.0, 1108.0], [218.0, 2106.0], [217.0, 1114.0], [216.0, 654.0], [231.0, 1107.0], [230.0, 2117.0], [229.0, 645.0], [228.0, 2114.0], [227.0, 801.0], [224.0, 2638.0], [238.0, 2616.0], [237.0, 652.0], [236.0, 1116.0], [235.0, 659.0], [234.0, 1112.0], [233.0, 1107.5], [247.0, 1116.0], [246.0, 1109.0], [245.0, 651.0], [244.0, 655.5], [242.0, 1105.0], [241.0, 650.0], [240.0, 655.0], [255.0, 1114.0], [254.0, 2122.0], [253.0, 882.0], [251.0, 1119.0], [250.0, 1112.0], [249.0, 647.0], [248.0, 665.0], [270.0, 1107.0], [271.0, 2097.0], [269.0, 2092.0], [268.0, 1108.0], [267.0, 662.0], [266.0, 667.0], [265.0, 1098.0], [264.0, 1095.0], [263.0, 654.0], [257.0, 645.0], [256.0, 1107.0], [259.0, 663.0], [258.0, 648.0], [262.0, 1102.0], [261.0, 1612.5], [285.0, 683.0], [286.0, 1108.0], [284.0, 2098.0], [275.0, 879.5], [273.0, 1113.0], [272.0, 1107.0], [283.0, 676.0], [282.0, 1097.0], [281.0, 2115.0], [280.0, 669.0], [279.0, 2101.0], [278.0, 665.0], [277.0, 1100.0], [276.0, 668.0], [291.0, 1111.0], [301.0, 706.0], [300.0, 1104.0], [299.0, 1102.0], [298.0, 1103.0], [297.0, 700.0], [295.0, 1096.0], [293.0, 696.0], [292.0, 695.0], [290.0, 2099.0], [289.0, 1093.0], [288.0, 685.0], [319.0, 1044.8947368421052], [318.0, 955.9411764705883], [314.0, 974.157894736842], [316.0, 1073.3181818181815], [307.0, 1106.0], [306.0, 1104.0], [304.0, 1116.0], [317.0, 1088.2307692307693], [315.0, 956.4166666666669], [313.0, 1171.076923076923], [312.0, 1685.0], [311.0, 863.3333333333334], [310.0, 1099.0], [309.0, 1134.0], [308.0, 722.0], [334.0, 1195.3214285714291], [335.0, 1162.507042253521], [332.0, 1094.3076923076922], [331.0, 1031.716216216216], [333.0, 1111.942857142857], [330.0, 1088.698113207547], [329.0, 1085.9999999999995], [328.0, 1125.6734693877554], [327.0, 1022.3255813953486], [323.0, 1210.107142857143], [321.0, 1093.1363636363637], [322.0, 939.76], [320.0, 1006.9090909090909], [326.0, 1110.0199999999995], [325.0, 1016.290322580645], [324.0, 981.681818181818], [350.0, 1112.5], [349.0, 971.0], [351.0, 1124.0], [348.0, 1482.2], [347.0, 1046.0], [346.0, 1221.5714285714287], [344.0, 1045.5833333333333], [345.0, 943.5], [343.0, 1114.5454545454547], [339.0, 1075.0555555555554], [338.0, 1129.7199999999998], [336.0, 1033.4647887323945], [337.0, 1150.609756097561], [341.0, 1205.1538461538462], [342.0, 1029.25], [340.0, 1330.75], [366.0, 790.0], [365.0, 880.6666666666666], [355.0, 931.0], [353.0, 1113.6666666666667], [367.0, 1000.3333333333334], [363.0, 1108.0], [362.0, 1111.0], [361.0, 1117.0], [360.0, 1117.0], [359.0, 1108.0], [358.0, 1113.0], [356.0, 1125.0], [370.0, 900.8], [368.0, 837.4], [369.0, 1110.0], [383.0, 826.6], [382.0, 757.5], [381.0, 1109.0], [380.0, 1110.5], [371.0, 937.8333333333334], [379.0, 1108.0], [376.0, 758.0], [375.0, 1122.0], [374.0, 853.375], [373.0, 933.0], [372.0, 973.6], [388.0, 769.0], [387.0, 762.0], [385.0, 759.0], [384.0, 873.6666666666666], [1.0, 3850.0]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[296.5480000000008, 1118.0973333333327]], "isOverall": false, "label": "CreateUser-Aggregated", "isController": false}, {"data": [[2.0, 7172.0], [6.0, 3909.0], [10.0, 7609.0], [34.0, 2757.3333333333335], [36.0, 2754.0], [43.0, 2724.0], [42.0, 7984.0], [44.0, 2731.3333333333335], [48.0, 3723.0], [55.0, 2751.0], [85.0, 3787.0], [127.0, 4599.0], [159.0, 2133.0], [167.0, 2785.0], [166.0, 1162.0], [164.0, 2770.0], [161.0, 1177.0], [175.0, 1551.25], [171.0, 1143.0], [169.0, 1133.0], [183.0, 1134.0], [182.0, 1133.0], [181.0, 1626.0], [179.0, 1144.0], [178.0, 1136.0], [177.0, 1128.0], [191.0, 1137.0], [190.0, 1669.6666666666665], [189.0, 1942.0], [185.0, 1123.0], [197.0, 1135.0], [207.0, 1128.0], [206.0, 1122.0], [200.0, 1133.0], [214.0, 714.0], [213.0, 1132.0], [212.0, 818.5], [211.0, 1137.0], [210.0, 1126.0], [209.0, 1143.0], [208.0, 1116.0], [223.0, 1142.0], [219.0, 1681.0], [218.0, 1301.6666666666667], [216.0, 1128.0], [228.0, 1382.25], [224.0, 677.0], [238.0, 1127.0], [237.0, 1125.0], [236.0, 667.0], [235.0, 2132.0], [233.0, 1136.0], [245.0, 1542.3333333333333], [246.0, 1465.0], [242.0, 1462.3333333333333], [240.0, 1130.5], [248.0, 1451.0], [249.0, 1385.0], [250.0, 1076.5], [251.0, 1267.0], [252.0, 1656.0], [253.0, 1323.2], [254.0, 1260.6666666666667], [255.0, 1155.5], [256.0, 1456.0], [261.0, 1119.3333333333335], [262.0, 886.6666666666666], [263.0, 877.5], [268.0, 1035.6666666666667], [259.0, 895.0], [258.0, 1160.0], [269.0, 874.0], [270.0, 781.0], [271.0, 880.0], [267.0, 689.0], [266.0, 684.0], [264.0, 1122.0], [284.0, 1254.25], [279.0, 1253.0], [272.0, 998.25], [278.0, 1489.75], [277.0, 1112.0], [276.0, 684.5], [280.0, 1725.5], [281.0, 1627.5714285714287], [282.0, 1246.0], [283.0, 1533.5], [285.0, 1700.3333333333333], [286.0, 1329.7777777777778], [287.0, 1541.5], [289.0, 1500.0], [288.0, 1726.5], [290.0, 1624.0], [291.0, 1142.0], [300.0, 862.25], [301.0, 1011.0], [292.0, 1411.4], [293.0, 717.0], [295.0, 1239.2], [296.0, 1505.8], [297.0, 1028.1666666666665], [298.0, 1234.0], [299.0, 1135.5], [316.0, 1005.5714285714284], [305.0, 1124.0], [304.0, 917.0], [307.0, 961.5714285714287], [306.0, 1151.0], [309.0, 832.0], [308.0, 947.5], [310.0, 774.0], [311.0, 993.5714285714287], [313.0, 1034.5000000000002], [315.0, 1017.4583333333333], [314.0, 1019.9411764705883], [317.0, 1171.5], [318.0, 985.4166666666666], [319.0, 1230.0909090909088], [312.0, 1031.4285714285713], [322.0, 1013.2608695652174], [320.0, 1105.75], [321.0, 1224.3749999999998], [323.0, 1075.1363636363635], [332.0, 1218.4074074074072], [333.0, 1165.2115384615388], [335.0, 1063.9855072463765], [334.0, 1215.3442622950822], [324.0, 1051.5909090909088], [325.0, 1359.1515151515152], [326.0, 1089.693877551021], [327.0, 1006.9803921568626], [328.0, 1090.8103448275865], [329.0, 1236.8360655737704], [330.0, 1030.9433962264147], [331.0, 1178.7058823529412], [337.0, 1162.7179487179485], [336.0, 1215.1571428571426], [339.0, 1164.857142857143], [338.0, 1393.8999999999999], [351.0, 971.5], [348.0, 1039.2], [340.0, 1138.125], [341.0, 989.2727272727273], [342.0, 1045.857142857143], [343.0, 941.25], [344.0, 1364.166666666667], [345.0, 1210.7], [347.0, 1144.75], [346.0, 1145.5], [364.0, 1118.5], [354.0, 1126.0], [355.0, 899.6666666666666], [356.0, 1009.6666666666666], [357.0, 1124.0], [359.0, 1015.0], [362.0, 1011.6666666666666], [363.0, 962.5], [365.0, 1119.0], [366.0, 1117.0], [367.0, 1033.4285714285713], [369.0, 784.3333333333334], [368.0, 1048.8], [371.0, 1283.125], [370.0, 1016.8333333333334], [372.0, 863.4], [373.0, 960.5], [374.0, 1035.2857142857142], [376.0, 1120.5], [379.0, 1115.0], [380.0, 792.0], [383.0, 958.0], [381.0, 1069.1666666666667], [382.0, 1026.5], [388.0, 1124.0], [387.0, 789.0], [384.0, 953.0], [385.0, 1130.75], [1.0, 16109.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[316.9393333333334, 1193.510666666669]], "isOverall": false, "label": "Login-Aggregated", "isController": false}, {"data": [[2.0, 11.0], [6.0, 12.0], [10.0, 10.0], [34.0, 17.6], [40.0, 24.0], [43.0, 18.5], [44.0, 18.5], [47.0, 21.0], [52.0, 14.0], [84.0, 19.0], [125.0, 14.0], [157.0, 9.0], [156.0, 13.0], [167.0, 18.4], [163.0, 10.0], [160.0, 21.0], [175.0, 22.6], [171.0, 28.0], [169.0, 34.0], [181.0, 21.666666666666668], [180.0, 17.0], [177.0, 21.0], [190.0, 16.0], [189.0, 16.25], [184.0, 11.0], [192.0, 10.0], [206.0, 14.0], [205.0, 13.5], [202.0, 18.0], [215.0, 21.0], [213.0, 14.75], [212.0, 17.5], [211.0, 15.0], [210.0, 12.5], [209.0, 20.0], [208.0, 14.5], [219.0, 13.0], [218.0, 18.8], [216.0, 15.0], [231.0, 16.0], [229.0, 26.0], [228.0, 17.333333333333332], [238.0, 22.0], [235.0, 31.5], [233.0, 18.0], [246.0, 33.0], [242.0, 17.0], [240.0, 22.0], [255.0, 14.0], [254.0, 27.0], [248.0, 44.0], [268.0, 15.75], [258.0, 12.866666666666667], [259.0, 17.2], [260.0, 19.333333333333332], [261.0, 14.0], [263.0, 17.5], [256.0, 20.666666666666668], [262.0, 16.0], [266.0, 18.0], [267.0, 16.666666666666668], [270.0, 15.0], [269.0, 18.0], [272.0, 12.5], [275.0, 26.333333333333332], [278.0, 15.0], [285.0, 17.7], [286.0, 21.666666666666668], [284.0, 18.0], [280.0, 39.0], [279.0, 12.5], [276.0, 15.5], [289.0, 19.428571428571427], [288.0, 15.6], [290.0, 15.125], [291.0, 16.4], [292.0, 15.666666666666666], [293.0, 15.777777777777779], [294.0, 15.75], [295.0, 16.333333333333332], [296.0, 13.666666666666666], [300.0, 15.5], [301.0, 16.875], [302.0, 14.666666666666666], [303.0, 15.5], [299.0, 12.5], [316.0, 17.500000000000004], [305.0, 19.0], [304.0, 20.5], [307.0, 18.0], [306.0, 22.0], [309.0, 14.0], [308.0, 32.0], [310.0, 16.0], [311.0, 16.666666666666664], [313.0, 17.772727272727273], [315.0, 16.839999999999996], [314.0, 16.956521739130437], [317.0, 13.833333333333334], [318.0, 14.11111111111111], [319.0, 15.0], [312.0, 17.0], [322.0, 18.130434782608695], [320.0, 18.333333333333336], [321.0, 16.187499999999996], [323.0, 15.000000000000002], [332.0, 17.956521739130437], [333.0, 17.403508771929825], [335.0, 19.171875000000004], [328.0, 17.09433962264151], [334.0, 16.69642857142857], [324.0, 16.22857142857143], [325.0, 16.166666666666664], [326.0, 17.543859649122805], [327.0, 17.133333333333326], [329.0, 15.672131147540988], [330.0, 15.265625], [331.0, 16.189189189189197], [349.0, 17.0], [338.0, 19.81818181818182], [337.0, 17.96551724137931], [343.0, 31.833333333333332], [342.0, 41.599999999999994], [336.0, 20.328358208955226], [339.0, 17.315789473684212], [348.0, 16.749999999999996], [350.0, 17.0], [351.0, 14.666666666666666], [340.0, 17.555555555555557], [341.0, 20.0], [344.0, 24.22222222222222], [345.0, 21.2], [346.0, 18.363636363636367], [347.0, 20.857142857142858], [364.0, 20.0], [352.0, 14.0], [355.0, 12.0], [357.0, 14.0], [359.0, 15.285714285714286], [360.0, 11.0], [362.0, 12.0], [361.0, 9.0], [363.0, 18.0], [365.0, 14.5], [366.0, 14.5], [367.0, 13.375], [380.0, 10.0], [368.0, 13.0], [369.0, 12.666666666666666], [371.0, 16.0], [370.0, 12.9], [373.0, 17.0], [372.0, 14.0], [374.0, 16.75], [376.0, 11.333333333333334], [379.0, 18.0], [382.0, 17.25], [381.0, 16.125], [383.0, 15.5], [385.0, 13.25], [386.0, 20.0], [384.0, 13.0], [1.0, 17.0]], "isOverall": false, "label": "getUserList", "isController": false}, {"data": [[316.91733333333246, 17.343333333333334]], "isOverall": false, "label": "getUserList-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 388.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 9291.483333333334, "minX": 1.67398002E12, "maxY": 57754.05, "series": [{"data": [[1.67398002E12, 57754.05], [1.67398008E12, 46641.36666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.67398002E12, 11058.516666666666], [1.67398008E12, 9291.483333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67398008E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 17.1873536299766, "minX": 1.67398002E12, "maxY": 1247.3828125000011, "series": [{"data": [[1.67398002E12, 17.700116686114338], [1.67398008E12, 17.587869362363943]], "isOverall": false, "label": "User", "isController": false}, {"data": [[1.67398002E12, 1073.318758815234], [1.67398008E12, 1158.2338811630834]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[1.67398002E12, 1153.4197674418597], [1.67398008E12, 1247.3828125000011]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.67398002E12, 17.1873536299766], [1.67398008E12, 17.54953560371516]], "isOverall": false, "label": "getUserList", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67398008E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 17.008196721311457, "minX": 1.67398002E12, "maxY": 1247.3750000000011, "series": [{"data": [[1.67398002E12, 17.690781796966167], [1.67398008E12, 17.566096423017147]], "isOverall": false, "label": "User", "isController": false}, {"data": [[1.67398002E12, 1073.3004231311706], [1.67398008E12, 1158.2174462705416]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[1.67398002E12, 1153.3883720930237], [1.67398008E12, 1247.3750000000011]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.67398002E12, 17.008196721311457], [1.67398008E12, 17.407120743034078]], "isOverall": false, "label": "getUserList", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67398008E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.67398002E12, "maxY": 84.46046511627891, "series": [{"data": [[1.67398002E12, 0.0], [1.67398008E12, 0.0]], "isOverall": false, "label": "User", "isController": false}, {"data": [[1.67398002E12, 0.0], [1.67398008E12, 0.0]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[1.67398002E12, 84.46046511627891], [1.67398008E12, 23.44218749999999]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.67398002E12, 0.0], [1.67398008E12, 0.0]], "isOverall": false, "label": "getUserList", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67398008E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 8.0, "minX": 1.67398002E12, "maxY": 16109.0, "series": [{"data": [[1.67398002E12, 4452.0], [1.67398008E12, 16109.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.67398002E12, 8.0], [1.67398008E12, 9.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.67398002E12, 1134.9], [1.67398008E12, 1137.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.67398002E12, 2703.3300000000004], [1.67398008E12, 3693.79]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.67398002E12, 33.0], [1.67398008E12, 699.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.67398002E12, 1301.499999999991], [1.67398008E12, 2082.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67398008E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 19.0, "minX": 1.0, "maxY": 2520.5, "series": [{"data": [[539.0, 820.0], [535.0, 708.0], [594.0, 751.0], [587.0, 794.0], [606.0, 756.0], [597.0, 645.0], [36.0, 1598.5], [616.0, 20.0], [653.0, 42.0], [3.0, 20.5], [16.0, 934.0], [1.0, 2520.5], [273.0, 720.0], [338.0, 19.0], [89.0, 1115.0], [511.0, 23.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 653.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 19.0, "minX": 1.0, "maxY": 2520.5, "series": [{"data": [[539.0, 820.0], [535.0, 708.0], [594.0, 751.0], [587.0, 794.0], [606.0, 756.0], [597.0, 645.0], [36.0, 1598.5], [616.0, 20.0], [653.0, 42.0], [3.0, 20.5], [16.0, 934.0], [1.0, 2520.5], [273.0, 720.0], [338.0, 19.0], [89.0, 1115.0], [511.0, 23.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 653.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 40.11666666666667, "minX": 1.67398002E12, "maxY": 59.88333333333333, "series": [{"data": [[1.67398002E12, 59.88333333333333], [1.67398008E12, 40.11666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67398008E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 11.816666666666666, "minX": 1.67398002E12, "maxY": 42.85, "series": [{"data": [[1.67398002E12, 42.85], [1.67398008E12, 32.15]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.67398002E12, 11.816666666666666], [1.67398008E12, 13.183333333333334]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67398008E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 10.666666666666666, "minX": 1.67398002E12, "maxY": 14.333333333333334, "series": [{"data": [[1.67398002E12, 14.283333333333333], [1.67398008E12, 10.716666666666667]], "isOverall": false, "label": "User-success", "isController": false}, {"data": [[1.67398002E12, 14.233333333333333], [1.67398008E12, 10.766666666666667]], "isOverall": false, "label": "getUserList-success", "isController": false}, {"data": [[1.67398002E12, 11.816666666666666], [1.67398008E12, 13.183333333333334]], "isOverall": false, "label": "CreateUser-success", "isController": false}, {"data": [[1.67398002E12, 14.333333333333334], [1.67398008E12, 10.666666666666666]], "isOverall": false, "label": "Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67398008E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 45.333333333333336, "minX": 1.67398002E12, "maxY": 54.666666666666664, "series": [{"data": [[1.67398002E12, 54.666666666666664], [1.67398008E12, 45.333333333333336]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67398008E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

