/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 8.0, "minX": 0.0, "maxY": 12162.0, "series": [{"data": [[0.0, 9.0], [0.1, 9.0], [0.2, 9.0], [0.3, 9.0], [0.4, 9.0], [0.5, 10.0], [0.6, 10.0], [0.7, 10.0], [0.8, 10.0], [0.9, 10.0], [1.0, 10.0], [1.1, 10.0], [1.2, 10.0], [1.3, 10.0], [1.4, 10.0], [1.5, 10.0], [1.6, 10.0], [1.7, 10.0], [1.8, 10.0], [1.9, 10.0], [2.0, 10.0], [2.1, 10.0], [2.2, 10.0], [2.3, 10.0], [2.4, 10.0], [2.5, 10.0], [2.6, 10.0], [2.7, 10.0], [2.8, 10.0], [2.9, 11.0], [3.0, 11.0], [3.1, 11.0], [3.2, 11.0], [3.3, 11.0], [3.4, 11.0], [3.5, 11.0], [3.6, 11.0], [3.7, 11.0], [3.8, 11.0], [3.9, 11.0], [4.0, 11.0], [4.1, 11.0], [4.2, 11.0], [4.3, 11.0], [4.4, 11.0], [4.5, 11.0], [4.6, 11.0], [4.7, 11.0], [4.8, 11.0], [4.9, 11.0], [5.0, 11.0], [5.1, 11.0], [5.2, 11.0], [5.3, 11.0], [5.4, 11.0], [5.5, 11.0], [5.6, 11.0], [5.7, 11.0], [5.8, 11.0], [5.9, 11.0], [6.0, 11.0], [6.1, 11.0], [6.2, 11.0], [6.3, 11.0], [6.4, 11.0], [6.5, 11.0], [6.6, 11.0], [6.7, 11.0], [6.8, 11.0], [6.9, 11.0], [7.0, 11.0], [7.1, 11.0], [7.2, 11.0], [7.3, 11.0], [7.4, 11.0], [7.5, 11.0], [7.6, 11.0], [7.7, 11.0], [7.8, 11.0], [7.9, 11.0], [8.0, 11.0], [8.1, 11.0], [8.2, 11.0], [8.3, 12.0], [8.4, 12.0], [8.5, 12.0], [8.6, 12.0], [8.7, 12.0], [8.8, 12.0], [8.9, 12.0], [9.0, 12.0], [9.1, 12.0], [9.2, 12.0], [9.3, 12.0], [9.4, 12.0], [9.5, 12.0], [9.6, 12.0], [9.7, 12.0], [9.8, 12.0], [9.9, 12.0], [10.0, 12.0], [10.1, 12.0], [10.2, 12.0], [10.3, 12.0], [10.4, 12.0], [10.5, 12.0], [10.6, 12.0], [10.7, 12.0], [10.8, 12.0], [10.9, 12.0], [11.0, 12.0], [11.1, 12.0], [11.2, 12.0], [11.3, 12.0], [11.4, 12.0], [11.5, 12.0], [11.6, 12.0], [11.7, 12.0], [11.8, 12.0], [11.9, 12.0], [12.0, 12.0], [12.1, 12.0], [12.2, 12.0], [12.3, 12.0], [12.4, 12.0], [12.5, 12.0], [12.6, 12.0], [12.7, 12.0], [12.8, 12.0], [12.9, 12.0], [13.0, 12.0], [13.1, 12.0], [13.2, 12.0], [13.3, 12.0], [13.4, 12.0], [13.5, 12.0], [13.6, 12.0], [13.7, 12.0], [13.8, 12.0], [13.9, 12.0], [14.0, 12.0], [14.1, 12.0], [14.2, 12.0], [14.3, 12.0], [14.4, 12.0], [14.5, 12.0], [14.6, 12.0], [14.7, 12.0], [14.8, 12.0], [14.9, 12.0], [15.0, 12.0], [15.1, 12.0], [15.2, 12.0], [15.3, 12.0], [15.4, 12.0], [15.5, 12.0], [15.6, 12.0], [15.7, 12.0], [15.8, 12.0], [15.9, 12.0], [16.0, 12.0], [16.1, 13.0], [16.2, 13.0], [16.3, 13.0], [16.4, 13.0], [16.5, 13.0], [16.6, 13.0], [16.7, 13.0], [16.8, 13.0], [16.9, 13.0], [17.0, 13.0], [17.1, 13.0], [17.2, 13.0], [17.3, 13.0], [17.4, 13.0], [17.5, 13.0], [17.6, 13.0], [17.7, 13.0], [17.8, 13.0], [17.9, 13.0], [18.0, 13.0], [18.1, 13.0], [18.2, 13.0], [18.3, 13.0], [18.4, 13.0], [18.5, 13.0], [18.6, 13.0], [18.7, 13.0], [18.8, 13.0], [18.9, 13.0], [19.0, 13.0], [19.1, 13.0], [19.2, 13.0], [19.3, 13.0], [19.4, 13.0], [19.5, 13.0], [19.6, 13.0], [19.7, 13.0], [19.8, 13.0], [19.9, 13.0], [20.0, 13.0], [20.1, 13.0], [20.2, 13.0], [20.3, 13.0], [20.4, 13.0], [20.5, 13.0], [20.6, 13.0], [20.7, 13.0], [20.8, 13.0], [20.9, 13.0], [21.0, 13.0], [21.1, 13.0], [21.2, 13.0], [21.3, 13.0], [21.4, 13.0], [21.5, 13.0], [21.6, 13.0], [21.7, 13.0], [21.8, 13.0], [21.9, 13.0], [22.0, 13.0], [22.1, 13.0], [22.2, 13.0], [22.3, 13.0], [22.4, 13.0], [22.5, 13.0], [22.6, 13.0], [22.7, 13.0], [22.8, 13.0], [22.9, 13.0], [23.0, 13.0], [23.1, 13.0], [23.2, 13.0], [23.3, 13.0], [23.4, 13.0], [23.5, 13.0], [23.6, 13.0], [23.7, 13.0], [23.8, 13.0], [23.9, 13.0], [24.0, 13.0], [24.1, 13.0], [24.2, 13.0], [24.3, 13.0], [24.4, 13.0], [24.5, 13.0], [24.6, 13.0], [24.7, 13.0], [24.8, 13.0], [24.9, 13.0], [25.0, 13.0], [25.1, 13.0], [25.2, 13.0], [25.3, 14.0], [25.4, 14.0], [25.5, 14.0], [25.6, 14.0], [25.7, 14.0], [25.8, 14.0], [25.9, 14.0], [26.0, 14.0], [26.1, 14.0], [26.2, 14.0], [26.3, 14.0], [26.4, 14.0], [26.5, 14.0], [26.6, 14.0], [26.7, 14.0], [26.8, 14.0], [26.9, 14.0], [27.0, 14.0], [27.1, 14.0], [27.2, 14.0], [27.3, 14.0], [27.4, 14.0], [27.5, 14.0], [27.6, 14.0], [27.7, 14.0], [27.8, 14.0], [27.9, 14.0], [28.0, 14.0], [28.1, 14.0], [28.2, 14.0], [28.3, 14.0], [28.4, 14.0], [28.5, 14.0], [28.6, 14.0], [28.7, 14.0], [28.8, 14.0], [28.9, 14.0], [29.0, 14.0], [29.1, 14.0], [29.2, 14.0], [29.3, 14.0], [29.4, 14.0], [29.5, 14.0], [29.6, 14.0], [29.7, 14.0], [29.8, 14.0], [29.9, 14.0], [30.0, 14.0], [30.1, 14.0], [30.2, 14.0], [30.3, 14.0], [30.4, 14.0], [30.5, 14.0], [30.6, 14.0], [30.7, 14.0], [30.8, 14.0], [30.9, 14.0], [31.0, 14.0], [31.1, 14.0], [31.2, 14.0], [31.3, 14.0], [31.4, 14.0], [31.5, 14.0], [31.6, 14.0], [31.7, 14.0], [31.8, 14.0], [31.9, 14.0], [32.0, 14.0], [32.1, 14.0], [32.2, 14.0], [32.3, 14.0], [32.4, 14.0], [32.5, 14.0], [32.6, 14.0], [32.7, 14.0], [32.8, 14.0], [32.9, 14.0], [33.0, 14.0], [33.1, 14.0], [33.2, 14.0], [33.3, 14.0], [33.4, 14.0], [33.5, 14.0], [33.6, 14.0], [33.7, 14.0], [33.8, 14.0], [33.9, 14.0], [34.0, 14.0], [34.1, 14.0], [34.2, 14.0], [34.3, 14.0], [34.4, 14.0], [34.5, 14.0], [34.6, 14.0], [34.7, 14.0], [34.8, 14.0], [34.9, 14.0], [35.0, 14.0], [35.1, 14.0], [35.2, 14.0], [35.3, 14.0], [35.4, 14.0], [35.5, 14.0], [35.6, 14.0], [35.7, 14.0], [35.8, 14.0], [35.9, 15.0], [36.0, 15.0], [36.1, 15.0], [36.2, 15.0], [36.3, 15.0], [36.4, 15.0], [36.5, 15.0], [36.6, 15.0], [36.7, 15.0], [36.8, 15.0], [36.9, 15.0], [37.0, 15.0], [37.1, 15.0], [37.2, 15.0], [37.3, 15.0], [37.4, 15.0], [37.5, 15.0], [37.6, 15.0], [37.7, 15.0], [37.8, 15.0], [37.9, 15.0], [38.0, 15.0], [38.1, 15.0], [38.2, 15.0], [38.3, 15.0], [38.4, 15.0], [38.5, 15.0], [38.6, 15.0], [38.7, 15.0], [38.8, 15.0], [38.9, 15.0], [39.0, 15.0], [39.1, 15.0], [39.2, 15.0], [39.3, 15.0], [39.4, 15.0], [39.5, 15.0], [39.6, 15.0], [39.7, 15.0], [39.8, 15.0], [39.9, 15.0], [40.0, 15.0], [40.1, 15.0], [40.2, 15.0], [40.3, 15.0], [40.4, 15.0], [40.5, 15.0], [40.6, 15.0], [40.7, 15.0], [40.8, 15.0], [40.9, 15.0], [41.0, 15.0], [41.1, 15.0], [41.2, 15.0], [41.3, 15.0], [41.4, 15.0], [41.5, 15.0], [41.6, 15.0], [41.7, 15.0], [41.8, 15.0], [41.9, 15.0], [42.0, 15.0], [42.1, 15.0], [42.2, 15.0], [42.3, 15.0], [42.4, 15.0], [42.5, 15.0], [42.6, 15.0], [42.7, 15.0], [42.8, 15.0], [42.9, 15.0], [43.0, 15.0], [43.1, 15.0], [43.2, 15.0], [43.3, 15.0], [43.4, 15.0], [43.5, 15.0], [43.6, 15.0], [43.7, 15.0], [43.8, 15.0], [43.9, 15.0], [44.0, 15.0], [44.1, 15.0], [44.2, 15.0], [44.3, 15.0], [44.4, 15.0], [44.5, 15.0], [44.6, 15.0], [44.7, 15.0], [44.8, 15.0], [44.9, 15.0], [45.0, 15.0], [45.1, 15.0], [45.2, 15.0], [45.3, 15.0], [45.4, 15.0], [45.5, 15.0], [45.6, 15.0], [45.7, 15.0], [45.8, 15.0], [45.9, 15.0], [46.0, 15.0], [46.1, 15.0], [46.2, 16.0], [46.3, 16.0], [46.4, 16.0], [46.5, 16.0], [46.6, 16.0], [46.7, 16.0], [46.8, 16.0], [46.9, 16.0], [47.0, 16.0], [47.1, 16.0], [47.2, 16.0], [47.3, 16.0], [47.4, 16.0], [47.5, 16.0], [47.6, 16.0], [47.7, 16.0], [47.8, 16.0], [47.9, 16.0], [48.0, 16.0], [48.1, 16.0], [48.2, 16.0], [48.3, 16.0], [48.4, 16.0], [48.5, 16.0], [48.6, 16.0], [48.7, 16.0], [48.8, 16.0], [48.9, 16.0], [49.0, 16.0], [49.1, 16.0], [49.2, 16.0], [49.3, 16.0], [49.4, 16.0], [49.5, 16.0], [49.6, 16.0], [49.7, 16.0], [49.8, 16.0], [49.9, 16.0], [50.0, 16.0], [50.1, 16.0], [50.2, 16.0], [50.3, 16.0], [50.4, 16.0], [50.5, 16.0], [50.6, 16.0], [50.7, 16.0], [50.8, 16.0], [50.9, 16.0], [51.0, 16.0], [51.1, 16.0], [51.2, 16.0], [51.3, 16.0], [51.4, 16.0], [51.5, 16.0], [51.6, 16.0], [51.7, 16.0], [51.8, 16.0], [51.9, 16.0], [52.0, 16.0], [52.1, 16.0], [52.2, 16.0], [52.3, 16.0], [52.4, 16.0], [52.5, 16.0], [52.6, 16.0], [52.7, 16.0], [52.8, 16.0], [52.9, 16.0], [53.0, 16.0], [53.1, 16.0], [53.2, 16.0], [53.3, 16.0], [53.4, 16.0], [53.5, 16.0], [53.6, 16.0], [53.7, 16.0], [53.8, 16.0], [53.9, 16.0], [54.0, 16.0], [54.1, 16.0], [54.2, 16.0], [54.3, 16.0], [54.4, 16.0], [54.5, 16.0], [54.6, 16.0], [54.7, 16.0], [54.8, 16.0], [54.9, 16.0], [55.0, 16.0], [55.1, 16.0], [55.2, 16.0], [55.3, 16.0], [55.4, 16.0], [55.5, 17.0], [55.6, 17.0], [55.7, 17.0], [55.8, 17.0], [55.9, 17.0], [56.0, 17.0], [56.1, 17.0], [56.2, 17.0], [56.3, 17.0], [56.4, 17.0], [56.5, 17.0], [56.6, 17.0], [56.7, 17.0], [56.8, 17.0], [56.9, 17.0], [57.0, 17.0], [57.1, 17.0], [57.2, 17.0], [57.3, 17.0], [57.4, 17.0], [57.5, 17.0], [57.6, 17.0], [57.7, 17.0], [57.8, 17.0], [57.9, 17.0], [58.0, 17.0], [58.1, 17.0], [58.2, 17.0], [58.3, 17.0], [58.4, 17.0], [58.5, 17.0], [58.6, 17.0], [58.7, 17.0], [58.8, 17.0], [58.9, 17.0], [59.0, 17.0], [59.1, 17.0], [59.2, 17.0], [59.3, 17.0], [59.4, 17.0], [59.5, 17.0], [59.6, 17.0], [59.7, 17.0], [59.8, 17.0], [59.9, 17.0], [60.0, 17.0], [60.1, 17.0], [60.2, 17.0], [60.3, 17.0], [60.4, 17.0], [60.5, 17.0], [60.6, 17.0], [60.7, 17.0], [60.8, 17.0], [60.9, 17.0], [61.0, 17.0], [61.1, 17.0], [61.2, 17.0], [61.3, 17.0], [61.4, 17.0], [61.5, 17.0], [61.6, 17.0], [61.7, 17.0], [61.8, 17.0], [61.9, 17.0], [62.0, 17.0], [62.1, 17.0], [62.2, 17.0], [62.3, 17.0], [62.4, 17.0], [62.5, 17.0], [62.6, 17.0], [62.7, 17.0], [62.8, 17.0], [62.9, 17.0], [63.0, 17.0], [63.1, 17.0], [63.2, 18.0], [63.3, 18.0], [63.4, 18.0], [63.5, 18.0], [63.6, 18.0], [63.7, 18.0], [63.8, 18.0], [63.9, 18.0], [64.0, 18.0], [64.1, 18.0], [64.2, 18.0], [64.3, 18.0], [64.4, 18.0], [64.5, 18.0], [64.6, 18.0], [64.7, 18.0], [64.8, 18.0], [64.9, 18.0], [65.0, 18.0], [65.1, 18.0], [65.2, 18.0], [65.3, 18.0], [65.4, 18.0], [65.5, 18.0], [65.6, 18.0], [65.7, 18.0], [65.8, 18.0], [65.9, 18.0], [66.0, 18.0], [66.1, 18.0], [66.2, 18.0], [66.3, 18.0], [66.4, 18.0], [66.5, 18.0], [66.6, 18.0], [66.7, 18.0], [66.8, 18.0], [66.9, 18.0], [67.0, 18.0], [67.1, 18.0], [67.2, 18.0], [67.3, 18.0], [67.4, 18.0], [67.5, 18.0], [67.6, 18.0], [67.7, 18.0], [67.8, 18.0], [67.9, 18.0], [68.0, 18.0], [68.1, 18.0], [68.2, 18.0], [68.3, 18.0], [68.4, 18.0], [68.5, 18.0], [68.6, 18.0], [68.7, 18.0], [68.8, 18.0], [68.9, 18.0], [69.0, 18.0], [69.1, 18.0], [69.2, 18.0], [69.3, 18.0], [69.4, 18.0], [69.5, 18.0], [69.6, 19.0], [69.7, 19.0], [69.8, 19.0], [69.9, 19.0], [70.0, 19.0], [70.1, 19.0], [70.2, 19.0], [70.3, 19.0], [70.4, 19.0], [70.5, 19.0], [70.6, 19.0], [70.7, 19.0], [70.8, 19.0], [70.9, 19.0], [71.0, 19.0], [71.1, 19.0], [71.2, 19.0], [71.3, 19.0], [71.4, 19.0], [71.5, 19.0], [71.6, 19.0], [71.7, 19.0], [71.8, 19.0], [71.9, 19.0], [72.0, 19.0], [72.1, 19.0], [72.2, 19.0], [72.3, 19.0], [72.4, 19.0], [72.5, 19.0], [72.6, 19.0], [72.7, 19.0], [72.8, 19.0], [72.9, 19.0], [73.0, 19.0], [73.1, 19.0], [73.2, 19.0], [73.3, 19.0], [73.4, 19.0], [73.5, 19.0], [73.6, 19.0], [73.7, 19.0], [73.8, 19.0], [73.9, 19.0], [74.0, 19.0], [74.1, 19.0], [74.2, 19.0], [74.3, 19.0], [74.4, 19.0], [74.5, 19.0], [74.6, 19.0], [74.7, 19.0], [74.8, 19.0], [74.9, 20.0], [75.0, 20.0], [75.1, 20.0], [75.2, 20.0], [75.3, 20.0], [75.4, 20.0], [75.5, 20.0], [75.6, 20.0], [75.7, 20.0], [75.8, 20.0], [75.9, 20.0], [76.0, 20.0], [76.1, 20.0], [76.2, 20.0], [76.3, 20.0], [76.4, 20.0], [76.5, 20.0], [76.6, 20.0], [76.7, 20.0], [76.8, 20.0], [76.9, 20.0], [77.0, 20.0], [77.1, 20.0], [77.2, 20.0], [77.3, 20.0], [77.4, 20.0], [77.5, 20.0], [77.6, 20.0], [77.7, 20.0], [77.8, 20.0], [77.9, 20.0], [78.0, 20.0], [78.1, 20.0], [78.2, 20.0], [78.3, 20.0], [78.4, 20.0], [78.5, 20.0], [78.6, 20.0], [78.7, 20.0], [78.8, 20.0], [78.9, 20.0], [79.0, 20.0], [79.1, 21.0], [79.2, 21.0], [79.3, 21.0], [79.4, 21.0], [79.5, 21.0], [79.6, 21.0], [79.7, 21.0], [79.8, 21.0], [79.9, 21.0], [80.0, 21.0], [80.1, 21.0], [80.2, 21.0], [80.3, 21.0], [80.4, 21.0], [80.5, 21.0], [80.6, 21.0], [80.7, 21.0], [80.8, 21.0], [80.9, 21.0], [81.0, 21.0], [81.1, 21.0], [81.2, 21.0], [81.3, 21.0], [81.4, 21.0], [81.5, 21.0], [81.6, 21.0], [81.7, 21.0], [81.8, 21.0], [81.9, 22.0], [82.0, 22.0], [82.1, 22.0], [82.2, 22.0], [82.3, 22.0], [82.4, 22.0], [82.5, 22.0], [82.6, 22.0], [82.7, 22.0], [82.8, 22.0], [82.9, 22.0], [83.0, 22.0], [83.1, 22.0], [83.2, 22.0], [83.3, 22.0], [83.4, 22.0], [83.5, 22.0], [83.6, 22.0], [83.7, 22.0], [83.8, 22.0], [83.9, 22.0], [84.0, 22.0], [84.1, 22.0], [84.2, 22.0], [84.3, 22.0], [84.4, 22.0], [84.5, 22.0], [84.6, 22.0], [84.7, 23.0], [84.8, 23.0], [84.9, 23.0], [85.0, 23.0], [85.1, 23.0], [85.2, 23.0], [85.3, 23.0], [85.4, 23.0], [85.5, 23.0], [85.6, 23.0], [85.7, 23.0], [85.8, 23.0], [85.9, 23.0], [86.0, 23.0], [86.1, 23.0], [86.2, 23.0], [86.3, 23.0], [86.4, 23.0], [86.5, 23.0], [86.6, 23.0], [86.7, 24.0], [86.8, 24.0], [86.9, 24.0], [87.0, 24.0], [87.1, 24.0], [87.2, 24.0], [87.3, 24.0], [87.4, 24.0], [87.5, 24.0], [87.6, 24.0], [87.7, 24.0], [87.8, 24.0], [87.9, 24.0], [88.0, 24.0], [88.1, 24.0], [88.2, 24.0], [88.3, 25.0], [88.4, 25.0], [88.5, 25.0], [88.6, 25.0], [88.7, 25.0], [88.8, 25.0], [88.9, 25.0], [89.0, 25.0], [89.1, 25.0], [89.2, 25.0], [89.3, 25.0], [89.4, 25.0], [89.5, 25.0], [89.6, 26.0], [89.7, 26.0], [89.8, 26.0], [89.9, 26.0], [90.0, 26.0], [90.1, 26.0], [90.2, 26.0], [90.3, 26.0], [90.4, 26.0], [90.5, 26.0], [90.6, 26.0], [90.7, 26.0], [90.8, 26.0], [90.9, 26.0], [91.0, 26.0], [91.1, 26.0], [91.2, 26.0], [91.3, 26.0], [91.4, 27.0], [91.5, 27.0], [91.6, 27.0], [91.7, 27.0], [91.8, 27.0], [91.9, 27.0], [92.0, 27.0], [92.1, 27.0], [92.2, 27.0], [92.3, 28.0], [92.4, 28.0], [92.5, 28.0], [92.6, 28.0], [92.7, 28.0], [92.8, 28.0], [92.9, 28.0], [93.0, 28.0], [93.1, 28.0], [93.2, 29.0], [93.3, 29.0], [93.4, 29.0], [93.5, 29.0], [93.6, 29.0], [93.7, 29.0], [93.8, 29.0], [93.9, 29.0], [94.0, 29.0], [94.1, 30.0], [94.2, 30.0], [94.3, 30.0], [94.4, 30.0], [94.5, 30.0], [94.6, 30.0], [94.7, 30.0], [94.8, 30.0], [94.9, 30.0], [95.0, 31.0], [95.1, 31.0], [95.2, 31.0], [95.3, 31.0], [95.4, 31.0], [95.5, 31.0], [95.6, 32.0], [95.7, 32.0], [95.8, 32.0], [95.9, 32.0], [96.0, 32.0], [96.1, 33.0], [96.2, 33.0], [96.3, 33.0], [96.4, 34.0], [96.5, 34.0], [96.6, 35.0], [96.7, 35.0], [96.8, 35.0], [96.9, 35.0], [97.0, 36.0], [97.1, 36.0], [97.2, 37.0], [97.3, 37.0], [97.4, 39.0], [97.5, 39.0], [97.6, 39.0], [97.7, 40.0], [97.8, 40.0], [97.9, 40.0], [98.0, 41.0], [98.1, 41.0], [98.2, 42.0], [98.3, 43.0], [98.4, 44.0], [98.5, 44.0], [98.6, 46.0], [98.7, 46.0], [98.8, 50.0], [98.9, 51.0], [99.0, 53.0], [99.1, 56.0], [99.2, 58.0], [99.3, 61.0], [99.4, 62.0], [99.5, 63.0], [99.6, 65.0], [99.7, 66.0], [99.8, 68.0], [99.9, 89.0]], "isOverall": false, "label": "User", "isController": false}, {"data": [[0.0, 592.0], [0.1, 608.0], [0.2, 609.0], [0.3, 611.0], [0.4, 612.0], [0.5, 613.0], [0.6, 613.0], [0.7, 614.0], [0.8, 616.0], [0.9, 617.0], [1.0, 618.0], [1.1, 618.0], [1.2, 619.0], [1.3, 621.0], [1.4, 621.0], [1.5, 622.0], [1.6, 623.0], [1.7, 623.0], [1.8, 624.0], [1.9, 625.0], [2.0, 625.0], [2.1, 626.0], [2.2, 626.0], [2.3, 626.0], [2.4, 627.0], [2.5, 628.0], [2.6, 629.0], [2.7, 629.0], [2.8, 630.0], [2.9, 631.0], [3.0, 632.0], [3.1, 634.0], [3.2, 635.0], [3.3, 636.0], [3.4, 637.0], [3.5, 637.0], [3.6, 638.0], [3.7, 639.0], [3.8, 640.0], [3.9, 641.0], [4.0, 642.0], [4.1, 645.0], [4.2, 645.0], [4.3, 646.0], [4.4, 646.0], [4.5, 649.0], [4.6, 649.0], [4.7, 650.0], [4.8, 651.0], [4.9, 652.0], [5.0, 652.0], [5.1, 654.0], [5.2, 656.0], [5.3, 659.0], [5.4, 659.0], [5.5, 660.0], [5.6, 661.0], [5.7, 663.0], [5.8, 664.0], [5.9, 666.0], [6.0, 668.0], [6.1, 671.0], [6.2, 674.0], [6.3, 674.0], [6.4, 675.0], [6.5, 676.0], [6.6, 678.0], [6.7, 679.0], [6.8, 680.0], [6.9, 681.0], [7.0, 683.0], [7.1, 685.0], [7.2, 685.0], [7.3, 685.0], [7.4, 686.0], [7.5, 686.0], [7.6, 688.0], [7.7, 688.0], [7.8, 688.0], [7.9, 689.0], [8.0, 689.0], [8.1, 689.0], [8.2, 689.0], [8.3, 690.0], [8.4, 690.0], [8.5, 690.0], [8.6, 691.0], [8.7, 691.0], [8.8, 691.0], [8.9, 692.0], [9.0, 692.0], [9.1, 693.0], [9.2, 693.0], [9.3, 693.0], [9.4, 693.0], [9.5, 693.0], [9.6, 694.0], [9.7, 694.0], [9.8, 694.0], [9.9, 695.0], [10.0, 695.0], [10.1, 696.0], [10.2, 697.0], [10.3, 697.0], [10.4, 697.0], [10.5, 697.0], [10.6, 698.0], [10.7, 698.0], [10.8, 698.0], [10.9, 699.0], [11.0, 699.0], [11.1, 700.0], [11.2, 700.0], [11.3, 700.0], [11.4, 700.0], [11.5, 700.0], [11.6, 701.0], [11.7, 701.0], [11.8, 701.0], [11.9, 702.0], [12.0, 702.0], [12.1, 702.0], [12.2, 702.0], [12.3, 702.0], [12.4, 702.0], [12.5, 702.0], [12.6, 703.0], [12.7, 703.0], [12.8, 703.0], [12.9, 703.0], [13.0, 704.0], [13.1, 704.0], [13.2, 704.0], [13.3, 705.0], [13.4, 705.0], [13.5, 706.0], [13.6, 707.0], [13.7, 708.0], [13.8, 708.0], [13.9, 708.0], [14.0, 708.0], [14.1, 709.0], [14.2, 709.0], [14.3, 709.0], [14.4, 709.0], [14.5, 710.0], [14.6, 710.0], [14.7, 710.0], [14.8, 711.0], [14.9, 711.0], [15.0, 712.0], [15.1, 712.0], [15.2, 713.0], [15.3, 713.0], [15.4, 713.0], [15.5, 714.0], [15.6, 714.0], [15.7, 714.0], [15.8, 714.0], [15.9, 714.0], [16.0, 715.0], [16.1, 715.0], [16.2, 716.0], [16.3, 716.0], [16.4, 716.0], [16.5, 716.0], [16.6, 717.0], [16.7, 717.0], [16.8, 717.0], [16.9, 717.0], [17.0, 718.0], [17.1, 718.0], [17.2, 718.0], [17.3, 719.0], [17.4, 719.0], [17.5, 720.0], [17.6, 720.0], [17.7, 720.0], [17.8, 720.0], [17.9, 720.0], [18.0, 721.0], [18.1, 721.0], [18.2, 721.0], [18.3, 722.0], [18.4, 722.0], [18.5, 722.0], [18.6, 723.0], [18.7, 723.0], [18.8, 723.0], [18.9, 723.0], [19.0, 724.0], [19.1, 724.0], [19.2, 724.0], [19.3, 725.0], [19.4, 725.0], [19.5, 725.0], [19.6, 726.0], [19.7, 727.0], [19.8, 727.0], [19.9, 727.0], [20.0, 727.0], [20.1, 728.0], [20.2, 728.0], [20.3, 729.0], [20.4, 729.0], [20.5, 729.0], [20.6, 729.0], [20.7, 730.0], [20.8, 730.0], [20.9, 730.0], [21.0, 731.0], [21.1, 732.0], [21.2, 733.0], [21.3, 733.0], [21.4, 733.0], [21.5, 734.0], [21.6, 734.0], [21.7, 734.0], [21.8, 735.0], [21.9, 735.0], [22.0, 735.0], [22.1, 736.0], [22.2, 736.0], [22.3, 736.0], [22.4, 736.0], [22.5, 736.0], [22.6, 737.0], [22.7, 738.0], [22.8, 738.0], [22.9, 739.0], [23.0, 739.0], [23.1, 740.0], [23.2, 740.0], [23.3, 740.0], [23.4, 740.0], [23.5, 740.0], [23.6, 741.0], [23.7, 741.0], [23.8, 741.0], [23.9, 742.0], [24.0, 742.0], [24.1, 742.0], [24.2, 742.0], [24.3, 742.0], [24.4, 742.0], [24.5, 743.0], [24.6, 743.0], [24.7, 743.0], [24.8, 744.0], [24.9, 744.0], [25.0, 744.0], [25.1, 745.0], [25.2, 745.0], [25.3, 745.0], [25.4, 746.0], [25.5, 747.0], [25.6, 747.0], [25.7, 747.0], [25.8, 747.0], [25.9, 747.0], [26.0, 748.0], [26.1, 748.0], [26.2, 748.0], [26.3, 749.0], [26.4, 749.0], [26.5, 749.0], [26.6, 749.0], [26.7, 750.0], [26.8, 750.0], [26.9, 750.0], [27.0, 751.0], [27.1, 751.0], [27.2, 751.0], [27.3, 751.0], [27.4, 752.0], [27.5, 752.0], [27.6, 752.0], [27.7, 752.0], [27.8, 752.0], [27.9, 752.0], [28.0, 753.0], [28.1, 753.0], [28.2, 754.0], [28.3, 754.0], [28.4, 754.0], [28.5, 754.0], [28.6, 755.0], [28.7, 755.0], [28.8, 755.0], [28.9, 755.0], [29.0, 756.0], [29.1, 756.0], [29.2, 756.0], [29.3, 756.0], [29.4, 756.0], [29.5, 757.0], [29.6, 757.0], [29.7, 757.0], [29.8, 757.0], [29.9, 757.0], [30.0, 757.0], [30.1, 758.0], [30.2, 758.0], [30.3, 759.0], [30.4, 759.0], [30.5, 759.0], [30.6, 759.0], [30.7, 760.0], [30.8, 760.0], [30.9, 760.0], [31.0, 760.0], [31.1, 760.0], [31.2, 760.0], [31.3, 760.0], [31.4, 761.0], [31.5, 761.0], [31.6, 761.0], [31.7, 762.0], [31.8, 762.0], [31.9, 762.0], [32.0, 763.0], [32.1, 763.0], [32.2, 764.0], [32.3, 764.0], [32.4, 764.0], [32.5, 765.0], [32.6, 765.0], [32.7, 765.0], [32.8, 765.0], [32.9, 767.0], [33.0, 767.0], [33.1, 767.0], [33.2, 768.0], [33.3, 769.0], [33.4, 769.0], [33.5, 771.0], [33.6, 772.0], [33.7, 774.0], [33.8, 774.0], [33.9, 777.0], [34.0, 782.0], [34.1, 786.0], [34.2, 789.0], [34.3, 798.0], [34.4, 802.0], [34.5, 809.0], [34.6, 812.0], [34.7, 814.0], [34.8, 1047.0], [34.9, 1049.0], [35.0, 1050.0], [35.1, 1051.0], [35.2, 1052.0], [35.3, 1052.0], [35.4, 1053.0], [35.5, 1054.0], [35.6, 1054.0], [35.7, 1054.0], [35.8, 1055.0], [35.9, 1055.0], [36.0, 1056.0], [36.1, 1056.0], [36.2, 1057.0], [36.3, 1057.0], [36.4, 1057.0], [36.5, 1058.0], [36.6, 1058.0], [36.7, 1059.0], [36.8, 1059.0], [36.9, 1059.0], [37.0, 1060.0], [37.1, 1060.0], [37.2, 1060.0], [37.3, 1061.0], [37.4, 1061.0], [37.5, 1061.0], [37.6, 1062.0], [37.7, 1062.0], [37.8, 1062.0], [37.9, 1063.0], [38.0, 1063.0], [38.1, 1063.0], [38.2, 1064.0], [38.3, 1064.0], [38.4, 1064.0], [38.5, 1065.0], [38.6, 1065.0], [38.7, 1065.0], [38.8, 1065.0], [38.9, 1065.0], [39.0, 1066.0], [39.1, 1067.0], [39.2, 1067.0], [39.3, 1067.0], [39.4, 1067.0], [39.5, 1068.0], [39.6, 1069.0], [39.7, 1069.0], [39.8, 1069.0], [39.9, 1069.0], [40.0, 1070.0], [40.1, 1070.0], [40.2, 1070.0], [40.3, 1071.0], [40.4, 1072.0], [40.5, 1072.0], [40.6, 1072.0], [40.7, 1072.0], [40.8, 1072.0], [40.9, 1073.0], [41.0, 1073.0], [41.1, 1073.0], [41.2, 1073.0], [41.3, 1073.0], [41.4, 1074.0], [41.5, 1074.0], [41.6, 1074.0], [41.7, 1074.0], [41.8, 1075.0], [41.9, 1075.0], [42.0, 1075.0], [42.1, 1075.0], [42.2, 1076.0], [42.3, 1076.0], [42.4, 1076.0], [42.5, 1076.0], [42.6, 1076.0], [42.7, 1077.0], [42.8, 1077.0], [42.9, 1077.0], [43.0, 1078.0], [43.1, 1078.0], [43.2, 1078.0], [43.3, 1078.0], [43.4, 1078.0], [43.5, 1079.0], [43.6, 1079.0], [43.7, 1079.0], [43.8, 1079.0], [43.9, 1079.0], [44.0, 1080.0], [44.1, 1080.0], [44.2, 1080.0], [44.3, 1080.0], [44.4, 1080.0], [44.5, 1081.0], [44.6, 1081.0], [44.7, 1081.0], [44.8, 1081.0], [44.9, 1081.0], [45.0, 1082.0], [45.1, 1082.0], [45.2, 1082.0], [45.3, 1082.0], [45.4, 1082.0], [45.5, 1083.0], [45.6, 1083.0], [45.7, 1083.0], [45.8, 1083.0], [45.9, 1083.0], [46.0, 1083.0], [46.1, 1083.0], [46.2, 1084.0], [46.3, 1084.0], [46.4, 1084.0], [46.5, 1084.0], [46.6, 1084.0], [46.7, 1084.0], [46.8, 1084.0], [46.9, 1085.0], [47.0, 1085.0], [47.1, 1085.0], [47.2, 1085.0], [47.3, 1085.0], [47.4, 1085.0], [47.5, 1085.0], [47.6, 1086.0], [47.7, 1086.0], [47.8, 1086.0], [47.9, 1086.0], [48.0, 1086.0], [48.1, 1086.0], [48.2, 1086.0], [48.3, 1086.0], [48.4, 1086.0], [48.5, 1086.0], [48.6, 1086.0], [48.7, 1086.0], [48.8, 1087.0], [48.9, 1087.0], [49.0, 1087.0], [49.1, 1087.0], [49.2, 1087.0], [49.3, 1087.0], [49.4, 1087.0], [49.5, 1087.0], [49.6, 1087.0], [49.7, 1087.0], [49.8, 1087.0], [49.9, 1088.0], [50.0, 1088.0], [50.1, 1088.0], [50.2, 1088.0], [50.3, 1088.0], [50.4, 1088.0], [50.5, 1088.0], [50.6, 1088.0], [50.7, 1089.0], [50.8, 1089.0], [50.9, 1089.0], [51.0, 1089.0], [51.1, 1089.0], [51.2, 1089.0], [51.3, 1089.0], [51.4, 1089.0], [51.5, 1089.0], [51.6, 1089.0], [51.7, 1089.0], [51.8, 1090.0], [51.9, 1090.0], [52.0, 1090.0], [52.1, 1090.0], [52.2, 1090.0], [52.3, 1090.0], [52.4, 1090.0], [52.5, 1090.0], [52.6, 1090.0], [52.7, 1090.0], [52.8, 1090.0], [52.9, 1090.0], [53.0, 1091.0], [53.1, 1091.0], [53.2, 1091.0], [53.3, 1091.0], [53.4, 1091.0], [53.5, 1091.0], [53.6, 1091.0], [53.7, 1091.0], [53.8, 1091.0], [53.9, 1091.0], [54.0, 1091.0], [54.1, 1092.0], [54.2, 1092.0], [54.3, 1092.0], [54.4, 1092.0], [54.5, 1092.0], [54.6, 1092.0], [54.7, 1092.0], [54.8, 1092.0], [54.9, 1092.0], [55.0, 1092.0], [55.1, 1092.0], [55.2, 1092.0], [55.3, 1093.0], [55.4, 1093.0], [55.5, 1093.0], [55.6, 1093.0], [55.7, 1093.0], [55.8, 1093.0], [55.9, 1093.0], [56.0, 1093.0], [56.1, 1093.0], [56.2, 1093.0], [56.3, 1094.0], [56.4, 1094.0], [56.5, 1094.0], [56.6, 1094.0], [56.7, 1094.0], [56.8, 1094.0], [56.9, 1094.0], [57.0, 1094.0], [57.1, 1094.0], [57.2, 1094.0], [57.3, 1094.0], [57.4, 1094.0], [57.5, 1094.0], [57.6, 1095.0], [57.7, 1095.0], [57.8, 1095.0], [57.9, 1095.0], [58.0, 1095.0], [58.1, 1095.0], [58.2, 1095.0], [58.3, 1095.0], [58.4, 1095.0], [58.5, 1095.0], [58.6, 1096.0], [58.7, 1096.0], [58.8, 1096.0], [58.9, 1096.0], [59.0, 1096.0], [59.1, 1096.0], [59.2, 1096.0], [59.3, 1096.0], [59.4, 1096.0], [59.5, 1096.0], [59.6, 1096.0], [59.7, 1096.0], [59.8, 1096.0], [59.9, 1096.0], [60.0, 1096.0], [60.1, 1096.0], [60.2, 1097.0], [60.3, 1097.0], [60.4, 1097.0], [60.5, 1097.0], [60.6, 1097.0], [60.7, 1097.0], [60.8, 1097.0], [60.9, 1097.0], [61.0, 1097.0], [61.1, 1097.0], [61.2, 1097.0], [61.3, 1098.0], [61.4, 1098.0], [61.5, 1098.0], [61.6, 1098.0], [61.7, 1098.0], [61.8, 1098.0], [61.9, 1098.0], [62.0, 1098.0], [62.1, 1098.0], [62.2, 1098.0], [62.3, 1098.0], [62.4, 1098.0], [62.5, 1098.0], [62.6, 1098.0], [62.7, 1098.0], [62.8, 1098.0], [62.9, 1098.0], [63.0, 1098.0], [63.1, 1098.0], [63.2, 1098.0], [63.3, 1099.0], [63.4, 1099.0], [63.5, 1099.0], [63.6, 1099.0], [63.7, 1099.0], [63.8, 1099.0], [63.9, 1099.0], [64.0, 1099.0], [64.1, 1099.0], [64.2, 1099.0], [64.3, 1099.0], [64.4, 1099.0], [64.5, 1099.0], [64.6, 1099.0], [64.7, 1099.0], [64.8, 1100.0], [64.9, 1100.0], [65.0, 1100.0], [65.1, 1100.0], [65.2, 1100.0], [65.3, 1100.0], [65.4, 1100.0], [65.5, 1100.0], [65.6, 1100.0], [65.7, 1100.0], [65.8, 1100.0], [65.9, 1100.0], [66.0, 1101.0], [66.1, 1101.0], [66.2, 1101.0], [66.3, 1101.0], [66.4, 1101.0], [66.5, 1101.0], [66.6, 1101.0], [66.7, 1101.0], [66.8, 1101.0], [66.9, 1101.0], [67.0, 1101.0], [67.1, 1101.0], [67.2, 1101.0], [67.3, 1101.0], [67.4, 1101.0], [67.5, 1101.0], [67.6, 1102.0], [67.7, 1102.0], [67.8, 1102.0], [67.9, 1102.0], [68.0, 1102.0], [68.1, 1102.0], [68.2, 1102.0], [68.3, 1102.0], [68.4, 1102.0], [68.5, 1102.0], [68.6, 1102.0], [68.7, 1102.0], [68.8, 1102.0], [68.9, 1102.0], [69.0, 1102.0], [69.1, 1102.0], [69.2, 1103.0], [69.3, 1103.0], [69.4, 1103.0], [69.5, 1103.0], [69.6, 1103.0], [69.7, 1103.0], [69.8, 1103.0], [69.9, 1103.0], [70.0, 1103.0], [70.1, 1103.0], [70.2, 1103.0], [70.3, 1103.0], [70.4, 1103.0], [70.5, 1103.0], [70.6, 1103.0], [70.7, 1103.0], [70.8, 1103.0], [70.9, 1103.0], [71.0, 1104.0], [71.1, 1104.0], [71.2, 1104.0], [71.3, 1104.0], [71.4, 1104.0], [71.5, 1104.0], [71.6, 1104.0], [71.7, 1104.0], [71.8, 1104.0], [71.9, 1104.0], [72.0, 1104.0], [72.1, 1104.0], [72.2, 1104.0], [72.3, 1104.0], [72.4, 1104.0], [72.5, 1104.0], [72.6, 1104.0], [72.7, 1104.0], [72.8, 1104.0], [72.9, 1104.0], [73.0, 1104.0], [73.1, 1104.0], [73.2, 1104.0], [73.3, 1104.0], [73.4, 1104.0], [73.5, 1105.0], [73.6, 1105.0], [73.7, 1105.0], [73.8, 1105.0], [73.9, 1105.0], [74.0, 1105.0], [74.1, 1105.0], [74.2, 1105.0], [74.3, 1105.0], [74.4, 1105.0], [74.5, 1105.0], [74.6, 1105.0], [74.7, 1105.0], [74.8, 1105.0], [74.9, 1105.0], [75.0, 1105.0], [75.1, 1105.0], [75.2, 1105.0], [75.3, 1105.0], [75.4, 1106.0], [75.5, 1106.0], [75.6, 1106.0], [75.7, 1106.0], [75.8, 1106.0], [75.9, 1106.0], [76.0, 1106.0], [76.1, 1106.0], [76.2, 1106.0], [76.3, 1106.0], [76.4, 1106.0], [76.5, 1106.0], [76.6, 1106.0], [76.7, 1106.0], [76.8, 1106.0], [76.9, 1106.0], [77.0, 1106.0], [77.1, 1106.0], [77.2, 1106.0], [77.3, 1106.0], [77.4, 1106.0], [77.5, 1106.0], [77.6, 1106.0], [77.7, 1107.0], [77.8, 1107.0], [77.9, 1107.0], [78.0, 1107.0], [78.1, 1107.0], [78.2, 1107.0], [78.3, 1107.0], [78.4, 1107.0], [78.5, 1107.0], [78.6, 1107.0], [78.7, 1107.0], [78.8, 1107.0], [78.9, 1107.0], [79.0, 1107.0], [79.1, 1107.0], [79.2, 1107.0], [79.3, 1107.0], [79.4, 1108.0], [79.5, 1108.0], [79.6, 1108.0], [79.7, 1108.0], [79.8, 1108.0], [79.9, 1108.0], [80.0, 1108.0], [80.1, 1108.0], [80.2, 1108.0], [80.3, 1108.0], [80.4, 1108.0], [80.5, 1108.0], [80.6, 1108.0], [80.7, 1108.0], [80.8, 1108.0], [80.9, 1108.0], [81.0, 1109.0], [81.1, 1109.0], [81.2, 1109.0], [81.3, 1109.0], [81.4, 1109.0], [81.5, 1109.0], [81.6, 1109.0], [81.7, 1109.0], [81.8, 1109.0], [81.9, 1109.0], [82.0, 1109.0], [82.1, 1109.0], [82.2, 1109.0], [82.3, 1109.0], [82.4, 1109.0], [82.5, 1109.0], [82.6, 1109.0], [82.7, 1109.0], [82.8, 1109.0], [82.9, 1110.0], [83.0, 1110.0], [83.1, 1110.0], [83.2, 1110.0], [83.3, 1110.0], [83.4, 1110.0], [83.5, 1110.0], [83.6, 1110.0], [83.7, 1110.0], [83.8, 1110.0], [83.9, 1110.0], [84.0, 1110.0], [84.1, 1110.0], [84.2, 1110.0], [84.3, 1111.0], [84.4, 1111.0], [84.5, 1111.0], [84.6, 1111.0], [84.7, 1111.0], [84.8, 1111.0], [84.9, 1111.0], [85.0, 1111.0], [85.1, 1111.0], [85.2, 1111.0], [85.3, 1111.0], [85.4, 1111.0], [85.5, 1111.0], [85.6, 1111.0], [85.7, 1112.0], [85.8, 1112.0], [85.9, 1112.0], [86.0, 1112.0], [86.1, 1112.0], [86.2, 1112.0], [86.3, 1112.0], [86.4, 1112.0], [86.5, 1112.0], [86.6, 1112.0], [86.7, 1112.0], [86.8, 1112.0], [86.9, 1112.0], [87.0, 1112.0], [87.1, 1112.0], [87.2, 1112.0], [87.3, 1112.0], [87.4, 1112.0], [87.5, 1113.0], [87.6, 1113.0], [87.7, 1113.0], [87.8, 1113.0], [87.9, 1113.0], [88.0, 1113.0], [88.1, 1113.0], [88.2, 1113.0], [88.3, 1114.0], [88.4, 1114.0], [88.5, 1114.0], [88.6, 1114.0], [88.7, 1114.0], [88.8, 1114.0], [88.9, 1115.0], [89.0, 1115.0], [89.1, 1115.0], [89.2, 1115.0], [89.3, 1115.0], [89.4, 1115.0], [89.5, 1115.0], [89.6, 1115.0], [89.7, 1115.0], [89.8, 1115.0], [89.9, 1115.0], [90.0, 1116.0], [90.1, 1116.0], [90.2, 1116.0], [90.3, 1116.0], [90.4, 1116.0], [90.5, 1116.0], [90.6, 1116.0], [90.7, 1116.0], [90.8, 1117.0], [90.9, 1117.0], [91.0, 1117.0], [91.1, 1117.0], [91.2, 1117.0], [91.3, 1118.0], [91.4, 1119.0], [91.5, 1119.0], [91.6, 1119.0], [91.7, 1119.0], [91.8, 1119.0], [91.9, 1119.0], [92.0, 1119.0], [92.1, 1120.0], [92.2, 1120.0], [92.3, 1120.0], [92.4, 1120.0], [92.5, 1121.0], [92.6, 1121.0], [92.7, 1122.0], [92.8, 1122.0], [92.9, 1123.0], [93.0, 1124.0], [93.1, 1124.0], [93.2, 1124.0], [93.3, 1125.0], [93.4, 1125.0], [93.5, 1125.0], [93.6, 1126.0], [93.7, 1127.0], [93.8, 1127.0], [93.9, 1127.0], [94.0, 1128.0], [94.1, 1128.0], [94.2, 1128.0], [94.3, 1129.0], [94.4, 1130.0], [94.5, 1131.0], [94.6, 1132.0], [94.7, 1132.0], [94.8, 1133.0], [94.9, 1135.0], [95.0, 1137.0], [95.1, 1141.0], [95.2, 1160.0], [95.3, 1202.0], [95.4, 2050.0], [95.5, 2056.0], [95.6, 2061.0], [95.7, 2068.0], [95.8, 2070.0], [95.9, 2073.0], [96.0, 2078.0], [96.1, 2082.0], [96.2, 2082.0], [96.3, 2083.0], [96.4, 2084.0], [96.5, 2085.0], [96.6, 2086.0], [96.7, 2087.0], [96.8, 2089.0], [96.9, 2089.0], [97.0, 2090.0], [97.1, 2091.0], [97.2, 2093.0], [97.3, 2099.0], [97.4, 2100.0], [97.5, 2115.0], [97.6, 2124.0], [97.7, 2153.0], [97.8, 2616.0], [97.9, 2646.0], [98.0, 2659.0], [98.1, 2669.0], [98.2, 2676.0], [98.3, 2690.0], [98.4, 2702.0], [98.5, 2706.0], [98.6, 2710.0], [98.7, 2713.0], [98.8, 2713.0], [98.9, 2721.0], [99.0, 2725.0], [99.1, 2737.0], [99.2, 2739.0], [99.3, 2741.0], [99.4, 2744.0], [99.5, 2749.0], [99.6, 2765.0], [99.7, 3737.0], [99.8, 3817.0], [99.9, 3940.0]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[0.0, 643.0], [0.1, 649.0], [0.2, 651.0], [0.3, 653.0], [0.4, 655.0], [0.5, 658.0], [0.6, 660.0], [0.7, 663.0], [0.8, 668.0], [0.9, 672.0], [1.0, 676.0], [1.1, 676.0], [1.2, 679.0], [1.3, 681.0], [1.4, 681.0], [1.5, 683.0], [1.6, 684.0], [1.7, 686.0], [1.8, 688.0], [1.9, 691.0], [2.0, 692.0], [2.1, 696.0], [2.2, 702.0], [2.3, 706.0], [2.4, 708.0], [2.5, 709.0], [2.6, 710.0], [2.7, 711.0], [2.8, 711.0], [2.9, 712.0], [3.0, 713.0], [3.1, 713.0], [3.2, 715.0], [3.3, 715.0], [3.4, 715.0], [3.5, 716.0], [3.6, 716.0], [3.7, 716.0], [3.8, 717.0], [3.9, 717.0], [4.0, 718.0], [4.1, 718.0], [4.2, 718.0], [4.3, 719.0], [4.4, 719.0], [4.5, 719.0], [4.6, 719.0], [4.7, 720.0], [4.8, 720.0], [4.9, 720.0], [5.0, 721.0], [5.1, 721.0], [5.2, 722.0], [5.3, 723.0], [5.4, 723.0], [5.5, 723.0], [5.6, 724.0], [5.7, 724.0], [5.8, 725.0], [5.9, 726.0], [6.0, 727.0], [6.1, 727.0], [6.2, 728.0], [6.3, 728.0], [6.4, 729.0], [6.5, 729.0], [6.6, 729.0], [6.7, 729.0], [6.8, 730.0], [6.9, 730.0], [7.0, 731.0], [7.1, 731.0], [7.2, 732.0], [7.3, 732.0], [7.4, 732.0], [7.5, 733.0], [7.6, 733.0], [7.7, 734.0], [7.8, 734.0], [7.9, 735.0], [8.0, 735.0], [8.1, 736.0], [8.2, 736.0], [8.3, 737.0], [8.4, 737.0], [8.5, 738.0], [8.6, 738.0], [8.7, 738.0], [8.8, 738.0], [8.9, 738.0], [9.0, 739.0], [9.1, 739.0], [9.2, 739.0], [9.3, 739.0], [9.4, 740.0], [9.5, 740.0], [9.6, 740.0], [9.7, 740.0], [9.8, 741.0], [9.9, 741.0], [10.0, 743.0], [10.1, 744.0], [10.2, 744.0], [10.3, 745.0], [10.4, 745.0], [10.5, 745.0], [10.6, 746.0], [10.7, 746.0], [10.8, 746.0], [10.9, 746.0], [11.0, 746.0], [11.1, 747.0], [11.2, 747.0], [11.3, 748.0], [11.4, 748.0], [11.5, 748.0], [11.6, 749.0], [11.7, 749.0], [11.8, 750.0], [11.9, 750.0], [12.0, 751.0], [12.1, 751.0], [12.2, 752.0], [12.3, 752.0], [12.4, 752.0], [12.5, 753.0], [12.6, 753.0], [12.7, 753.0], [12.8, 753.0], [12.9, 754.0], [13.0, 754.0], [13.1, 754.0], [13.2, 754.0], [13.3, 754.0], [13.4, 754.0], [13.5, 755.0], [13.6, 756.0], [13.7, 756.0], [13.8, 757.0], [13.9, 757.0], [14.0, 757.0], [14.1, 757.0], [14.2, 758.0], [14.3, 758.0], [14.4, 758.0], [14.5, 758.0], [14.6, 759.0], [14.7, 759.0], [14.8, 760.0], [14.9, 760.0], [15.0, 760.0], [15.1, 760.0], [15.2, 762.0], [15.3, 762.0], [15.4, 763.0], [15.5, 763.0], [15.6, 763.0], [15.7, 764.0], [15.8, 764.0], [15.9, 764.0], [16.0, 765.0], [16.1, 766.0], [16.2, 766.0], [16.3, 766.0], [16.4, 767.0], [16.5, 767.0], [16.6, 768.0], [16.7, 768.0], [16.8, 769.0], [16.9, 769.0], [17.0, 769.0], [17.1, 770.0], [17.2, 770.0], [17.3, 771.0], [17.4, 771.0], [17.5, 771.0], [17.6, 771.0], [17.7, 772.0], [17.8, 772.0], [17.9, 772.0], [18.0, 773.0], [18.1, 773.0], [18.2, 774.0], [18.3, 774.0], [18.4, 774.0], [18.5, 774.0], [18.6, 775.0], [18.7, 775.0], [18.8, 775.0], [18.9, 776.0], [19.0, 776.0], [19.1, 776.0], [19.2, 777.0], [19.3, 777.0], [19.4, 777.0], [19.5, 777.0], [19.6, 778.0], [19.7, 778.0], [19.8, 778.0], [19.9, 778.0], [20.0, 778.0], [20.1, 779.0], [20.2, 779.0], [20.3, 779.0], [20.4, 779.0], [20.5, 779.0], [20.6, 780.0], [20.7, 780.0], [20.8, 780.0], [20.9, 781.0], [21.0, 781.0], [21.1, 781.0], [21.2, 782.0], [21.3, 782.0], [21.4, 782.0], [21.5, 782.0], [21.6, 782.0], [21.7, 783.0], [21.8, 783.0], [21.9, 784.0], [22.0, 784.0], [22.1, 784.0], [22.2, 784.0], [22.3, 784.0], [22.4, 784.0], [22.5, 785.0], [22.6, 785.0], [22.7, 785.0], [22.8, 786.0], [22.9, 786.0], [23.0, 787.0], [23.1, 787.0], [23.2, 788.0], [23.3, 788.0], [23.4, 788.0], [23.5, 790.0], [23.6, 790.0], [23.7, 790.0], [23.8, 791.0], [23.9, 791.0], [24.0, 791.0], [24.1, 792.0], [24.2, 792.0], [24.3, 793.0], [24.4, 793.0], [24.5, 793.0], [24.6, 795.0], [24.7, 795.0], [24.8, 797.0], [24.9, 798.0], [25.0, 799.0], [25.1, 801.0], [25.2, 801.0], [25.3, 804.0], [25.4, 808.0], [25.5, 813.0], [25.6, 816.0], [25.7, 819.0], [25.8, 820.0], [25.9, 827.0], [26.0, 833.0], [26.1, 880.0], [26.2, 904.0], [26.3, 928.0], [26.4, 951.0], [26.5, 1051.0], [26.6, 1064.0], [26.7, 1075.0], [26.8, 1080.0], [26.9, 1081.0], [27.0, 1082.0], [27.1, 1082.0], [27.2, 1083.0], [27.3, 1084.0], [27.4, 1086.0], [27.5, 1087.0], [27.6, 1087.0], [27.7, 1088.0], [27.8, 1088.0], [27.9, 1089.0], [28.0, 1089.0], [28.1, 1089.0], [28.2, 1091.0], [28.3, 1091.0], [28.4, 1091.0], [28.5, 1092.0], [28.6, 1093.0], [28.7, 1093.0], [28.8, 1094.0], [28.9, 1094.0], [29.0, 1095.0], [29.1, 1095.0], [29.2, 1095.0], [29.3, 1096.0], [29.4, 1096.0], [29.5, 1096.0], [29.6, 1097.0], [29.7, 1097.0], [29.8, 1097.0], [29.9, 1097.0], [30.0, 1098.0], [30.1, 1098.0], [30.2, 1098.0], [30.3, 1099.0], [30.4, 1099.0], [30.5, 1099.0], [30.6, 1100.0], [30.7, 1100.0], [30.8, 1100.0], [30.9, 1101.0], [31.0, 1101.0], [31.1, 1101.0], [31.2, 1102.0], [31.3, 1102.0], [31.4, 1102.0], [31.5, 1103.0], [31.6, 1103.0], [31.7, 1103.0], [31.8, 1103.0], [31.9, 1103.0], [32.0, 1104.0], [32.1, 1104.0], [32.2, 1104.0], [32.3, 1104.0], [32.4, 1104.0], [32.5, 1105.0], [32.6, 1105.0], [32.7, 1105.0], [32.8, 1105.0], [32.9, 1105.0], [33.0, 1106.0], [33.1, 1106.0], [33.2, 1106.0], [33.3, 1106.0], [33.4, 1106.0], [33.5, 1107.0], [33.6, 1107.0], [33.7, 1107.0], [33.8, 1107.0], [33.9, 1107.0], [34.0, 1107.0], [34.1, 1107.0], [34.2, 1108.0], [34.3, 1108.0], [34.4, 1108.0], [34.5, 1108.0], [34.6, 1109.0], [34.7, 1109.0], [34.8, 1109.0], [34.9, 1109.0], [35.0, 1109.0], [35.1, 1109.0], [35.2, 1110.0], [35.3, 1110.0], [35.4, 1110.0], [35.5, 1110.0], [35.6, 1110.0], [35.7, 1110.0], [35.8, 1110.0], [35.9, 1111.0], [36.0, 1111.0], [36.1, 1111.0], [36.2, 1111.0], [36.3, 1111.0], [36.4, 1112.0], [36.5, 1112.0], [36.6, 1112.0], [36.7, 1112.0], [36.8, 1112.0], [36.9, 1113.0], [37.0, 1113.0], [37.1, 1113.0], [37.2, 1113.0], [37.3, 1113.0], [37.4, 1113.0], [37.5, 1113.0], [37.6, 1113.0], [37.7, 1114.0], [37.8, 1114.0], [37.9, 1114.0], [38.0, 1114.0], [38.1, 1114.0], [38.2, 1114.0], [38.3, 1114.0], [38.4, 1114.0], [38.5, 1115.0], [38.6, 1115.0], [38.7, 1115.0], [38.8, 1115.0], [38.9, 1115.0], [39.0, 1115.0], [39.1, 1115.0], [39.2, 1115.0], [39.3, 1115.0], [39.4, 1116.0], [39.5, 1116.0], [39.6, 1116.0], [39.7, 1116.0], [39.8, 1116.0], [39.9, 1116.0], [40.0, 1116.0], [40.1, 1116.0], [40.2, 1116.0], [40.3, 1116.0], [40.4, 1117.0], [40.5, 1117.0], [40.6, 1117.0], [40.7, 1117.0], [40.8, 1117.0], [40.9, 1117.0], [41.0, 1117.0], [41.1, 1117.0], [41.2, 1117.0], [41.3, 1118.0], [41.4, 1118.0], [41.5, 1118.0], [41.6, 1118.0], [41.7, 1118.0], [41.8, 1118.0], [41.9, 1119.0], [42.0, 1119.0], [42.1, 1119.0], [42.2, 1119.0], [42.3, 1119.0], [42.4, 1119.0], [42.5, 1119.0], [42.6, 1119.0], [42.7, 1120.0], [42.8, 1120.0], [42.9, 1120.0], [43.0, 1120.0], [43.1, 1120.0], [43.2, 1120.0], [43.3, 1120.0], [43.4, 1121.0], [43.5, 1121.0], [43.6, 1121.0], [43.7, 1121.0], [43.8, 1121.0], [43.9, 1121.0], [44.0, 1121.0], [44.1, 1121.0], [44.2, 1121.0], [44.3, 1121.0], [44.4, 1122.0], [44.5, 1122.0], [44.6, 1122.0], [44.7, 1122.0], [44.8, 1122.0], [44.9, 1122.0], [45.0, 1122.0], [45.1, 1122.0], [45.2, 1122.0], [45.3, 1123.0], [45.4, 1123.0], [45.5, 1123.0], [45.6, 1123.0], [45.7, 1123.0], [45.8, 1123.0], [45.9, 1123.0], [46.0, 1123.0], [46.1, 1124.0], [46.2, 1124.0], [46.3, 1124.0], [46.4, 1124.0], [46.5, 1124.0], [46.6, 1124.0], [46.7, 1124.0], [46.8, 1124.0], [46.9, 1124.0], [47.0, 1124.0], [47.1, 1124.0], [47.2, 1125.0], [47.3, 1125.0], [47.4, 1125.0], [47.5, 1125.0], [47.6, 1125.0], [47.7, 1125.0], [47.8, 1125.0], [47.9, 1125.0], [48.0, 1125.0], [48.1, 1125.0], [48.2, 1125.0], [48.3, 1125.0], [48.4, 1125.0], [48.5, 1125.0], [48.6, 1126.0], [48.7, 1126.0], [48.8, 1126.0], [48.9, 1126.0], [49.0, 1126.0], [49.1, 1126.0], [49.2, 1126.0], [49.3, 1126.0], [49.4, 1126.0], [49.5, 1126.0], [49.6, 1126.0], [49.7, 1126.0], [49.8, 1126.0], [49.9, 1127.0], [50.0, 1127.0], [50.1, 1127.0], [50.2, 1127.0], [50.3, 1127.0], [50.4, 1127.0], [50.5, 1127.0], [50.6, 1127.0], [50.7, 1128.0], [50.8, 1128.0], [50.9, 1128.0], [51.0, 1128.0], [51.1, 1128.0], [51.2, 1128.0], [51.3, 1128.0], [51.4, 1128.0], [51.5, 1128.0], [51.6, 1128.0], [51.7, 1128.0], [51.8, 1128.0], [51.9, 1128.0], [52.0, 1129.0], [52.1, 1129.0], [52.2, 1129.0], [52.3, 1129.0], [52.4, 1129.0], [52.5, 1129.0], [52.6, 1129.0], [52.7, 1129.0], [52.8, 1129.0], [52.9, 1129.0], [53.0, 1129.0], [53.1, 1129.0], [53.2, 1130.0], [53.3, 1130.0], [53.4, 1130.0], [53.5, 1130.0], [53.6, 1130.0], [53.7, 1130.0], [53.8, 1130.0], [53.9, 1130.0], [54.0, 1130.0], [54.1, 1130.0], [54.2, 1130.0], [54.3, 1130.0], [54.4, 1130.0], [54.5, 1130.0], [54.6, 1131.0], [54.7, 1131.0], [54.8, 1131.0], [54.9, 1131.0], [55.0, 1131.0], [55.1, 1131.0], [55.2, 1131.0], [55.3, 1131.0], [55.4, 1131.0], [55.5, 1131.0], [55.6, 1131.0], [55.7, 1131.0], [55.8, 1131.0], [55.9, 1131.0], [56.0, 1132.0], [56.1, 1132.0], [56.2, 1132.0], [56.3, 1132.0], [56.4, 1132.0], [56.5, 1132.0], [56.6, 1132.0], [56.7, 1132.0], [56.8, 1132.0], [56.9, 1132.0], [57.0, 1132.0], [57.1, 1132.0], [57.2, 1132.0], [57.3, 1132.0], [57.4, 1132.0], [57.5, 1132.0], [57.6, 1133.0], [57.7, 1133.0], [57.8, 1133.0], [57.9, 1133.0], [58.0, 1133.0], [58.1, 1133.0], [58.2, 1133.0], [58.3, 1133.0], [58.4, 1133.0], [58.5, 1133.0], [58.6, 1133.0], [58.7, 1133.0], [58.8, 1133.0], [58.9, 1133.0], [59.0, 1133.0], [59.1, 1134.0], [59.2, 1134.0], [59.3, 1134.0], [59.4, 1134.0], [59.5, 1134.0], [59.6, 1134.0], [59.7, 1134.0], [59.8, 1134.0], [59.9, 1134.0], [60.0, 1134.0], [60.1, 1134.0], [60.2, 1134.0], [60.3, 1134.0], [60.4, 1134.0], [60.5, 1135.0], [60.6, 1135.0], [60.7, 1135.0], [60.8, 1135.0], [60.9, 1135.0], [61.0, 1135.0], [61.1, 1135.0], [61.2, 1135.0], [61.3, 1135.0], [61.4, 1135.0], [61.5, 1135.0], [61.6, 1135.0], [61.7, 1135.0], [61.8, 1135.0], [61.9, 1135.0], [62.0, 1136.0], [62.1, 1136.0], [62.2, 1136.0], [62.3, 1136.0], [62.4, 1136.0], [62.5, 1136.0], [62.6, 1136.0], [62.7, 1136.0], [62.8, 1136.0], [62.9, 1136.0], [63.0, 1136.0], [63.1, 1137.0], [63.2, 1137.0], [63.3, 1137.0], [63.4, 1137.0], [63.5, 1137.0], [63.6, 1137.0], [63.7, 1137.0], [63.8, 1137.0], [63.9, 1137.0], [64.0, 1137.0], [64.1, 1138.0], [64.2, 1138.0], [64.3, 1138.0], [64.4, 1138.0], [64.5, 1138.0], [64.6, 1138.0], [64.7, 1138.0], [64.8, 1138.0], [64.9, 1138.0], [65.0, 1138.0], [65.1, 1138.0], [65.2, 1138.0], [65.3, 1139.0], [65.4, 1139.0], [65.5, 1139.0], [65.6, 1139.0], [65.7, 1139.0], [65.8, 1139.0], [65.9, 1139.0], [66.0, 1139.0], [66.1, 1139.0], [66.2, 1140.0], [66.3, 1140.0], [66.4, 1140.0], [66.5, 1140.0], [66.6, 1140.0], [66.7, 1140.0], [66.8, 1140.0], [66.9, 1140.0], [67.0, 1140.0], [67.1, 1140.0], [67.2, 1140.0], [67.3, 1140.0], [67.4, 1140.0], [67.5, 1141.0], [67.6, 1141.0], [67.7, 1141.0], [67.8, 1141.0], [67.9, 1141.0], [68.0, 1141.0], [68.1, 1141.0], [68.2, 1141.0], [68.3, 1141.0], [68.4, 1141.0], [68.5, 1142.0], [68.6, 1142.0], [68.7, 1142.0], [68.8, 1142.0], [68.9, 1142.0], [69.0, 1142.0], [69.1, 1142.0], [69.2, 1142.0], [69.3, 1142.0], [69.4, 1142.0], [69.5, 1142.0], [69.6, 1143.0], [69.7, 1143.0], [69.8, 1143.0], [69.9, 1143.0], [70.0, 1143.0], [70.1, 1143.0], [70.2, 1143.0], [70.3, 1143.0], [70.4, 1144.0], [70.5, 1144.0], [70.6, 1144.0], [70.7, 1144.0], [70.8, 1144.0], [70.9, 1144.0], [71.0, 1144.0], [71.1, 1144.0], [71.2, 1144.0], [71.3, 1144.0], [71.4, 1145.0], [71.5, 1145.0], [71.6, 1145.0], [71.7, 1145.0], [71.8, 1145.0], [71.9, 1145.0], [72.0, 1145.0], [72.1, 1146.0], [72.2, 1146.0], [72.3, 1146.0], [72.4, 1146.0], [72.5, 1146.0], [72.6, 1146.0], [72.7, 1146.0], [72.8, 1146.0], [72.9, 1146.0], [73.0, 1147.0], [73.1, 1147.0], [73.2, 1147.0], [73.3, 1147.0], [73.4, 1147.0], [73.5, 1148.0], [73.6, 1148.0], [73.7, 1148.0], [73.8, 1148.0], [73.9, 1148.0], [74.0, 1148.0], [74.1, 1148.0], [74.2, 1148.0], [74.3, 1149.0], [74.4, 1149.0], [74.5, 1150.0], [74.6, 1150.0], [74.7, 1150.0], [74.8, 1150.0], [74.9, 1150.0], [75.0, 1150.0], [75.1, 1151.0], [75.2, 1151.0], [75.3, 1151.0], [75.4, 1151.0], [75.5, 1151.0], [75.6, 1152.0], [75.7, 1152.0], [75.8, 1152.0], [75.9, 1152.0], [76.0, 1152.0], [76.1, 1153.0], [76.2, 1153.0], [76.3, 1153.0], [76.4, 1153.0], [76.5, 1153.0], [76.6, 1154.0], [76.7, 1154.0], [76.8, 1154.0], [76.9, 1154.0], [77.0, 1154.0], [77.1, 1154.0], [77.2, 1155.0], [77.3, 1155.0], [77.4, 1155.0], [77.5, 1156.0], [77.6, 1156.0], [77.7, 1156.0], [77.8, 1156.0], [77.9, 1156.0], [78.0, 1157.0], [78.1, 1157.0], [78.2, 1157.0], [78.3, 1158.0], [78.4, 1160.0], [78.5, 1160.0], [78.6, 1160.0], [78.7, 1160.0], [78.8, 1160.0], [78.9, 1162.0], [79.0, 1162.0], [79.1, 1163.0], [79.2, 1163.0], [79.3, 1164.0], [79.4, 1165.0], [79.5, 1165.0], [79.6, 1167.0], [79.7, 1170.0], [79.8, 1171.0], [79.9, 1174.0], [80.0, 1174.0], [80.1, 1175.0], [80.2, 1176.0], [80.3, 1177.0], [80.4, 1179.0], [80.5, 1180.0], [80.6, 1181.0], [80.7, 1183.0], [80.8, 1184.0], [80.9, 1187.0], [81.0, 1191.0], [81.1, 1193.0], [81.2, 1194.0], [81.3, 1203.0], [81.4, 1216.0], [81.5, 1220.0], [81.6, 1237.0], [81.7, 1264.0], [81.8, 1283.0], [81.9, 1293.0], [82.0, 1296.0], [82.1, 1304.0], [82.2, 1306.0], [82.3, 1319.0], [82.4, 1348.0], [82.5, 1352.0], [82.6, 1366.0], [82.7, 1369.0], [82.8, 1373.0], [82.9, 1380.0], [83.0, 1389.0], [83.1, 1393.0], [83.2, 1399.0], [83.3, 1407.0], [83.4, 1418.0], [83.5, 1426.0], [83.6, 1481.0], [83.7, 1541.0], [83.8, 1551.0], [83.9, 1562.0], [84.0, 1579.0], [84.1, 1584.0], [84.2, 1608.0], [84.3, 1640.0], [84.4, 1662.0], [84.5, 1670.0], [84.6, 1680.0], [84.7, 1685.0], [84.8, 1700.0], [84.9, 1725.0], [85.0, 1732.0], [85.1, 1740.0], [85.2, 1748.0], [85.3, 1757.0], [85.4, 1780.0], [85.5, 1794.0], [85.6, 1807.0], [85.7, 1813.0], [85.8, 1824.0], [85.9, 1826.0], [86.0, 1837.0], [86.1, 1843.0], [86.2, 1853.0], [86.3, 1877.0], [86.4, 1885.0], [86.5, 1919.0], [86.6, 1952.0], [86.7, 2008.0], [86.8, 2036.0], [86.9, 2078.0], [87.0, 2087.0], [87.1, 2098.0], [87.2, 2102.0], [87.3, 2105.0], [87.4, 2107.0], [87.5, 2108.0], [87.6, 2110.0], [87.7, 2113.0], [87.8, 2115.0], [87.9, 2118.0], [88.0, 2119.0], [88.1, 2120.0], [88.2, 2121.0], [88.3, 2122.0], [88.4, 2122.0], [88.5, 2123.0], [88.6, 2124.0], [88.7, 2127.0], [88.8, 2128.0], [88.9, 2133.0], [89.0, 2136.0], [89.1, 2140.0], [89.2, 2145.0], [89.3, 2147.0], [89.4, 2159.0], [89.5, 2164.0], [89.6, 2172.0], [89.7, 2174.0], [89.8, 2176.0], [89.9, 2177.0], [90.0, 2185.0], [90.1, 2401.0], [90.2, 2415.0], [90.3, 2423.0], [90.4, 2438.0], [90.5, 2517.0], [90.6, 2628.0], [90.7, 2643.0], [90.8, 2685.0], [90.9, 2692.0], [91.0, 2711.0], [91.1, 2718.0], [91.2, 2721.0], [91.3, 2727.0], [91.4, 2736.0], [91.5, 2750.0], [91.6, 2758.0], [91.7, 2764.0], [91.8, 2768.0], [91.9, 2772.0], [92.0, 2773.0], [92.1, 2775.0], [92.2, 2778.0], [92.3, 2787.0], [92.4, 2801.0], [92.5, 2858.0], [92.6, 3010.0], [92.7, 3032.0], [92.8, 3037.0], [92.9, 3043.0], [93.0, 3073.0], [93.1, 3123.0], [93.2, 3131.0], [93.3, 3135.0], [93.4, 3144.0], [93.5, 3170.0], [93.6, 3178.0], [93.7, 3184.0], [93.8, 3194.0], [93.9, 3248.0], [94.0, 3272.0], [94.1, 3374.0], [94.2, 3391.0], [94.3, 3394.0], [94.4, 3400.0], [94.5, 3425.0], [94.6, 3441.0], [94.7, 3590.0], [94.8, 3711.0], [94.9, 3770.0], [95.0, 3798.0], [95.1, 3831.0], [95.2, 3875.0], [95.3, 3884.0], [95.4, 4142.0], [95.5, 4170.0], [95.6, 4212.0], [95.7, 4239.0], [95.8, 4269.0], [95.9, 4417.0], [96.0, 4803.0], [96.1, 4853.0], [96.2, 4870.0], [96.3, 5151.0], [96.4, 5156.0], [96.5, 5186.0], [96.6, 5231.0], [96.7, 5377.0], [96.8, 5419.0], [96.9, 5746.0], [97.0, 5814.0], [97.1, 5866.0], [97.2, 6011.0], [97.3, 6145.0], [97.4, 6246.0], [97.5, 6259.0], [97.6, 6695.0], [97.7, 6704.0], [97.8, 6765.0], [97.9, 6776.0], [98.0, 6892.0], [98.1, 6940.0], [98.2, 7120.0], [98.3, 7157.0], [98.4, 7195.0], [98.5, 7201.0], [98.6, 7208.0], [98.7, 7209.0], [98.8, 7232.0], [98.9, 7262.0], [99.0, 7281.0], [99.1, 7320.0], [99.2, 7781.0], [99.3, 7793.0], [99.4, 7854.0], [99.5, 8141.0], [99.6, 8299.0], [99.7, 11632.0], [99.8, 12133.0], [99.9, 12156.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 8.0], [0.1, 9.0], [0.2, 9.0], [0.3, 9.0], [0.4, 9.0], [0.5, 10.0], [0.6, 10.0], [0.7, 10.0], [0.8, 10.0], [0.9, 10.0], [1.0, 10.0], [1.1, 10.0], [1.2, 10.0], [1.3, 10.0], [1.4, 10.0], [1.5, 10.0], [1.6, 10.0], [1.7, 10.0], [1.8, 10.0], [1.9, 10.0], [2.0, 10.0], [2.1, 10.0], [2.2, 10.0], [2.3, 10.0], [2.4, 10.0], [2.5, 10.0], [2.6, 10.0], [2.7, 10.0], [2.8, 10.0], [2.9, 10.0], [3.0, 11.0], [3.1, 11.0], [3.2, 11.0], [3.3, 11.0], [3.4, 11.0], [3.5, 11.0], [3.6, 11.0], [3.7, 11.0], [3.8, 11.0], [3.9, 11.0], [4.0, 11.0], [4.1, 11.0], [4.2, 11.0], [4.3, 11.0], [4.4, 11.0], [4.5, 11.0], [4.6, 11.0], [4.7, 11.0], [4.8, 11.0], [4.9, 11.0], [5.0, 11.0], [5.1, 11.0], [5.2, 11.0], [5.3, 11.0], [5.4, 11.0], [5.5, 11.0], [5.6, 11.0], [5.7, 11.0], [5.8, 11.0], [5.9, 11.0], [6.0, 11.0], [6.1, 11.0], [6.2, 11.0], [6.3, 11.0], [6.4, 11.0], [6.5, 11.0], [6.6, 11.0], [6.7, 11.0], [6.8, 11.0], [6.9, 11.0], [7.0, 11.0], [7.1, 11.0], [7.2, 11.0], [7.3, 11.0], [7.4, 11.0], [7.5, 11.0], [7.6, 11.0], [7.7, 12.0], [7.8, 12.0], [7.9, 12.0], [8.0, 12.0], [8.1, 12.0], [8.2, 12.0], [8.3, 12.0], [8.4, 12.0], [8.5, 12.0], [8.6, 12.0], [8.7, 12.0], [8.8, 12.0], [8.9, 12.0], [9.0, 12.0], [9.1, 12.0], [9.2, 12.0], [9.3, 12.0], [9.4, 12.0], [9.5, 12.0], [9.6, 12.0], [9.7, 12.0], [9.8, 12.0], [9.9, 12.0], [10.0, 12.0], [10.1, 12.0], [10.2, 12.0], [10.3, 12.0], [10.4, 12.0], [10.5, 12.0], [10.6, 12.0], [10.7, 12.0], [10.8, 12.0], [10.9, 12.0], [11.0, 12.0], [11.1, 12.0], [11.2, 12.0], [11.3, 12.0], [11.4, 12.0], [11.5, 12.0], [11.6, 12.0], [11.7, 12.0], [11.8, 12.0], [11.9, 12.0], [12.0, 12.0], [12.1, 12.0], [12.2, 12.0], [12.3, 12.0], [12.4, 12.0], [12.5, 12.0], [12.6, 12.0], [12.7, 12.0], [12.8, 12.0], [12.9, 12.0], [13.0, 12.0], [13.1, 12.0], [13.2, 12.0], [13.3, 12.0], [13.4, 12.0], [13.5, 12.0], [13.6, 12.0], [13.7, 12.0], [13.8, 12.0], [13.9, 12.0], [14.0, 12.0], [14.1, 12.0], [14.2, 12.0], [14.3, 12.0], [14.4, 12.0], [14.5, 12.0], [14.6, 12.0], [14.7, 12.0], [14.8, 12.0], [14.9, 12.0], [15.0, 12.0], [15.1, 12.0], [15.2, 12.0], [15.3, 12.0], [15.4, 12.0], [15.5, 12.0], [15.6, 12.0], [15.7, 12.0], [15.8, 12.0], [15.9, 12.0], [16.0, 12.0], [16.1, 12.0], [16.2, 12.0], [16.3, 12.0], [16.4, 12.0], [16.5, 12.0], [16.6, 13.0], [16.7, 13.0], [16.8, 13.0], [16.9, 13.0], [17.0, 13.0], [17.1, 13.0], [17.2, 13.0], [17.3, 13.0], [17.4, 13.0], [17.5, 13.0], [17.6, 13.0], [17.7, 13.0], [17.8, 13.0], [17.9, 13.0], [18.0, 13.0], [18.1, 13.0], [18.2, 13.0], [18.3, 13.0], [18.4, 13.0], [18.5, 13.0], [18.6, 13.0], [18.7, 13.0], [18.8, 13.0], [18.9, 13.0], [19.0, 13.0], [19.1, 13.0], [19.2, 13.0], [19.3, 13.0], [19.4, 13.0], [19.5, 13.0], [19.6, 13.0], [19.7, 13.0], [19.8, 13.0], [19.9, 13.0], [20.0, 13.0], [20.1, 13.0], [20.2, 13.0], [20.3, 13.0], [20.4, 13.0], [20.5, 13.0], [20.6, 13.0], [20.7, 13.0], [20.8, 13.0], [20.9, 13.0], [21.0, 13.0], [21.1, 13.0], [21.2, 13.0], [21.3, 13.0], [21.4, 13.0], [21.5, 13.0], [21.6, 13.0], [21.7, 13.0], [21.8, 13.0], [21.9, 13.0], [22.0, 13.0], [22.1, 13.0], [22.2, 13.0], [22.3, 13.0], [22.4, 13.0], [22.5, 13.0], [22.6, 13.0], [22.7, 13.0], [22.8, 13.0], [22.9, 13.0], [23.0, 13.0], [23.1, 13.0], [23.2, 13.0], [23.3, 13.0], [23.4, 13.0], [23.5, 13.0], [23.6, 13.0], [23.7, 13.0], [23.8, 13.0], [23.9, 13.0], [24.0, 13.0], [24.1, 13.0], [24.2, 13.0], [24.3, 13.0], [24.4, 13.0], [24.5, 13.0], [24.6, 13.0], [24.7, 13.0], [24.8, 13.0], [24.9, 13.0], [25.0, 13.0], [25.1, 13.0], [25.2, 13.0], [25.3, 13.0], [25.4, 13.0], [25.5, 13.0], [25.6, 13.0], [25.7, 13.0], [25.8, 13.0], [25.9, 13.0], [26.0, 13.0], [26.1, 13.0], [26.2, 13.0], [26.3, 13.0], [26.4, 13.0], [26.5, 13.0], [26.6, 13.0], [26.7, 13.0], [26.8, 13.0], [26.9, 13.0], [27.0, 13.0], [27.1, 13.0], [27.2, 13.0], [27.3, 13.0], [27.4, 13.0], [27.5, 14.0], [27.6, 14.0], [27.7, 14.0], [27.8, 14.0], [27.9, 14.0], [28.0, 14.0], [28.1, 14.0], [28.2, 14.0], [28.3, 14.0], [28.4, 14.0], [28.5, 14.0], [28.6, 14.0], [28.7, 14.0], [28.8, 14.0], [28.9, 14.0], [29.0, 14.0], [29.1, 14.0], [29.2, 14.0], [29.3, 14.0], [29.4, 14.0], [29.5, 14.0], [29.6, 14.0], [29.7, 14.0], [29.8, 14.0], [29.9, 14.0], [30.0, 14.0], [30.1, 14.0], [30.2, 14.0], [30.3, 14.0], [30.4, 14.0], [30.5, 14.0], [30.6, 14.0], [30.7, 14.0], [30.8, 14.0], [30.9, 14.0], [31.0, 14.0], [31.1, 14.0], [31.2, 14.0], [31.3, 14.0], [31.4, 14.0], [31.5, 14.0], [31.6, 14.0], [31.7, 14.0], [31.8, 14.0], [31.9, 14.0], [32.0, 14.0], [32.1, 14.0], [32.2, 14.0], [32.3, 14.0], [32.4, 14.0], [32.5, 14.0], [32.6, 14.0], [32.7, 14.0], [32.8, 14.0], [32.9, 14.0], [33.0, 14.0], [33.1, 14.0], [33.2, 14.0], [33.3, 14.0], [33.4, 14.0], [33.5, 14.0], [33.6, 14.0], [33.7, 14.0], [33.8, 14.0], [33.9, 14.0], [34.0, 14.0], [34.1, 14.0], [34.2, 14.0], [34.3, 14.0], [34.4, 14.0], [34.5, 14.0], [34.6, 14.0], [34.7, 14.0], [34.8, 14.0], [34.9, 14.0], [35.0, 14.0], [35.1, 14.0], [35.2, 14.0], [35.3, 14.0], [35.4, 14.0], [35.5, 14.0], [35.6, 14.0], [35.7, 14.0], [35.8, 14.0], [35.9, 14.0], [36.0, 14.0], [36.1, 14.0], [36.2, 14.0], [36.3, 14.0], [36.4, 14.0], [36.5, 14.0], [36.6, 14.0], [36.7, 14.0], [36.8, 15.0], [36.9, 15.0], [37.0, 15.0], [37.1, 15.0], [37.2, 15.0], [37.3, 15.0], [37.4, 15.0], [37.5, 15.0], [37.6, 15.0], [37.7, 15.0], [37.8, 15.0], [37.9, 15.0], [38.0, 15.0], [38.1, 15.0], [38.2, 15.0], [38.3, 15.0], [38.4, 15.0], [38.5, 15.0], [38.6, 15.0], [38.7, 15.0], [38.8, 15.0], [38.9, 15.0], [39.0, 15.0], [39.1, 15.0], [39.2, 15.0], [39.3, 15.0], [39.4, 15.0], [39.5, 15.0], [39.6, 15.0], [39.7, 15.0], [39.8, 15.0], [39.9, 15.0], [40.0, 15.0], [40.1, 15.0], [40.2, 15.0], [40.3, 15.0], [40.4, 15.0], [40.5, 15.0], [40.6, 15.0], [40.7, 15.0], [40.8, 15.0], [40.9, 15.0], [41.0, 15.0], [41.1, 15.0], [41.2, 15.0], [41.3, 15.0], [41.4, 15.0], [41.5, 15.0], [41.6, 15.0], [41.7, 15.0], [41.8, 15.0], [41.9, 15.0], [42.0, 15.0], [42.1, 15.0], [42.2, 15.0], [42.3, 15.0], [42.4, 15.0], [42.5, 15.0], [42.6, 15.0], [42.7, 15.0], [42.8, 15.0], [42.9, 15.0], [43.0, 15.0], [43.1, 15.0], [43.2, 15.0], [43.3, 15.0], [43.4, 15.0], [43.5, 15.0], [43.6, 15.0], [43.7, 15.0], [43.8, 15.0], [43.9, 15.0], [44.0, 15.0], [44.1, 15.0], [44.2, 15.0], [44.3, 15.0], [44.4, 15.0], [44.5, 15.0], [44.6, 15.0], [44.7, 15.0], [44.8, 15.0], [44.9, 15.0], [45.0, 15.0], [45.1, 16.0], [45.2, 16.0], [45.3, 16.0], [45.4, 16.0], [45.5, 16.0], [45.6, 16.0], [45.7, 16.0], [45.8, 16.0], [45.9, 16.0], [46.0, 16.0], [46.1, 16.0], [46.2, 16.0], [46.3, 16.0], [46.4, 16.0], [46.5, 16.0], [46.6, 16.0], [46.7, 16.0], [46.8, 16.0], [46.9, 16.0], [47.0, 16.0], [47.1, 16.0], [47.2, 16.0], [47.3, 16.0], [47.4, 16.0], [47.5, 16.0], [47.6, 16.0], [47.7, 16.0], [47.8, 16.0], [47.9, 16.0], [48.0, 16.0], [48.1, 16.0], [48.2, 16.0], [48.3, 16.0], [48.4, 16.0], [48.5, 16.0], [48.6, 16.0], [48.7, 16.0], [48.8, 16.0], [48.9, 16.0], [49.0, 16.0], [49.1, 16.0], [49.2, 16.0], [49.3, 16.0], [49.4, 16.0], [49.5, 16.0], [49.6, 16.0], [49.7, 16.0], [49.8, 16.0], [49.9, 16.0], [50.0, 16.0], [50.1, 16.0], [50.2, 16.0], [50.3, 16.0], [50.4, 16.0], [50.5, 16.0], [50.6, 16.0], [50.7, 16.0], [50.8, 16.0], [50.9, 16.0], [51.0, 16.0], [51.1, 16.0], [51.2, 16.0], [51.3, 16.0], [51.4, 16.0], [51.5, 16.0], [51.6, 16.0], [51.7, 16.0], [51.8, 16.0], [51.9, 16.0], [52.0, 16.0], [52.1, 16.0], [52.2, 16.0], [52.3, 16.0], [52.4, 16.0], [52.5, 16.0], [52.6, 16.0], [52.7, 16.0], [52.8, 16.0], [52.9, 16.0], [53.0, 16.0], [53.1, 16.0], [53.2, 16.0], [53.3, 16.0], [53.4, 16.0], [53.5, 16.0], [53.6, 16.0], [53.7, 16.0], [53.8, 16.0], [53.9, 16.0], [54.0, 16.0], [54.1, 16.0], [54.2, 16.0], [54.3, 16.0], [54.4, 16.0], [54.5, 16.0], [54.6, 16.0], [54.7, 16.0], [54.8, 16.0], [54.9, 17.0], [55.0, 17.0], [55.1, 17.0], [55.2, 17.0], [55.3, 17.0], [55.4, 17.0], [55.5, 17.0], [55.6, 17.0], [55.7, 17.0], [55.8, 17.0], [55.9, 17.0], [56.0, 17.0], [56.1, 17.0], [56.2, 17.0], [56.3, 17.0], [56.4, 17.0], [56.5, 17.0], [56.6, 17.0], [56.7, 17.0], [56.8, 17.0], [56.9, 17.0], [57.0, 17.0], [57.1, 17.0], [57.2, 17.0], [57.3, 17.0], [57.4, 17.0], [57.5, 17.0], [57.6, 17.0], [57.7, 17.0], [57.8, 17.0], [57.9, 17.0], [58.0, 17.0], [58.1, 17.0], [58.2, 17.0], [58.3, 17.0], [58.4, 17.0], [58.5, 17.0], [58.6, 17.0], [58.7, 17.0], [58.8, 17.0], [58.9, 17.0], [59.0, 17.0], [59.1, 17.0], [59.2, 17.0], [59.3, 17.0], [59.4, 17.0], [59.5, 17.0], [59.6, 17.0], [59.7, 17.0], [59.8, 17.0], [59.9, 17.0], [60.0, 17.0], [60.1, 17.0], [60.2, 17.0], [60.3, 17.0], [60.4, 17.0], [60.5, 17.0], [60.6, 17.0], [60.7, 17.0], [60.8, 17.0], [60.9, 17.0], [61.0, 17.0], [61.1, 17.0], [61.2, 17.0], [61.3, 17.0], [61.4, 17.0], [61.5, 17.0], [61.6, 18.0], [61.7, 18.0], [61.8, 18.0], [61.9, 18.0], [62.0, 18.0], [62.1, 18.0], [62.2, 18.0], [62.3, 18.0], [62.4, 18.0], [62.5, 18.0], [62.6, 18.0], [62.7, 18.0], [62.8, 18.0], [62.9, 18.0], [63.0, 18.0], [63.1, 18.0], [63.2, 18.0], [63.3, 18.0], [63.4, 18.0], [63.5, 18.0], [63.6, 18.0], [63.7, 18.0], [63.8, 18.0], [63.9, 18.0], [64.0, 18.0], [64.1, 18.0], [64.2, 18.0], [64.3, 18.0], [64.4, 18.0], [64.5, 18.0], [64.6, 18.0], [64.7, 18.0], [64.8, 18.0], [64.9, 18.0], [65.0, 18.0], [65.1, 18.0], [65.2, 18.0], [65.3, 18.0], [65.4, 18.0], [65.5, 18.0], [65.6, 18.0], [65.7, 18.0], [65.8, 18.0], [65.9, 18.0], [66.0, 18.0], [66.1, 18.0], [66.2, 18.0], [66.3, 18.0], [66.4, 18.0], [66.5, 18.0], [66.6, 18.0], [66.7, 18.0], [66.8, 18.0], [66.9, 18.0], [67.0, 18.0], [67.1, 18.0], [67.2, 19.0], [67.3, 19.0], [67.4, 19.0], [67.5, 19.0], [67.6, 19.0], [67.7, 19.0], [67.8, 19.0], [67.9, 19.0], [68.0, 19.0], [68.1, 19.0], [68.2, 19.0], [68.3, 19.0], [68.4, 19.0], [68.5, 19.0], [68.6, 19.0], [68.7, 19.0], [68.8, 19.0], [68.9, 19.0], [69.0, 19.0], [69.1, 19.0], [69.2, 19.0], [69.3, 19.0], [69.4, 19.0], [69.5, 19.0], [69.6, 19.0], [69.7, 19.0], [69.8, 19.0], [69.9, 19.0], [70.0, 19.0], [70.1, 19.0], [70.2, 19.0], [70.3, 19.0], [70.4, 19.0], [70.5, 19.0], [70.6, 19.0], [70.7, 19.0], [70.8, 19.0], [70.9, 19.0], [71.0, 19.0], [71.1, 19.0], [71.2, 19.0], [71.3, 19.0], [71.4, 19.0], [71.5, 19.0], [71.6, 19.0], [71.7, 19.0], [71.8, 19.0], [71.9, 19.0], [72.0, 19.0], [72.1, 19.0], [72.2, 19.0], [72.3, 19.0], [72.4, 19.0], [72.5, 19.0], [72.6, 19.0], [72.7, 19.0], [72.8, 19.0], [72.9, 19.0], [73.0, 20.0], [73.1, 20.0], [73.2, 20.0], [73.3, 20.0], [73.4, 20.0], [73.5, 20.0], [73.6, 20.0], [73.7, 20.0], [73.8, 20.0], [73.9, 20.0], [74.0, 20.0], [74.1, 20.0], [74.2, 20.0], [74.3, 20.0], [74.4, 20.0], [74.5, 20.0], [74.6, 20.0], [74.7, 20.0], [74.8, 20.0], [74.9, 20.0], [75.0, 20.0], [75.1, 20.0], [75.2, 20.0], [75.3, 20.0], [75.4, 20.0], [75.5, 20.0], [75.6, 20.0], [75.7, 20.0], [75.8, 20.0], [75.9, 20.0], [76.0, 20.0], [76.1, 20.0], [76.2, 20.0], [76.3, 20.0], [76.4, 20.0], [76.5, 20.0], [76.6, 20.0], [76.7, 20.0], [76.8, 21.0], [76.9, 21.0], [77.0, 21.0], [77.1, 21.0], [77.2, 21.0], [77.3, 21.0], [77.4, 21.0], [77.5, 21.0], [77.6, 21.0], [77.7, 21.0], [77.8, 21.0], [77.9, 21.0], [78.0, 21.0], [78.1, 21.0], [78.2, 21.0], [78.3, 21.0], [78.4, 21.0], [78.5, 21.0], [78.6, 21.0], [78.7, 21.0], [78.8, 21.0], [78.9, 21.0], [79.0, 21.0], [79.1, 21.0], [79.2, 21.0], [79.3, 21.0], [79.4, 21.0], [79.5, 21.0], [79.6, 21.0], [79.7, 21.0], [79.8, 21.0], [79.9, 21.0], [80.0, 21.0], [80.1, 21.0], [80.2, 21.0], [80.3, 21.0], [80.4, 22.0], [80.5, 22.0], [80.6, 22.0], [80.7, 22.0], [80.8, 22.0], [80.9, 22.0], [81.0, 22.0], [81.1, 22.0], [81.2, 22.0], [81.3, 22.0], [81.4, 22.0], [81.5, 22.0], [81.6, 22.0], [81.7, 22.0], [81.8, 22.0], [81.9, 22.0], [82.0, 22.0], [82.1, 22.0], [82.2, 22.0], [82.3, 22.0], [82.4, 22.0], [82.5, 22.0], [82.6, 22.0], [82.7, 22.0], [82.8, 22.0], [82.9, 22.0], [83.0, 22.0], [83.1, 22.0], [83.2, 22.0], [83.3, 22.0], [83.4, 22.0], [83.5, 22.0], [83.6, 23.0], [83.7, 23.0], [83.8, 23.0], [83.9, 23.0], [84.0, 23.0], [84.1, 23.0], [84.2, 23.0], [84.3, 23.0], [84.4, 23.0], [84.5, 23.0], [84.6, 23.0], [84.7, 23.0], [84.8, 23.0], [84.9, 23.0], [85.0, 23.0], [85.1, 23.0], [85.2, 23.0], [85.3, 23.0], [85.4, 23.0], [85.5, 24.0], [85.6, 24.0], [85.7, 24.0], [85.8, 24.0], [85.9, 24.0], [86.0, 24.0], [86.1, 24.0], [86.2, 24.0], [86.3, 24.0], [86.4, 24.0], [86.5, 24.0], [86.6, 24.0], [86.7, 24.0], [86.8, 24.0], [86.9, 24.0], [87.0, 24.0], [87.1, 24.0], [87.2, 24.0], [87.3, 24.0], [87.4, 24.0], [87.5, 25.0], [87.6, 25.0], [87.7, 25.0], [87.8, 25.0], [87.9, 25.0], [88.0, 25.0], [88.1, 25.0], [88.2, 25.0], [88.3, 25.0], [88.4, 25.0], [88.5, 25.0], [88.6, 25.0], [88.7, 25.0], [88.8, 25.0], [88.9, 25.0], [89.0, 25.0], [89.1, 25.0], [89.2, 25.0], [89.3, 25.0], [89.4, 25.0], [89.5, 25.0], [89.6, 25.0], [89.7, 25.0], [89.8, 25.0], [89.9, 25.0], [90.0, 26.0], [90.1, 26.0], [90.2, 26.0], [90.3, 26.0], [90.4, 26.0], [90.5, 26.0], [90.6, 26.0], [90.7, 26.0], [90.8, 26.0], [90.9, 26.0], [91.0, 26.0], [91.1, 26.0], [91.2, 26.0], [91.3, 26.0], [91.4, 26.0], [91.5, 27.0], [91.6, 27.0], [91.7, 27.0], [91.8, 27.0], [91.9, 27.0], [92.0, 27.0], [92.1, 27.0], [92.2, 27.0], [92.3, 27.0], [92.4, 28.0], [92.5, 28.0], [92.6, 28.0], [92.7, 28.0], [92.8, 28.0], [92.9, 28.0], [93.0, 28.0], [93.1, 28.0], [93.2, 28.0], [93.3, 28.0], [93.4, 28.0], [93.5, 28.0], [93.6, 29.0], [93.7, 29.0], [93.8, 29.0], [93.9, 29.0], [94.0, 29.0], [94.1, 29.0], [94.2, 29.0], [94.3, 29.0], [94.4, 30.0], [94.5, 30.0], [94.6, 30.0], [94.7, 30.0], [94.8, 30.0], [94.9, 31.0], [95.0, 31.0], [95.1, 31.0], [95.2, 32.0], [95.3, 32.0], [95.4, 32.0], [95.5, 32.0], [95.6, 33.0], [95.7, 33.0], [95.8, 33.0], [95.9, 33.0], [96.0, 33.0], [96.1, 34.0], [96.2, 34.0], [96.3, 34.0], [96.4, 34.0], [96.5, 35.0], [96.6, 35.0], [96.7, 35.0], [96.8, 35.0], [96.9, 35.0], [97.0, 35.0], [97.1, 36.0], [97.2, 37.0], [97.3, 37.0], [97.4, 37.0], [97.5, 38.0], [97.6, 38.0], [97.7, 38.0], [97.8, 38.0], [97.9, 39.0], [98.0, 39.0], [98.1, 40.0], [98.2, 40.0], [98.3, 43.0], [98.4, 43.0], [98.5, 44.0], [98.6, 44.0], [98.7, 44.0], [98.8, 46.0], [98.9, 47.0], [99.0, 47.0], [99.1, 48.0], [99.2, 49.0], [99.3, 52.0], [99.4, 52.0], [99.5, 54.0], [99.6, 60.0], [99.7, 63.0], [99.8, 69.0], [99.9, 74.0]], "isOverall": false, "label": "getUserList", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1999.0, "series": [{"data": [[0.0, 1999.0], [200.0, 1.0]], "isOverall": false, "label": "User", "isController": false}, {"data": [[2100.0, 8.0], [600.0, 221.0], [2600.0, 13.0], [700.0, 465.0], [2700.0, 25.0], [800.0, 8.0], [3600.0, 1.0], [3700.0, 2.0], [900.0, 1.0], [3800.0, 2.0], [3900.0, 1.0], [1000.0, 599.0], [1100.0, 611.0], [1200.0, 1.0], [5900.0, 1.0], [2000.0, 40.0], [500.0, 1.0]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[600.0, 44.0], [700.0, 457.0], [800.0, 22.0], [900.0, 6.0], [1000.0, 81.0], [1100.0, 1016.0], [1200.0, 16.0], [1300.0, 23.0], [1400.0, 8.0], [1500.0, 11.0], [1600.0, 12.0], [1700.0, 15.0], [1800.0, 18.0], [1900.0, 5.0], [2000.0, 9.0], [2100.0, 58.0], [2300.0, 1.0], [2400.0, 8.0], [2500.0, 1.0], [2600.0, 8.0], [2700.0, 29.0], [2800.0, 4.0], [3000.0, 9.0], [3100.0, 16.0], [3300.0, 6.0], [3200.0, 5.0], [3400.0, 6.0], [3500.0, 1.0], [3600.0, 1.0], [3700.0, 5.0], [3800.0, 6.0], [3900.0, 1.0], [4100.0, 4.0], [4200.0, 5.0], [4400.0, 2.0], [4800.0, 6.0], [4700.0, 1.0], [5100.0, 5.0], [5300.0, 2.0], [5200.0, 3.0], [5400.0, 2.0], [5800.0, 4.0], [5700.0, 1.0], [6000.0, 1.0], [5900.0, 1.0], [6100.0, 2.0], [6200.0, 5.0], [6600.0, 1.0], [6700.0, 6.0], [6900.0, 2.0], [6800.0, 2.0], [7100.0, 6.0], [7200.0, 13.0], [7300.0, 2.0], [7700.0, 3.0], [7800.0, 2.0], [8100.0, 3.0], [8200.0, 1.0], [9700.0, 1.0], [11600.0, 2.0], [12100.0, 4.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 1999.0], [200.0, 1.0]], "isOverall": false, "label": "getUserList", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 12100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 420.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 4000.0, "series": [{"data": [[0.0, 4000.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3580.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 420.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 453.5780000000007, "minX": 1.67398026E12, "maxY": 453.5780000000007, "series": [{"data": [[1.67398026E12, 453.5780000000007]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67398026E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 9.0, "minX": 1.0, "maxY": 12149.25, "series": [{"data": [[6.0, 19.75], [10.0, 20.0], [16.0, 15.5], [18.0, 14.25], [21.0, 21.0], [56.0, 22.0], [82.0, 19.0], [93.0, 14.0], [99.0, 16.25], [103.0, 12.833333333333334], [102.0, 13.0], [101.0, 14.5], [100.0, 16.0], [107.0, 10.0], [106.0, 16.0], [105.0, 17.5], [104.0, 13.333333333333334], [111.0, 12.5], [110.0, 17.0], [109.0, 10.0], [108.0, 15.5], [115.0, 12.0], [123.0, 13.0], [133.0, 15.0], [132.0, 16.0], [131.0, 15.0], [130.0, 12.75], [128.0, 15.333333333333334], [142.0, 12.0], [141.0, 18.0], [139.0, 13.25], [151.0, 16.0], [149.0, 14.0], [148.0, 15.0], [144.0, 13.0], [152.0, 10.0], [165.0, 11.0], [179.0, 20.0], [186.0, 15.0], [185.0, 12.0], [202.0, 24.0], [209.0, 16.0], [227.0, 13.0], [237.0, 22.33333333333333], [238.0, 43.714285714285715], [244.0, 40.0], [246.0, 27.5], [245.0, 13.0], [243.0, 17.0], [241.0, 11.5], [248.0, 26.0], [253.0, 29.0], [256.0, 52.0], [257.0, 36.66666666666667], [261.0, 42.0], [262.0, 32.333333333333336], [263.0, 14.5], [265.0, 22.0], [266.0, 21.5], [268.0, 15.0], [272.0, 20.75], [274.0, 17.0], [281.0, 31.0], [284.0, 22.0], [289.0, 16.5], [293.0, 15.0], [295.0, 15.0], [302.0, 15.0], [303.0, 12.0], [299.0, 12.0], [316.0, 14.0], [309.0, 18.25], [313.0, 25.125], [314.0, 21.333333333333332], [315.0, 19.099999999999998], [318.0, 14.333333333333334], [311.0, 14.0], [310.0, 15.0], [304.0, 15.0], [332.0, 18.142857142857142], [322.0, 27.5], [320.0, 21.666666666666668], [321.0, 18.0], [323.0, 24.33333333333333], [324.0, 22.0], [326.0, 21.857142857142858], [328.0, 24.25], [330.0, 22.5], [334.0, 13.0], [335.0, 16.777777777777775], [337.0, 15.0], [336.0, 12.666666666666666], [338.0, 21.333333333333332], [339.0, 14.0], [341.0, 19.0], [342.0, 16.666666666666668], [343.0, 16.0], [346.0, 16.0], [349.0, 14.0], [350.0, 19.0], [345.0, 13.0], [347.0, 20.0], [364.0, 16.75], [352.0, 19.0], [354.0, 22.0], [353.0, 12.0], [357.0, 21.333333333333332], [359.0, 12.0], [360.0, 15.0], [362.0, 24.0], [363.0, 12.0], [367.0, 21.0], [366.0, 14.0], [365.0, 16.0], [369.0, 25.0], [372.0, 19.5], [373.0, 21.0], [374.0, 16.0], [378.0, 20.25], [380.0, 26.8], [370.0, 13.0], [387.0, 13.0], [384.0, 25.0], [385.0, 15.333333333333334], [386.0, 13.0], [389.0, 19.142857142857142], [388.0, 29.0], [390.0, 16.0], [396.0, 17.0], [397.0, 12.0], [398.0, 20.5], [393.0, 14.5], [392.0, 16.0], [404.0, 20.5], [408.0, 22.333333333333332], [410.0, 21.0], [412.0, 16.2], [409.0, 20.0], [405.0, 13.1], [402.0, 18.0], [428.0, 12.4], [418.0, 16.0], [419.0, 17.0], [420.0, 22.166666666666668], [421.0, 13.0], [422.0, 16.499999999999996], [423.0, 9.0], [424.0, 16.0], [425.0, 18.25], [426.0, 14.0], [430.0, 21.0], [429.0, 11.0], [439.0, 14.75], [432.0, 15.8], [437.0, 16.666666666666668], [441.0, 22.8], [442.0, 19.0], [443.0, 19.4], [446.0, 16.11111111111111], [444.0, 14.0], [436.0, 16.333333333333332], [462.0, 18.0], [448.0, 14.666666666666666], [455.0, 20.0], [454.0, 12.333333333333334], [453.0, 13.0], [452.0, 16.0], [456.0, 23.5], [459.0, 22.0], [463.0, 15.0], [460.0, 16.0], [450.0, 10.0], [449.0, 11.333333333333334], [461.0, 17.428571428571427], [457.0, 19.0], [458.0, 15.333333333333334], [465.0, 17.0], [466.0, 20.166666666666668], [467.0, 15.0], [476.0, 13.5], [478.0, 18.0], [477.0, 13.666666666666666], [468.0, 15.333333333333334], [470.0, 14.0], [473.0, 21.166666666666668], [472.0, 17.25], [464.0, 14.6], [471.0, 15.0], [469.0, 15.666666666666666], [475.0, 14.8], [492.0, 21.166666666666668], [483.0, 22.428571428571427], [482.0, 18.0], [486.0, 19.000000000000004], [485.0, 19.6], [484.0, 16.8], [487.0, 18.5], [490.0, 19.5], [491.0, 17.375000000000004], [494.0, 15.307692307692308], [495.0, 19.333333333333336], [493.0, 16.9], [489.0, 19.666666666666668], [488.0, 17.5], [498.0, 17.32608695652174], [496.0, 17.000000000000004], [499.0, 18.249999999999996], [497.0, 21.73913043478261], [500.0, 20.453124999999996], [502.0, 21.47692307692308], [503.0, 17.25], [501.0, 17.799999999999997], [504.0, 17.576923076923077], [505.0, 16.793103448275858], [507.0, 17.384615384615383], [506.0, 15.766666666666662], [508.0, 16.769230769230774], [509.0, 16.615384615384606], [510.0, 16.53658536585366], [511.0, 18.771428571428576], [526.0, 16.999999999999996], [512.0, 17.158730158730165], [513.0, 17.36708860759493], [514.0, 16.126984126984127], [517.0, 18.379310344827584], [516.0, 16.703703703703713], [515.0, 15.740740740740744], [518.0, 16.423076923076927], [528.0, 17.444444444444443], [519.0, 18.27777777777778], [529.0, 16.285714285714285], [532.0, 19.0], [531.0, 16.5], [530.0, 16.0], [521.0, 18.666666666666664], [520.0, 18.291666666666668], [522.0, 15.51428571428571], [523.0, 16.72413793103448], [525.0, 15.727272727272727], [524.0, 16.58333333333333], [527.0, 19.384615384615383]], "isOverall": false, "label": "User", "isController": false}, {"data": [[457.3335000000003, 17.921500000000012]], "isOverall": false, "label": "User-Aggregated", "isController": false}, {"data": [[3.0, 2138.5], [5.0, 874.0], [6.0, 592.0], [7.0, 1112.0], [8.0, 1113.0], [9.0, 1105.0], [10.0, 1119.0], [11.0, 611.0], [12.0, 611.0], [13.0, 1127.0], [14.0, 1125.0], [15.0, 640.0], [16.0, 1097.0], [18.0, 2083.5], [19.0, 1098.0], [20.0, 2725.0], [21.0, 2091.0], [22.0, 2669.0], [23.0, 1089.0], [24.0, 617.0], [25.0, 1087.0], [26.0, 1086.0], [27.0, 1080.0], [28.0, 1080.0], [29.0, 1086.0], [30.0, 1088.0], [33.0, 1089.6666666666667], [35.0, 1085.0], [34.0, 1103.0], [37.0, 1095.0], [36.0, 1081.0], [41.0, 1090.0], [40.0, 1089.3333333333333], [42.0, 1088.0], [45.0, 1102.0], [44.0, 1104.5], [47.0, 1105.0], [46.0, 1087.0], [49.0, 1091.0], [48.0, 1102.0], [51.0, 1103.0], [50.0, 1095.0], [53.0, 1101.0], [52.0, 1107.0], [55.0, 1114.0], [54.0, 1109.0], [57.0, 1117.0], [56.0, 1103.0], [58.0, 1114.0], [61.0, 1100.0], [60.0, 1107.0], [63.0, 674.0], [62.0, 677.0], [66.0, 694.0], [64.0, 685.0], [71.0, 713.0], [70.0, 1108.0], [69.0, 703.0], [68.0, 694.5], [75.0, 689.0], [74.0, 1116.0], [73.0, 692.0], [72.0, 1104.0], [79.0, 739.0], [78.0, 1106.0], [77.0, 701.0], [76.0, 702.0], [83.0, 748.0], [82.0, 1105.0], [81.0, 759.0], [80.0, 751.0], [87.0, 789.0], [86.0, 782.0], [85.0, 772.0], [84.0, 1125.0], [91.0, 804.0], [90.0, 789.0], [89.0, 777.0], [88.0, 789.0], [95.0, 809.0], [94.0, 1120.0], [93.0, 798.0], [92.0, 811.0], [99.0, 1122.0], [98.0, 1106.0], [97.0, 814.0], [96.0, 812.0], [103.0, 812.0], [102.0, 1100.0], [101.0, 1107.0], [100.0, 1115.0], [107.0, 1101.0], [106.0, 802.0], [105.0, 1090.0], [104.0, 1120.0], [111.0, 1094.0], [110.0, 1099.0], [109.0, 778.0], [108.0, 1104.0], [115.0, 1099.0], [113.0, 1096.0], [119.0, 1096.0], [118.0, 1095.0], [117.0, 1095.0], [116.0, 1090.0], [123.0, 1105.0], [122.0, 1091.0], [121.0, 1102.0], [120.0, 757.0], [127.0, 1104.0], [126.0, 1105.0], [125.0, 915.0], [135.0, 1101.5], [133.0, 1095.0], [132.0, 1099.0], [131.0, 1096.0], [130.0, 1099.0], [129.0, 1099.0], [128.0, 1094.0], [143.0, 1097.0], [142.0, 1106.0], [141.0, 1103.0], [140.0, 1092.0], [139.0, 1085.0], [138.0, 1106.0], [137.0, 1096.0], [136.0, 1087.0], [151.0, 906.0], [149.0, 1090.0], [148.0, 1099.0], [147.0, 1085.0], [146.0, 1094.5], [144.0, 1094.0], [159.0, 1083.0], [158.0, 707.0], [157.0, 846.6666666666666], [154.0, 710.0], [153.0, 1086.0], [152.0, 1087.0], [167.0, 1088.0], [165.0, 1585.0], [163.0, 1080.0], [162.0, 1090.0], [161.0, 2078.0], [160.0, 1084.0], [175.0, 966.3333333333334], [172.0, 1096.0], [171.0, 692.0], [170.0, 1074.0], [169.0, 893.0], [183.0, 1075.0], [182.0, 2749.0], [181.0, 1076.0], [180.0, 661.0], [179.0, 1082.0], [178.0, 686.0], [177.0, 697.0], [176.0, 1085.0], [191.0, 1061.0], [190.0, 1065.0], [188.0, 1058.0], [186.0, 652.0], [185.0, 862.0], [199.0, 1063.0], [198.0, 653.0], [197.0, 1062.0], [196.0, 1067.0], [195.0, 1059.0], [194.0, 662.0], [193.0, 866.0], [207.0, 654.0], [206.0, 1061.0], [205.0, 1052.0], [204.0, 1067.0], [203.0, 1065.0], [202.0, 1074.0], [201.0, 652.0], [200.0, 1058.0], [215.0, 649.0], [214.0, 1063.0], [213.0, 1059.0], [212.0, 1052.0], [211.0, 1058.0], [210.0, 660.0], [209.0, 1062.0], [208.0, 1066.0], [223.0, 1059.0], [222.0, 1048.0], [221.0, 645.0], [220.0, 1052.0], [219.0, 1057.0], [218.0, 851.5], [216.0, 646.0], [231.0, 1062.0], [230.0, 1055.0], [229.0, 1062.0], [227.0, 1066.0], [226.0, 1053.0], [225.0, 1062.0], [224.0, 1054.0], [239.0, 631.0], [238.0, 2741.0], [237.0, 2061.0], [236.0, 642.0], [234.0, 848.0], [232.0, 1063.0], [247.0, 1054.0], [246.0, 1070.0], [245.0, 1057.0], [244.0, 634.0], [243.0, 1054.0], [242.0, 2722.0], [241.0, 2715.0], [240.0, 1082.0], [255.0, 1064.0], [254.0, 635.0], [253.0, 2721.0], [252.0, 856.5], [250.0, 1067.0], [248.0, 1060.0], [271.0, 626.0], [268.0, 622.0], [266.0, 1061.0], [265.0, 1062.0], [264.0, 773.3333333333334], [261.0, 846.5], [259.0, 632.0], [257.0, 1066.0], [256.0, 646.0], [286.0, 1049.0], [287.0, 1056.0], [285.0, 626.0], [284.0, 1047.0], [283.0, 624.0], [282.0, 633.0], [281.0, 1585.3333333333333], [278.0, 2712.0], [273.0, 1060.5], [275.0, 1050.0], [274.0, 1054.0], [277.0, 1067.0], [276.0, 1067.0], [302.0, 2052.0], [303.0, 1051.0], [301.0, 2056.0], [300.0, 1056.0], [299.0, 1067.0], [297.0, 1067.0], [296.0, 1566.5], [294.0, 613.0], [291.0, 1051.0], [290.0, 2050.0], [289.0, 1055.0], [288.0, 1062.0], [293.0, 835.5], [318.0, 617.0], [319.0, 1058.0], [317.0, 2659.0], [316.0, 1063.0], [315.0, 611.0], [314.0, 1063.0], [313.0, 613.5], [311.0, 2646.0], [305.0, 1055.0], [304.0, 616.0], [307.0, 618.0], [306.0, 1049.0], [310.0, 1054.0], [309.0, 837.5], [333.0, 1057.0], [335.0, 836.5], [332.0, 1060.0], [323.0, 618.0], [322.0, 1063.0], [321.0, 1059.0], [331.0, 1052.0], [330.0, 833.0], [328.0, 609.0], [327.0, 613.0], [326.0, 838.5], [324.0, 637.0], [350.0, 1064.0], [351.0, 1069.0], [349.0, 1069.5], [339.0, 2360.0], [337.0, 635.0], [336.0, 629.0], [347.0, 1072.0], [346.0, 1056.0], [345.0, 1061.0], [344.0, 1060.0], [343.0, 1065.0], [342.0, 1080.0], [341.0, 1073.0], [340.0, 608.0], [366.0, 5932.0], [367.0, 2116.0], [365.0, 1079.0], [364.0, 622.0], [363.0, 1059.0], [362.0, 1064.0], [361.0, 1065.0], [360.0, 771.0], [357.0, 1073.0], [354.0, 2681.0], [353.0, 1067.0], [352.0, 1081.0], [356.0, 838.0], [370.0, 1073.0], [382.0, 854.0], [383.0, 1086.0], [380.0, 635.3333333333334], [369.0, 1073.0], [368.0, 1064.0], [377.0, 1075.0], [376.0, 625.0], [375.0, 625.0], [374.0, 1070.0], [373.0, 1076.0], [372.0, 1073.0], [398.0, 1079.0], [399.0, 626.0], [396.0, 861.5], [387.0, 1083.0], [386.0, 1083.0], [385.0, 1096.0], [384.0, 1073.0], [394.0, 624.0], [393.0, 1069.0], [392.0, 1078.0], [391.0, 622.0], [390.0, 627.0], [389.0, 1160.0], [388.0, 1088.0], [413.0, 731.0], [410.0, 733.0], [412.0, 717.5], [403.0, 1088.0], [402.0, 1075.0], [401.0, 1076.0], [411.0, 740.0], [409.0, 744.5], [415.0, 625.0], [408.0, 1093.0], [407.0, 1091.0], [406.0, 1202.0], [405.0, 1084.0], [404.0, 626.0], [429.0, 1086.0], [416.0, 714.0], [418.0, 1043.6666666666667], [417.0, 795.0], [420.0, 896.5], [421.0, 1083.0], [422.0, 672.0], [423.0, 619.0], [425.0, 900.5], [426.0, 898.5], [430.0, 1099.0], [424.0, 1083.0], [428.0, 855.5], [446.0, 630.0], [439.0, 667.0], [432.0, 858.5], [438.0, 635.0], [437.0, 1099.0], [436.0, 979.75], [444.0, 667.5], [447.0, 1109.0], [445.0, 627.0], [443.0, 625.0], [442.0, 640.0], [441.0, 1088.0], [440.0, 1104.0], [462.0, 933.1428571428572], [463.0, 944.6], [461.0, 864.8], [460.0, 876.5], [459.0, 874.25], [457.0, 1101.5], [458.0, 1100.0], [456.0, 867.5], [454.0, 1111.0], [449.0, 639.0], [448.0, 1092.0], [451.0, 1107.0], [450.0, 636.0], [453.0, 1098.0], [452.0, 1097.0], [466.0, 850.5], [470.0, 756.9999999999999], [469.0, 799.875], [473.0, 929.1111111111111], [472.0, 845.0], [474.0, 1106.0], [475.0, 1109.0], [467.0, 899.5], [476.0, 1116.0], [478.0, 753.1666666666666], [479.0, 645.0], [477.0, 898.5], [465.0, 1007.0], [464.0, 1107.0], [471.0, 1111.0], [468.0, 912.0], [494.0, 945.2500000000001], [487.0, 989.7142857142857], [481.0, 1104.0], [480.0, 3737.0], [483.0, 1112.0], [482.0, 649.0], [493.0, 952.375], [492.0, 968.2857142857142], [491.0, 1022.0], [489.0, 1062.7777777777778], [490.0, 1107.25], [488.0, 990.5], [495.0, 1058.6666666666667], [486.0, 1112.769230769231], [485.0, 1053.4285714285713], [484.0, 1054.7142857142858], [499.0, 1032.7234042553193], [497.0, 1022.08], [496.0, 1043.4347826086957], [502.0, 1061.4594594594596], [501.0, 1045.5915492957745], [500.0, 1108.362068965517], [503.0, 1013.7407407407406], [498.0, 993.9999999999998], [508.0, 942.6666666666667], [511.0, 1025.8837209302324], [504.0, 1135.7441860465112], [510.0, 919.717948717949], [509.0, 1068.3061224489793], [507.0, 1035.7333333333333], [506.0, 944.8148148148148], [505.0, 1099.576923076923], [527.0, 1017.8333333333334], [518.0, 1026.2241379310342], [515.0, 891.7948717948718], [514.0, 991.9999999999998], [513.0, 1113.913043478261], [512.0, 1094.8333333333335], [517.0, 1085.4107142857138], [516.0, 1092.6981132075468], [519.0, 988.7777777777776], [522.0, 1142.0967741935485], [521.0, 969.4242424242425], [520.0, 1015.9743589743587], [526.0, 992.0], [525.0, 927.0555555555554], [524.0, 994.642857142857], [523.0, 1012.6666666666666], [529.0, 877.6666666666667], [530.0, 1113.5], [532.0, 994.3333333333334], [531.0, 949.2222222222223], [528.0, 1033.6], [1.0, 2125.0]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[442.22099999999915, 1028.0790000000002]], "isOverall": false, "label": "CreateUser-Aggregated", "isController": false}, {"data": [[6.0, 12149.25], [10.0, 11633.0], [16.0, 6362.0], [18.0, 6446.666666666667], [19.0, 5746.0], [21.0, 3938.0], [56.0, 8138.0], [83.0, 7790.5], [93.0, 3875.0], [103.0, 5270.25], [102.0, 6301.5], [101.0, 7282.5], [100.0, 8299.0], [107.0, 5231.0], [105.0, 4676.166666666667], [104.0, 4587.666666666667], [111.0, 2125.3333333333335], [110.0, 2124.5], [109.0, 2122.0], [108.0, 5292.388888888889], [115.0, 2116.6666666666665], [117.0, 2113.0], [127.0, 6940.0], [132.0, 4853.0], [131.0, 5378.0], [130.0, 3884.0], [143.0, 7781.0], [141.0, 7803.0], [139.0, 5146.0], [137.0, 5335.0], [151.0, 1748.0], [149.0, 1757.0], [147.0, 2758.0], [144.0, 3770.0], [154.0, 1735.0], [170.0, 2105.0], [181.0, 2787.0], [186.0, 2107.0], [193.0, 2747.0], [207.0, 2793.0], [212.0, 2087.0], [230.0, 2068.0], [232.0, 1277.7333333333331], [234.0, 1233.0], [237.0, 1395.6666666666667], [238.0, 1191.2], [241.0, 904.0], [244.0, 1259.5], [246.0, 2098.0], [243.0, 1316.5], [248.0, 1360.25], [249.0, 1391.0], [252.0, 766.0], [253.0, 7146.5], [256.0, 1039.6666666666667], [261.0, 1256.4], [266.0, 757.0], [268.0, 760.0], [270.0, 755.0], [271.0, 2722.5], [263.0, 7120.0], [259.0, 7119.0], [272.0, 1613.0], [277.0, 771.0], [283.0, 769.0], [284.0, 784.0], [289.0, 767.0], [292.0, 782.0], [298.0, 1579.0], [301.0, 1080.0], [304.0, 1755.3333333333333], [308.0, 1432.3333333333333], [309.0, 1393.2], [310.0, 1669.75], [311.0, 1075.0], [312.0, 1366.1666666666665], [318.0, 1223.5], [313.0, 1275.0], [315.0, 1485.8571428571427], [314.0, 1082.0], [316.0, 1311.6666666666667], [305.0, 1074.0], [317.0, 1700.6666666666667], [332.0, 1508.3333333333333], [322.0, 1244.5], [320.0, 1502.3333333333333], [321.0, 1596.5], [323.0, 1619.3333333333333], [324.0, 1600.3333333333335], [326.0, 1384.6666666666667], [328.0, 1788.0], [329.0, 762.0], [330.0, 1091.3333333333333], [333.0, 1143.5], [334.0, 1482.0], [335.0, 1095.0], [349.0, 2215.6], [336.0, 1187.25], [337.0, 1092.6666666666667], [338.0, 1601.3333333333333], [339.0, 1139.0], [343.0, 1076.3333333333333], [341.0, 1095.0], [347.0, 1142.5], [346.0, 1098.0], [345.0, 1089.0], [344.0, 1028.0], [364.0, 758.0], [354.0, 1151.0], [353.0, 1096.0], [352.0, 1097.0], [355.0, 1097.0], [357.0, 933.0], [356.0, 2968.6666666666665], [359.0, 1132.0], [360.0, 2890.666666666667], [362.0, 786.0], [367.0, 1082.0], [365.0, 1100.5], [363.0, 1097.0], [380.0, 1129.0], [368.0, 984.3333333333334], [369.0, 1154.0], [372.0, 902.3333333333334], [374.0, 1114.8333333333335], [375.0, 1123.0], [378.0, 1149.0], [379.0, 1152.0], [381.0, 1151.0], [382.0, 1128.5], [383.0, 1142.0], [399.0, 1108.0], [384.0, 1027.5], [385.0, 1098.5], [388.0, 1102.75], [386.0, 1140.0], [392.0, 1148.0], [393.0, 971.6666666666666], [395.0, 1140.0], [396.0, 1147.5], [387.0, 1101.0], [398.0, 890.0], [394.0, 1109.5], [414.0, 778.0], [400.0, 1153.0], [404.0, 961.0], [406.0, 5968.0], [405.0, 1108.0], [408.0, 1068.6], [409.0, 897.5], [411.0, 1147.0], [412.0, 1135.75], [401.0, 884.0], [415.0, 1020.0], [413.0, 649.0], [428.0, 880.0], [416.0, 861.0], [419.0, 886.8571428571429], [418.0, 1139.0], [417.0, 688.0], [422.0, 1154.3333333333333], [421.0, 999.5], [423.0, 985.3333333333334], [425.0, 932.1666666666666], [426.0, 1165.0], [427.0, 1181.0], [430.0, 931.5], [439.0, 1032.0], [432.0, 1131.6], [437.0, 1060.75], [438.0, 1211.8], [443.0, 1755.0], [446.0, 966.3333333333334], [445.0, 1131.0], [444.0, 1110.0], [442.0, 1374.0], [441.0, 1124.0], [462.0, 1851.142857142857], [448.0, 1140.0], [449.0, 886.6666666666666], [450.0, 1144.0], [452.0, 1000.1666666666666], [455.0, 1171.0], [454.0, 979.0], [457.0, 2134.9090909090905], [459.0, 2562.625], [458.0, 1127.0], [463.0, 891.3333333333334], [461.0, 1440.0], [460.0, 1014.3333333333334], [471.0, 697.3333333333334], [469.0, 1234.5], [467.0, 1162.0], [468.0, 754.0], [470.0, 874.6666666666666], [472.0, 734.0], [478.0, 811.5], [479.0, 694.0], [476.0, 713.0], [477.0, 853.6666666666666], [473.0, 1132.2], [475.0, 1141.0], [474.0, 686.0], [466.0, 961.7777777777778], [465.0, 1217.857142857143], [464.0, 4057.714285714286], [493.0, 978.375], [487.0, 973.8], [482.0, 1140.0], [486.0, 1275.7499999999998], [490.0, 1269.6], [491.0, 1142.6], [492.0, 916.0999999999999], [483.0, 759.0], [488.0, 940.75], [494.0, 1148.5833333333335], [495.0, 1157.8999999999999], [485.0, 1015.0], [484.0, 924.75], [499.0, 1048.6944444444443], [497.0, 1198.5806451612905], [496.0, 1050.809523809524], [498.0, 1179.8749999999998], [501.0, 1178.9298245614034], [502.0, 1198.6400000000006], [500.0, 1077.19696969697], [503.0, 1170.6341463414642], [507.0, 1470.5000000000002], [511.0, 1237.684210526316], [510.0, 1287.1538461538464], [504.0, 1228.5151515151515], [505.0, 1171.8333333333333], [506.0, 1216.888888888889], [508.0, 1089.428571428571], [509.0, 1051.7499999999998], [524.0, 965.9473684210527], [516.0, 1244.0208333333333], [514.0, 1513.3157894736846], [515.0, 1195.410256410256], [527.0, 1100.7000000000003], [512.0, 1585.4032258064517], [513.0, 1333.684210526316], [525.0, 1341.6923076923078], [526.0, 1088.0], [517.0, 1228.1206896551728], [519.0, 1068.461538461538], [528.0, 1101.3333333333333], [531.0, 956.5], [529.0, 790.0], [530.0, 1148.0], [518.0, 1139.8148148148148], [522.0, 1114.8666666666666], [521.0, 1174.9523809523812], [520.0, 984.1250000000001], [523.0, 1116.464285714286]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[457.1525, 1440.2965000000008]], "isOverall": false, "label": "Login-Aggregated", "isController": false}, {"data": [[6.0, 19.5], [10.0, 13.5], [15.0, 14.0], [16.0, 17.0], [18.0, 14.0], [21.0, 18.0], [52.0, 32.5], [82.0, 13.0], [81.0, 13.0], [93.0, 15.0], [99.0, 15.124999999999998], [103.0, 21.0], [102.0, 15.4], [101.0, 12.0], [100.0, 14.5], [106.0, 18.0], [105.0, 18.75], [104.0, 13.666666666666666], [111.0, 15.333333333333334], [110.0, 18.0], [109.0, 14.0], [108.0, 15.124999999999998], [122.0, 17.0], [127.0, 15.0], [131.0, 13.666666666666666], [129.0, 13.0], [128.0, 12.428571428571427], [142.0, 25.5], [141.0, 12.5], [139.0, 19.0], [138.0, 12.666666666666666], [151.0, 11.0], [149.0, 15.0], [144.0, 37.0], [160.0, 18.0], [181.0, 15.0], [179.0, 12.0], [185.0, 12.0], [196.0, 25.0], [207.0, 16.0], [222.0, 12.0], [238.0, 14.5], [247.0, 31.5], [246.0, 14.0], [243.0, 19.666666666666668], [241.0, 18.0], [248.0, 36.090909090909086], [250.0, 23.0], [269.0, 18.0], [256.0, 47.666666666666664], [257.0, 46.0], [261.0, 42.0], [262.0, 29.0], [263.0, 28.0], [266.0, 17.333333333333332], [267.0, 52.0], [270.0, 19.5], [264.0, 16.0], [275.0, 13.0], [277.0, 17.0], [289.0, 20.0], [293.0, 16.0], [295.0, 22.0], [302.0, 29.5], [303.0, 10.0], [300.0, 14.0], [299.0, 17.0], [297.0, 10.0], [316.0, 15.333333333333334], [313.0, 19.666666666666668], [304.0, 14.333333333333334], [305.0, 20.0], [307.0, 22.0], [306.0, 14.0], [315.0, 15.75], [317.0, 16.0], [318.0, 15.25], [319.0, 24.0], [311.0, 13.0], [310.0, 12.333333333333334], [309.0, 12.0], [332.0, 21.2], [322.0, 35.4], [320.0, 16.0], [321.0, 18.0], [327.0, 12.0], [323.0, 24.8], [324.0, 19.333333333333332], [326.0, 19.555555555555557], [328.0, 21.571428571428573], [329.0, 16.666666666666668], [331.0, 16.0], [330.0, 17.0], [334.0, 24.5], [335.0, 15.5], [338.0, 16.0], [336.0, 23.5], [337.0, 14.0], [343.0, 25.0], [339.0, 15.857142857142858], [341.0, 17.0], [342.0, 16.25], [347.0, 25.0], [349.0, 17.833333333333332], [346.0, 15.0], [345.0, 15.0], [364.0, 18.0], [352.0, 22.6], [354.0, 22.0], [357.0, 21.666666666666668], [356.0, 12.5], [359.0, 16.0], [360.0, 15.25], [363.0, 11.0], [361.0, 12.0], [367.0, 11.0], [366.0, 11.0], [365.0, 16.5], [368.0, 23.5], [369.0, 19.6], [372.0, 25.0], [374.0, 13.333333333333334], [378.0, 16.0], [382.0, 15.5], [383.0, 21.0], [380.0, 24.5], [373.0, 16.0], [384.0, 27.8], [387.0, 15.0], [385.0, 16.0], [388.0, 17.0], [389.0, 14.833333333333332], [390.0, 13.333333333333334], [392.0, 13.5], [393.0, 16.333333333333332], [398.0, 16.25], [391.0, 16.0], [413.0, 17.5], [400.0, 14.0], [404.0, 25.0], [405.0, 12.25], [408.0, 16.0], [411.0, 25.4], [412.0, 19.333333333333332], [403.0, 13.0], [402.0, 15.2], [401.0, 17.0], [409.0, 25.0], [410.0, 13.0], [414.0, 12.0], [430.0, 17.0], [419.0, 14.0], [422.0, 14.5], [421.0, 19.0], [420.0, 35.5], [423.0, 19.0], [426.0, 21.28571428571429], [425.0, 16.0], [427.0, 17.0], [428.0, 12.0], [431.0, 17.0], [429.0, 14.0], [432.0, 16.333333333333332], [437.0, 16.75], [439.0, 23.666666666666668], [443.0, 16.750000000000004], [444.0, 19.8], [446.0, 17.785714285714292], [445.0, 13.5], [441.0, 14.0], [462.0, 22.0], [450.0, 15.5], [451.0, 19.0], [455.0, 23.0], [449.0, 12.0], [448.0, 12.0], [454.0, 11.5], [453.0, 12.0], [452.0, 17.75], [456.0, 30.5], [458.0, 15.285714285714286], [457.0, 19.555555555555557], [459.0, 23.999999999999996], [463.0, 17.714285714285715], [461.0, 20.8], [460.0, 15.666666666666666], [465.0, 18.0], [469.0, 22.166666666666664], [468.0, 21.333333333333332], [470.0, 26.0], [472.0, 21.5], [471.0, 19.5], [464.0, 14.5], [474.0, 20.0], [475.0, 26.0], [473.0, 18.0], [467.0, 28.0], [477.0, 14.375], [476.0, 12.0], [478.0, 16.142857142857142], [466.0, 18.3], [482.0, 16.666666666666668], [481.0, 13.5], [483.0, 19.0], [492.0, 17.666666666666668], [493.0, 17.25], [485.0, 18.272727272727273], [484.0, 21.0], [487.0, 17.2], [486.0, 19.92857142857143], [491.0, 18.076923076923077], [490.0, 21.5], [494.0, 13.88888888888889], [489.0, 21.4], [488.0, 21.0], [495.0, 18.61904761904762], [498.0, 17.919999999999998], [499.0, 20.093023255813947], [497.0, 19.807692307692307], [496.0, 17.157894736842106], [500.0, 17.000000000000004], [501.0, 18.26229508196722], [503.0, 16.47368421052631], [502.0, 17.363636363636363], [504.0, 16.7027027027027], [507.0, 17.564102564102562], [506.0, 18.774193548387096], [505.0, 17.48387096774193], [511.0, 15.86666666666666], [510.0, 19.333333333333332], [509.0, 16.86111111111111], [508.0, 17.333333333333332], [524.0, 19.0], [512.0, 16.85964912280702], [515.0, 15.811320754716979], [513.0, 15.957142857142852], [514.0, 16.166666666666664], [527.0, 22.25], [516.0, 15.694915254237287], [517.0, 18.0], [518.0, 17.041666666666664], [528.0, 16.153846153846153], [519.0, 17.41176470588235], [529.0, 16.0], [530.0, 18.2], [532.0, 14.666666666666666], [531.0, 15.8], [521.0, 17.5], [520.0, 20.44827586206897], [522.0, 16.527777777777775], [523.0, 34.74999999999999], [525.0, 19.142857142857142], [526.0, 17.000000000000004]], "isOverall": false, "label": "getUserList", "isController": false}, {"data": [[457.60499999999956, 17.956000000000042]], "isOverall": false, "label": "getUserList-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 532.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 27133.333333333332, "minX": 1.67398026E12, "maxY": 139203.63333333333, "series": [{"data": [[1.67398026E12, 139203.63333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.67398026E12, 27133.333333333332]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67398026E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 17.921500000000012, "minX": 1.67398026E12, "maxY": 1440.2965000000008, "series": [{"data": [[1.67398026E12, 17.921500000000012]], "isOverall": false, "label": "User", "isController": false}, {"data": [[1.67398026E12, 1028.0790000000002]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[1.67398026E12, 1440.2965000000008]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.67398026E12, 17.956000000000042]], "isOverall": false, "label": "getUserList", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67398026E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 17.790999999999986, "minX": 1.67398026E12, "maxY": 1440.253, "series": [{"data": [[1.67398026E12, 17.912]], "isOverall": false, "label": "User", "isController": false}, {"data": [[1.67398026E12, 1028.072999999999]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[1.67398026E12, 1440.253]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.67398026E12, 17.790999999999986]], "isOverall": false, "label": "getUserList", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67398026E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.67398026E12, "maxY": 377.4005000000003, "series": [{"data": [[1.67398026E12, 0.0]], "isOverall": false, "label": "User", "isController": false}, {"data": [[1.67398026E12, 0.0]], "isOverall": false, "label": "CreateUser", "isController": false}, {"data": [[1.67398026E12, 377.4005000000003]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.67398026E12, 0.0]], "isOverall": false, "label": "getUserList", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67398026E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 8.0, "minX": 1.67398026E12, "maxY": 12162.0, "series": [{"data": [[1.67398026E12, 12162.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.67398026E12, 8.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.67398026E12, 1138.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.67398026E12, 4835.669999999993]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.67398026E12, 428.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.67398026E12, 1680.9499999999998]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67398026E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 24.0, "minX": 2.0, "maxY": 2125.0, "series": [{"data": [[2.0, 874.0], [677.0, 25.0], [44.0, 925.5], [750.0, 699.5], [795.0, 745.0], [774.0, 36.5], [797.0, 620.0], [3.0, 2125.0], [807.0, 716.0], [819.0, 34.0], [823.0, 680.0], [840.0, 41.5], [294.0, 24.0], [20.0, 30.5], [85.0, 1087.0], [439.0, 1048.0], [31.0, 640.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 840.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 23.5, "minX": 2.0, "maxY": 2125.0, "series": [{"data": [[2.0, 874.0], [677.0, 25.0], [44.0, 922.5], [750.0, 699.5], [795.0, 745.0], [774.0, 36.5], [797.0, 620.0], [3.0, 2125.0], [807.0, 716.0], [819.0, 33.0], [823.0, 680.0], [840.0, 41.5], [294.0, 23.5], [20.0, 30.5], [85.0, 1087.0], [439.0, 1048.0], [31.0, 640.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 840.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 133.33333333333334, "minX": 1.67398026E12, "maxY": 133.33333333333334, "series": [{"data": [[1.67398026E12, 133.33333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67398026E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 33.333333333333336, "minX": 1.67398026E12, "maxY": 100.0, "series": [{"data": [[1.67398026E12, 100.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.67398026E12, 33.333333333333336]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67398026E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 33.333333333333336, "minX": 1.67398026E12, "maxY": 33.333333333333336, "series": [{"data": [[1.67398026E12, 33.333333333333336]], "isOverall": false, "label": "User-success", "isController": false}, {"data": [[1.67398026E12, 33.333333333333336]], "isOverall": false, "label": "getUserList-success", "isController": false}, {"data": [[1.67398026E12, 33.333333333333336]], "isOverall": false, "label": "CreateUser-success", "isController": false}, {"data": [[1.67398026E12, 33.333333333333336]], "isOverall": false, "label": "Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67398026E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 133.33333333333334, "minX": 1.67398026E12, "maxY": 133.33333333333334, "series": [{"data": [[1.67398026E12, 133.33333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67398026E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

